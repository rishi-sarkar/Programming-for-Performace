<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="108752330"><g><title>[anon] (4,000,709 samples, 3.68%)</title><rect x="0.0000%" y="709" width="3.6787%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4000709"/><text x="0.2500%" y="719.50">[ano..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (4,000,709 samples, 3.68%)</title><rect x="0.0000%" y="693" width="3.6787%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4000709"/><text x="0.2500%" y="703.50">&lt;cor..</text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="693" width="1.0946%" height="15" fill="rgb(221,193,54)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="703.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="677" width="1.0946%" height="15" fill="rgb(248,212,6)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="687.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="661" width="1.0946%" height="15" fill="rgb(208,68,35)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="671.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="645" width="1.0946%" height="15" fill="rgb(232,128,0)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="655.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="629" width="1.0946%" height="15" fill="rgb(207,160,47)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="639.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="613" width="1.0946%" height="15" fill="rgb(228,23,34)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="623.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="597" width="1.0946%" height="15" fill="rgb(218,30,26)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="607.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="581" width="1.0946%" height="15" fill="rgb(220,122,19)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="591.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="565" width="1.0946%" height="15" fill="rgb(250,228,42)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="575.50"></text></g><g><title>[unknown] (1,190,457 samples, 1.09%)</title><rect x="3.6787%" y="549" width="1.0946%" height="15" fill="rgb(240,193,28)" fg:x="4000709" fg:w="1190457"/><text x="3.9287%" y="559.50"></text></g><g><title>[unknown] (566,568 samples, 0.52%)</title><rect x="4.2524%" y="533" width="0.5210%" height="15" fill="rgb(216,20,37)" fg:x="4624598" fg:w="566568"/><text x="4.5024%" y="543.50"></text></g><g><title>[unknown] (566,568 samples, 0.52%)</title><rect x="4.2524%" y="517" width="0.5210%" height="15" fill="rgb(206,188,39)" fg:x="4624598" fg:w="566568"/><text x="4.5024%" y="527.50"></text></g><g><title>[unknown] (566,568 samples, 0.52%)</title><rect x="4.2524%" y="501" width="0.5210%" height="15" fill="rgb(217,207,13)" fg:x="4624598" fg:w="566568"/><text x="4.5024%" y="511.50"></text></g><g><title>[unknown] (566,568 samples, 0.52%)</title><rect x="4.2524%" y="485" width="0.5210%" height="15" fill="rgb(231,73,38)" fg:x="4624598" fg:w="566568"/><text x="4.5024%" y="495.50"></text></g><g><title>__GI___clone (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="693" width="4.5974%" height="15" fill="rgb(225,20,46)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="703.50">__GI_..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="677" width="4.5974%" height="15" fill="rgb(210,31,41)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="687.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="661" width="4.5974%" height="15" fill="rgb(221,200,47)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="671.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="645" width="4.5974%" height="15" fill="rgb(226,26,5)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="655.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="629" width="4.5974%" height="15" fill="rgb(249,33,26)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="639.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="613" width="4.5974%" height="15" fill="rgb(235,183,28)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="623.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="597" width="4.5974%" height="15" fill="rgb(221,5,38)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="607.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="581" width="4.5974%" height="15" fill="rgb(247,18,42)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="591.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="565" width="4.5974%" height="15" fill="rgb(241,131,45)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="575.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="549" width="4.5974%" height="15" fill="rgb(249,31,29)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="559.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="533" width="4.5974%" height="15" fill="rgb(225,111,53)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="543.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="517" width="4.5974%" height="15" fill="rgb(238,160,17)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="527.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="501" width="4.5974%" height="15" fill="rgb(214,148,48)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="511.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="485" width="4.5974%" height="15" fill="rgb(232,36,49)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="495.50">[unkn..</text></g><g><title>[unknown] (4,999,827 samples, 4.60%)</title><rect x="4.7734%" y="469" width="4.5974%" height="15" fill="rgb(209,103,24)" fg:x="5191166" fg:w="4999827"/><text x="5.0234%" y="479.50">[unkn..</text></g><g><title>[unknown] (6,664,399 samples, 6.13%)</title><rect x="3.6787%" y="709" width="6.1281%" height="15" fill="rgb(229,88,8)" fg:x="4000709" fg:w="6664399"/><text x="3.9287%" y="719.50">[unknown]</text></g><g><title>__GI___get_nprocs (474,115 samples, 0.44%)</title><rect x="9.3708%" y="693" width="0.4360%" height="15" fill="rgb(213,181,19)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="703.50"></text></g><g><title>__GI___open64_nocancel (474,115 samples, 0.44%)</title><rect x="9.3708%" y="677" width="0.4360%" height="15" fill="rgb(254,191,54)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="687.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="661" width="0.4360%" height="15" fill="rgb(241,83,37)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="671.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="645" width="0.4360%" height="15" fill="rgb(233,36,39)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="655.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="629" width="0.4360%" height="15" fill="rgb(226,3,54)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="639.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="613" width="0.4360%" height="15" fill="rgb(245,192,40)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="623.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="597" width="0.4360%" height="15" fill="rgb(238,167,29)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="607.50"></text></g><g><title>[unknown] (474,115 samples, 0.44%)</title><rect x="9.3708%" y="581" width="0.4360%" height="15" fill="rgb(232,182,51)" fg:x="10190993" fg:w="474115"/><text x="9.6208%" y="591.50"></text></g><g><title>[unknown] (611,539 samples, 0.56%)</title><rect x="9.8068%" y="693" width="0.5623%" height="15" fill="rgb(231,60,39)" fg:x="10665108" fg:w="611539"/><text x="10.0568%" y="703.50"></text></g><g><title>[unknown] (611,539 samples, 0.56%)</title><rect x="9.8068%" y="677" width="0.5623%" height="15" fill="rgb(208,69,12)" fg:x="10665108" fg:w="611539"/><text x="10.0568%" y="687.50"></text></g><g><title>[unknown] (611,539 samples, 0.56%)</title><rect x="9.8068%" y="661" width="0.5623%" height="15" fill="rgb(235,93,37)" fg:x="10665108" fg:w="611539"/><text x="10.0568%" y="671.50"></text></g><g><title>[unknown] (526,261 samples, 0.48%)</title><rect x="9.8852%" y="645" width="0.4839%" height="15" fill="rgb(213,116,39)" fg:x="10750386" fg:w="526261"/><text x="10.1352%" y="655.50"></text></g><g><title>[unknown] (526,261 samples, 0.48%)</title><rect x="9.8852%" y="629" width="0.4839%" height="15" fill="rgb(222,207,29)" fg:x="10750386" fg:w="526261"/><text x="10.1352%" y="639.50"></text></g><g><title>[unknown] (526,261 samples, 0.48%)</title><rect x="9.8852%" y="613" width="0.4839%" height="15" fill="rgb(206,96,30)" fg:x="10750386" fg:w="526261"/><text x="10.1352%" y="623.50"></text></g><g><title>[unknown] (526,261 samples, 0.48%)</title><rect x="9.8852%" y="597" width="0.4839%" height="15" fill="rgb(218,138,4)" fg:x="10750386" fg:w="526261"/><text x="10.1352%" y="607.50"></text></g><g><title>[unknown] (526,261 samples, 0.48%)</title><rect x="9.8852%" y="581" width="0.4839%" height="15" fill="rgb(250,191,14)" fg:x="10750386" fg:w="526261"/><text x="10.1352%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="469" width="5.4715%" height="15" fill="rgb(239,60,40)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="479.50">alloc::..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="453" width="5.4715%" height="15" fill="rgb(206,27,48)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="463.50">alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="437" width="5.4715%" height="15" fill="rgb(225,35,8)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="447.50">alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="421" width="5.4715%" height="15" fill="rgb(250,213,24)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="431.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="405" width="5.4715%" height="15" fill="rgb(247,123,22)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="415.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="389" width="5.4715%" height="15" fill="rgb(231,138,38)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="399.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="373" width="5.4715%" height="15" fill="rgb(231,145,46)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="383.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="357" width="5.4715%" height="15" fill="rgb(251,118,11)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="367.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="341" width="5.4715%" height="15" fill="rgb(217,147,25)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="351.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="325" width="5.4715%" height="15" fill="rgb(247,81,37)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="335.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="309" width="5.4715%" height="15" fill="rgb(209,12,38)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="319.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="293" width="5.4715%" height="15" fill="rgb(227,1,9)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="303.50">alloc::..</text></g><g><title>alloc::alloc::alloc (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="277" width="5.4715%" height="15" fill="rgb(248,47,43)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="287.50">alloc::..</text></g><g><title>__GI___libc_malloc (5,950,351 samples, 5.47%)</title><rect x="10.3691%" y="261" width="5.4715%" height="15" fill="rgb(221,10,30)" fg:x="11276647" fg:w="5950351"/><text x="10.6191%" y="271.50">__GI___..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="469" width="3.9895%" height="15" fill="rgb(210,229,1)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="479.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="453" width="3.9895%" height="15" fill="rgb(222,148,37)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="463.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="437" width="3.9895%" height="15" fill="rgb(234,67,33)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="447.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="421" width="3.9895%" height="15" fill="rgb(247,98,35)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="431.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="405" width="3.9895%" height="15" fill="rgb(247,138,52)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="415.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="389" width="3.9895%" height="15" fill="rgb(213,79,30)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="399.50">allo..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="373" width="3.9895%" height="15" fill="rgb(246,177,23)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="383.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="357" width="3.9895%" height="15" fill="rgb(230,62,27)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="367.50">&lt;cor..</text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="341" width="3.9895%" height="15" fill="rgb(216,154,8)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="351.50">&lt;cor..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="325" width="3.9895%" height="15" fill="rgb(244,35,45)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="335.50">core..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="309" width="3.9895%" height="15" fill="rgb(251,115,12)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="319.50">&lt;cor..</text></g><g><title>core::slice::memchr::memchr (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="293" width="3.9895%" height="15" fill="rgb(240,54,50)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="303.50">core..</text></g><g><title>core::slice::memchr::memchr_aligned (4,338,634 samples, 3.99%)</title><rect x="15.8406%" y="277" width="3.9895%" height="15" fill="rgb(233,84,52)" fg:x="17226998" fg:w="4338634"/><text x="16.0906%" y="287.50">core..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4,207,762 samples, 3.87%)</title><rect x="19.8300%" y="421" width="3.8691%" height="15" fill="rgb(207,117,47)" fg:x="21565632" fg:w="4207762"/><text x="20.0800%" y="431.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4,207,762 samples, 3.87%)</title><rect x="19.8300%" y="405" width="3.8691%" height="15" fill="rgb(249,43,39)" fg:x="21565632" fg:w="4207762"/><text x="20.0800%" y="415.50">core..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,645,097 samples, 1.51%)</title><rect x="23.6992%" y="405" width="1.5127%" height="15" fill="rgb(209,38,44)" fg:x="25773394" fg:w="1645097"/><text x="23.9492%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,645,097 samples, 1.51%)</title><rect x="23.6992%" y="389" width="1.5127%" height="15" fill="rgb(236,212,23)" fg:x="25773394" fg:w="1645097"/><text x="23.9492%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1,645,097 samples, 1.51%)</title><rect x="23.6992%" y="373" width="1.5127%" height="15" fill="rgb(242,79,21)" fg:x="25773394" fg:w="1645097"/><text x="23.9492%" y="383.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (13,254,692 samples, 12.19%)</title><rect x="19.8300%" y="469" width="12.1880%" height="15" fill="rgb(211,96,35)" fg:x="21565632" fg:w="13254692"/><text x="20.0800%" y="479.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (13,254,692 samples, 12.19%)</title><rect x="19.8300%" y="453" width="12.1880%" height="15" fill="rgb(253,215,40)" fg:x="21565632" fg:w="13254692"/><text x="20.0800%" y="463.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (13,254,692 samples, 12.19%)</title><rect x="19.8300%" y="437" width="12.1880%" height="15" fill="rgb(211,81,21)" fg:x="21565632" fg:w="13254692"/><text x="20.0800%" y="447.50">crossbeam_channel:..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (9,046,930 samples, 8.32%)</title><rect x="23.6992%" y="421" width="8.3188%" height="15" fill="rgb(208,190,38)" fg:x="25773394" fg:w="9046930"/><text x="23.9492%" y="431.50">crossbeam_ut..</text></g><g><title>core::sync::atomic::spin_loop_hint (7,401,833 samples, 6.81%)</title><rect x="25.2119%" y="405" width="6.8061%" height="15" fill="rgb(235,213,38)" fg:x="27418491" fg:w="7401833"/><text x="25.4619%" y="415.50">core::syn..</text></g><g><title>core::hint::spin_loop (7,401,833 samples, 6.81%)</title><rect x="25.2119%" y="389" width="6.8061%" height="15" fill="rgb(237,122,38)" fg:x="27418491" fg:w="7401833"/><text x="25.4619%" y="399.50">core::hin..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7,401,833 samples, 6.81%)</title><rect x="25.2119%" y="373" width="6.8061%" height="15" fill="rgb(244,218,35)" fg:x="27418491" fg:w="7401833"/><text x="25.4619%" y="383.50">core::cor..</text></g><g><title>sha2::sha256::soft::schedule (1,451,057 samples, 1.33%)</title><rect x="32.0180%" y="277" width="1.3343%" height="15" fill="rgb(240,68,47)" fg:x="34820324" fg:w="1451057"/><text x="32.2680%" y="287.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1,451,057 samples, 1.33%)</title><rect x="32.0180%" y="261" width="1.3343%" height="15" fill="rgb(210,16,53)" fg:x="34820324" fg:w="1451057"/><text x="32.2680%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1,451,057 samples, 1.33%)</title><rect x="32.0180%" y="245" width="1.3343%" height="15" fill="rgb(235,124,12)" fg:x="34820324" fg:w="1451057"/><text x="32.2680%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (5,531,331 samples, 5.09%)</title><rect x="38.0041%" y="261" width="5.0862%" height="15" fill="rgb(224,169,11)" fg:x="41330318" fg:w="5531331"/><text x="38.2541%" y="271.50">core::..</text></g><g><title>lab4::package::PackageDownloader::run (37,230,099 samples, 34.23%)</title><rect x="10.3691%" y="485" width="34.2338%" height="15" fill="rgb(250,166,2)" fg:x="11276647" fg:w="37230099"/><text x="10.6191%" y="495.50">lab4::package::PackageDownloader::run</text></g><g><title>lab4::checksum::Checksum::with_sha256 (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="469" width="12.5849%" height="15" fill="rgb(242,216,29)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="479.50">lab4::checksum::Che..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="453" width="12.5849%" height="15" fill="rgb(230,116,27)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="463.50">&lt;D as digest::diges..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="437" width="12.5849%" height="15" fill="rgb(228,99,48)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="447.50">digest::fixed::Fixe..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="421" width="12.5849%" height="15" fill="rgb(253,11,6)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="431.50">&lt;D as digest::fixed..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="405" width="12.5849%" height="15" fill="rgb(247,143,39)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="415.50">&lt;sha2::sha256::Sha2..</text></g><g><title>sha2::sha256::Engine256::finish (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="389" width="12.5849%" height="15" fill="rgb(236,97,10)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="399.50">sha2::sha256::Engin..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="373" width="12.5849%" height="15" fill="rgb(233,208,19)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="383.50">block_buffer::Block..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="357" width="12.5849%" height="15" fill="rgb(216,164,2)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="367.50">sha2::sha256::Engin..</text></g><g><title>sha2::sha256::compress256 (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="341" width="12.5849%" height="15" fill="rgb(220,129,5)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="351.50">sha2::sha256::compr..</text></g><g><title>sha2::sha256::x86::compress (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="325" width="12.5849%" height="15" fill="rgb(242,17,10)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="335.50">sha2::sha256::x86::..</text></g><g><title>sha2::sha256::soft::compress (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="309" width="12.5849%" height="15" fill="rgb(242,107,0)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="319.50">sha2::sha256::soft:..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (13,686,422 samples, 12.58%)</title><rect x="32.0180%" y="293" width="12.5849%" height="15" fill="rgb(251,28,31)" fg:x="34820324" fg:w="13686422"/><text x="32.2680%" y="303.50">sha2::sha256::soft:..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (12,235,365 samples, 11.25%)</title><rect x="33.3523%" y="277" width="11.2507%" height="15" fill="rgb(233,223,10)" fg:x="36271381" fg:w="12235365"/><text x="33.6023%" y="287.50">sha2::sha256::sof..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1,645,097 samples, 1.51%)</title><rect x="43.0902%" y="261" width="1.5127%" height="15" fill="rgb(215,21,27)" fg:x="46861649" fg:w="1645097"/><text x="43.3402%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (249,998 samples, 0.23%)</title><rect x="44.6029%" y="469" width="0.2299%" height="15" fill="rgb(232,23,21)" fg:x="48506746" fg:w="249998"/><text x="44.8529%" y="479.50"></text></g><g><title>core::ptr::write (249,998 samples, 0.23%)</title><rect x="44.6029%" y="453" width="0.2299%" height="15" fill="rgb(244,5,23)" fg:x="48506746" fg:w="249998"/><text x="44.8529%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (232,812 samples, 0.21%)</title><rect x="44.8328%" y="453" width="0.2141%" height="15" fill="rgb(226,81,46)" fg:x="48756744" fg:w="232812"/><text x="45.0828%" y="463.50"></text></g><g><title>crossbeam_channel::context::Context::with (311,803 samples, 0.29%)</title><rect x="45.0469%" y="437" width="0.2867%" height="15" fill="rgb(247,70,30)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (311,803 samples, 0.29%)</title><rect x="45.0469%" y="421" width="0.2867%" height="15" fill="rgb(212,68,19)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="431.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (311,803 samples, 0.29%)</title><rect x="45.0469%" y="405" width="0.2867%" height="15" fill="rgb(240,187,13)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="415.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (311,803 samples, 0.29%)</title><rect x="45.0469%" y="389" width="0.2867%" height="15" fill="rgb(223,113,26)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="399.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (311,803 samples, 0.29%)</title><rect x="45.0469%" y="373" width="0.2867%" height="15" fill="rgb(206,192,2)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="383.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (311,803 samples, 0.29%)</title><rect x="45.0469%" y="357" width="0.2867%" height="15" fill="rgb(241,108,4)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="367.50"></text></g><g><title>std::thread::park (311,803 samples, 0.29%)</title><rect x="45.0469%" y="341" width="0.2867%" height="15" fill="rgb(247,173,49)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="351.50"></text></g><g><title>std::thread::Thread::park (311,803 samples, 0.29%)</title><rect x="45.0469%" y="325" width="0.2867%" height="15" fill="rgb(224,114,35)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="335.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (311,803 samples, 0.29%)</title><rect x="45.0469%" y="309" width="0.2867%" height="15" fill="rgb(245,159,27)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="319.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (311,803 samples, 0.29%)</title><rect x="45.0469%" y="293" width="0.2867%" height="15" fill="rgb(245,172,44)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="303.50"></text></g><g><title>syscall (311,803 samples, 0.29%)</title><rect x="45.0469%" y="277" width="0.2867%" height="15" fill="rgb(236,23,11)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="287.50"></text></g><g><title>[unknown] (311,803 samples, 0.29%)</title><rect x="45.0469%" y="261" width="0.2867%" height="15" fill="rgb(205,117,38)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="271.50"></text></g><g><title>[unknown] (311,803 samples, 0.29%)</title><rect x="45.0469%" y="245" width="0.2867%" height="15" fill="rgb(237,72,25)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="255.50"></text></g><g><title>[unknown] (311,803 samples, 0.29%)</title><rect x="45.0469%" y="229" width="0.2867%" height="15" fill="rgb(244,70,9)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="239.50"></text></g><g><title>[unknown] (311,803 samples, 0.29%)</title><rect x="45.0469%" y="213" width="0.2867%" height="15" fill="rgb(217,125,39)" fg:x="48989556" fg:w="311803"/><text x="45.2969%" y="223.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="197" width="0.2022%" height="15" fill="rgb(235,36,10)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="207.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="181" width="0.2022%" height="15" fill="rgb(251,123,47)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="191.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="165" width="0.2022%" height="15" fill="rgb(221,13,13)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="175.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="149" width="0.2022%" height="15" fill="rgb(238,131,9)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="159.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="133" width="0.2022%" height="15" fill="rgb(211,50,8)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="143.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="117" width="0.2022%" height="15" fill="rgb(245,182,24)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="127.50"></text></g><g><title>[unknown] (219,935 samples, 0.20%)</title><rect x="45.1314%" y="101" width="0.2022%" height="15" fill="rgb(242,14,37)" fg:x="49081424" fg:w="219935"/><text x="45.3814%" y="111.50"></text></g><g><title>[unknown] (199,143 samples, 0.18%)</title><rect x="45.1505%" y="85" width="0.1831%" height="15" fill="rgb(246,228,12)" fg:x="49102216" fg:w="199143"/><text x="45.4005%" y="95.50"></text></g><g><title>[unknown] (199,143 samples, 0.18%)</title><rect x="45.1505%" y="69" width="0.1831%" height="15" fill="rgb(213,55,15)" fg:x="49102216" fg:w="199143"/><text x="45.4005%" y="79.50"></text></g><g><title>[unknown] (199,143 samples, 0.18%)</title><rect x="45.1505%" y="53" width="0.1831%" height="15" fill="rgb(209,9,3)" fg:x="49102216" fg:w="199143"/><text x="45.4005%" y="63.50"></text></g><g><title>[unknown] (199,143 samples, 0.18%)</title><rect x="45.1505%" y="37" width="0.1831%" height="15" fill="rgb(230,59,30)" fg:x="49102216" fg:w="199143"/><text x="45.4005%" y="47.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (2,220,307 samples, 2.04%)</title><rect x="45.3336%" y="437" width="2.0416%" height="15" fill="rgb(209,121,21)" fg:x="49301359" fg:w="2220307"/><text x="45.5836%" y="447.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (2,220,307 samples, 2.04%)</title><rect x="45.3336%" y="421" width="2.0416%" height="15" fill="rgb(220,109,13)" fg:x="49301359" fg:w="2220307"/><text x="45.5836%" y="431.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (2,220,307 samples, 2.04%)</title><rect x="45.3336%" y="405" width="2.0416%" height="15" fill="rgb(232,18,1)" fg:x="49301359" fg:w="2220307"/><text x="45.5836%" y="415.50">c..</text></g><g><title>core::sync::atomic::atomic_load (2,220,307 samples, 2.04%)</title><rect x="45.3336%" y="389" width="2.0416%" height="15" fill="rgb(215,41,42)" fg:x="49301359" fg:w="2220307"/><text x="45.5836%" y="399.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4,396,248 samples, 4.04%)</title><rect x="47.3752%" y="421" width="4.0424%" height="15" fill="rgb(224,123,36)" fg:x="51521666" fg:w="4396248"/><text x="47.6252%" y="431.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4,396,248 samples, 4.04%)</title><rect x="47.3752%" y="405" width="4.0424%" height="15" fill="rgb(240,125,3)" fg:x="51521666" fg:w="4396248"/><text x="47.6252%" y="415.50">core..</text></g><g><title>core::sync::atomic::AtomicUsize::load (945,758 samples, 0.87%)</title><rect x="51.4177%" y="421" width="0.8696%" height="15" fill="rgb(205,98,50)" fg:x="55917914" fg:w="945758"/><text x="51.6677%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (945,758 samples, 0.87%)</title><rect x="51.4177%" y="405" width="0.8696%" height="15" fill="rgb(205,185,37)" fg:x="55917914" fg:w="945758"/><text x="51.6677%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5,984,629 samples, 5.50%)</title><rect x="52.2873%" y="405" width="5.5030%" height="15" fill="rgb(238,207,15)" fg:x="56863672" fg:w="5984629"/><text x="52.5373%" y="415.50">core::i..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5,984,629 samples, 5.50%)</title><rect x="52.2873%" y="389" width="5.5030%" height="15" fill="rgb(213,199,42)" fg:x="56863672" fg:w="5984629"/><text x="52.5373%" y="399.50">&lt;core::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (5,984,629 samples, 5.50%)</title><rect x="52.2873%" y="373" width="5.5030%" height="15" fill="rgb(235,201,11)" fg:x="56863672" fg:w="5984629"/><text x="52.5373%" y="383.50">core::c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (22,429,226 samples, 20.62%)</title><rect x="47.3752%" y="437" width="20.6241%" height="15" fill="rgb(207,46,11)" fg:x="51521666" fg:w="22429226"/><text x="47.6252%" y="447.50">crossbeam_channel::flavors::list..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (17,087,220 samples, 15.71%)</title><rect x="52.2873%" y="421" width="15.7120%" height="15" fill="rgb(241,35,35)" fg:x="56863672" fg:w="17087220"/><text x="52.5373%" y="431.50">crossbeam_utils::backoff..</text></g><g><title>core::sync::atomic::spin_loop_hint (11,102,591 samples, 10.21%)</title><rect x="57.7903%" y="405" width="10.2091%" height="15" fill="rgb(243,32,47)" fg:x="62848301" fg:w="11102591"/><text x="58.0403%" y="415.50">core::sync::ato..</text></g><g><title>core::hint::spin_loop (11,102,591 samples, 10.21%)</title><rect x="57.7903%" y="389" width="10.2091%" height="15" fill="rgb(247,202,23)" fg:x="62848301" fg:w="11102591"/><text x="58.0403%" y="399.50">core::hint::spi..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (11,102,591 samples, 10.21%)</title><rect x="57.7903%" y="373" width="10.2091%" height="15" fill="rgb(219,102,11)" fg:x="62848301" fg:w="11102591"/><text x="58.0403%" y="383.50">core::core_arch..</text></g><g><title>__GI___sched_yield (1,369,545 samples, 1.26%)</title><rect x="67.9994%" y="421" width="1.2593%" height="15" fill="rgb(243,110,44)" fg:x="73950892" fg:w="1369545"/><text x="68.2494%" y="431.50"></text></g><g><title>[unknown] (1,369,545 samples, 1.26%)</title><rect x="67.9994%" y="405" width="1.2593%" height="15" fill="rgb(222,74,54)" fg:x="73950892" fg:w="1369545"/><text x="68.2494%" y="415.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (26,730,401 samples, 24.58%)</title><rect x="44.8328%" y="469" width="24.5792%" height="15" fill="rgb(216,99,12)" fg:x="48756744" fg:w="26730401"/><text x="45.0828%" y="479.50">crossbeam_channel::channel::Receiver&lt;T&gt;..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (26,497,589 samples, 24.37%)</title><rect x="45.0469%" y="453" width="24.3651%" height="15" fill="rgb(226,22,26)" fg:x="48989556" fg:w="26497589"/><text x="45.2969%" y="463.50">crossbeam_channel::flavors::list::Chann..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1,536,253 samples, 1.41%)</title><rect x="67.9994%" y="437" width="1.4126%" height="15" fill="rgb(217,163,10)" fg:x="73950892" fg:w="1536253"/><text x="68.2494%" y="447.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (166,708 samples, 0.15%)</title><rect x="69.2587%" y="421" width="0.1533%" height="15" fill="rgb(213,25,53)" fg:x="75320437" fg:w="166708"/><text x="69.5087%" y="431.50"></text></g><g><title>core::hint::spin_loop (166,708 samples, 0.15%)</title><rect x="69.2587%" y="405" width="0.1533%" height="15" fill="rgb(252,105,26)" fg:x="75320437" fg:w="166708"/><text x="69.5087%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (166,708 samples, 0.15%)</title><rect x="69.2587%" y="389" width="0.1533%" height="15" fill="rgb(220,39,43)" fg:x="75320437" fg:w="166708"/><text x="69.5087%" y="399.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (7,906,145 samples, 7.27%)</title><rect x="69.4120%" y="469" width="7.2699%" height="15" fill="rgb(229,68,48)" fg:x="75487145" fg:w="7906145"/><text x="69.6620%" y="479.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (7,906,145 samples, 7.27%)</title><rect x="69.4120%" y="453" width="7.2699%" height="15" fill="rgb(252,8,32)" fg:x="75487145" fg:w="7906145"/><text x="69.6620%" y="463.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (7,906,145 samples, 7.27%)</title><rect x="69.4120%" y="437" width="7.2699%" height="15" fill="rgb(223,20,43)" fg:x="75487145" fg:w="7906145"/><text x="69.6620%" y="447.50">crossbeam_..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4,042,033 samples, 3.72%)</title><rect x="72.9651%" y="421" width="3.7167%" height="15" fill="rgb(229,81,49)" fg:x="79351257" fg:w="4042033"/><text x="73.2151%" y="431.50">cros..</text></g><g><title>core::sync::atomic::spin_loop_hint (4,042,033 samples, 3.72%)</title><rect x="72.9651%" y="405" width="3.7167%" height="15" fill="rgb(236,28,36)" fg:x="79351257" fg:w="4042033"/><text x="73.2151%" y="415.50">core..</text></g><g><title>core::hint::spin_loop (4,042,033 samples, 3.72%)</title><rect x="72.9651%" y="389" width="3.7167%" height="15" fill="rgb(249,185,26)" fg:x="79351257" fg:w="4042033"/><text x="73.2151%" y="399.50">core..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (4,042,033 samples, 3.72%)</title><rect x="72.9651%" y="373" width="3.7167%" height="15" fill="rgb(249,174,33)" fg:x="79351257" fg:w="4042033"/><text x="73.2151%" y="383.50">core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="661" width="78.4132%" height="15" fill="rgb(233,201,37)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="671.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="645" width="78.4132%" height="15" fill="rgb(221,78,26)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="655.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="629" width="78.4132%" height="15" fill="rgb(250,127,30)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="639.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="613" width="78.4132%" height="15" fill="rgb(230,49,44)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="623.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="597" width="78.4132%" height="15" fill="rgb(229,67,23)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="581" width="78.4132%" height="15" fill="rgb(249,83,47)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="565" width="78.4132%" height="15" fill="rgb(215,43,3)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="575.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="549" width="78.4132%" height="15" fill="rgb(238,154,13)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="559.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="533" width="78.4132%" height="15" fill="rgb(219,56,2)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="543.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="517" width="78.4132%" height="15" fill="rgb(233,0,4)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="527.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (85,276,218 samples, 78.41%)</title><rect x="10.3691%" y="501" width="78.4132%" height="15" fill="rgb(235,30,7)" fg:x="11276647" fg:w="85276218"/><text x="10.6191%" y="511.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (48,046,119 samples, 44.18%)</title><rect x="44.6029%" y="485" width="44.1794%" height="15" fill="rgb(250,79,13)" fg:x="48506746" fg:w="48046119"/><text x="44.8529%" y="495.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="469" width="12.1005%" height="15" fill="rgb(211,146,34)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="479.50">lab4::student::Stu..</text></g><g><title>lab4::checksum::Checksum::with_sha256 (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="453" width="12.1005%" height="15" fill="rgb(228,22,38)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="463.50">lab4::checksum::Ch..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="437" width="12.1005%" height="15" fill="rgb(235,168,5)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="447.50">&lt;D as digest::dige..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="421" width="12.1005%" height="15" fill="rgb(221,155,16)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="431.50">digest::fixed::Fix..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="405" width="12.1005%" height="15" fill="rgb(215,215,53)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="415.50">&lt;D as digest::fixe..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="389" width="12.1005%" height="15" fill="rgb(223,4,10)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="399.50">&lt;sha2::sha256::Sha..</text></g><g><title>sha2::sha256::Engine256::finish (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="373" width="12.1005%" height="15" fill="rgb(234,103,6)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="383.50">sha2::sha256::Engi..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="357" width="12.1005%" height="15" fill="rgb(227,97,0)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="367.50">block_buffer::Bloc..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="341" width="12.1005%" height="15" fill="rgb(234,150,53)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="351.50">sha2::sha256::Engi..</text></g><g><title>sha2::sha256::compress256 (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="325" width="12.1005%" height="15" fill="rgb(228,201,54)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="335.50">sha2::sha256::comp..</text></g><g><title>sha2::sha256::x86::compress (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="309" width="12.1005%" height="15" fill="rgb(222,22,37)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="319.50">sha2::sha256::x86:..</text></g><g><title>sha2::sha256::soft::compress (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="293" width="12.1005%" height="15" fill="rgb(237,53,32)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="303.50">sha2::sha256::soft..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="277" width="12.1005%" height="15" fill="rgb(233,25,53)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="287.50">sha2::sha256::soft..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (13,159,575 samples, 12.10%)</title><rect x="76.6818%" y="261" width="12.1005%" height="15" fill="rgb(210,40,34)" fg:x="83393290" fg:w="13159575"/><text x="76.9318%" y="271.50">sha2::sha256::soft..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (4,245,075 samples, 3.90%)</title><rect x="84.8789%" y="245" width="3.9034%" height="15" fill="rgb(241,220,44)" fg:x="92307790" fg:w="4245075"/><text x="85.1289%" y="255.50">core..</text></g><g><title>__GI___mmap64 (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="533" width="2.3463%" height="15" fill="rgb(235,28,35)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="543.50">_..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="517" width="2.3463%" height="15" fill="rgb(210,56,17)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="527.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="501" width="2.3463%" height="15" fill="rgb(224,130,29)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="511.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="485" width="2.3463%" height="15" fill="rgb(235,212,8)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="495.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="469" width="2.3463%" height="15" fill="rgb(223,33,50)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="479.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="453" width="2.3463%" height="15" fill="rgb(219,149,13)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="463.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="437" width="2.3463%" height="15" fill="rgb(250,156,29)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="447.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="421" width="2.3463%" height="15" fill="rgb(216,193,19)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="431.50">[..</text></g><g><title>[unknown] (2,551,615 samples, 2.35%)</title><rect x="89.0909%" y="405" width="2.3463%" height="15" fill="rgb(216,135,14)" fg:x="96888381" fg:w="2551615"/><text x="89.3409%" y="415.50">[..</text></g><g><title>[unknown] (2,050,127 samples, 1.89%)</title><rect x="89.5520%" y="389" width="1.8851%" height="15" fill="rgb(241,47,5)" fg:x="97389869" fg:w="2050127"/><text x="89.8020%" y="399.50">[..</text></g><g><title>[unknown] (868,137 samples, 0.80%)</title><rect x="90.6388%" y="373" width="0.7983%" height="15" fill="rgb(233,42,35)" fg:x="98571859" fg:w="868137"/><text x="90.8888%" y="383.50"></text></g><g><title>[unknown] (457,363 samples, 0.42%)</title><rect x="91.0166%" y="357" width="0.4206%" height="15" fill="rgb(231,13,6)" fg:x="98982633" fg:w="457363"/><text x="91.2666%" y="367.50"></text></g><g><title>[unknown] (457,363 samples, 0.42%)</title><rect x="91.0166%" y="341" width="0.4206%" height="15" fill="rgb(207,181,40)" fg:x="98982633" fg:w="457363"/><text x="91.2666%" y="351.50"></text></g><g><title>[unknown] (457,363 samples, 0.42%)</title><rect x="91.0166%" y="325" width="0.4206%" height="15" fill="rgb(254,173,49)" fg:x="98982633" fg:w="457363"/><text x="91.2666%" y="335.50"></text></g><g><title>[unknown] (457,363 samples, 0.42%)</title><rect x="91.0166%" y="309" width="0.4206%" height="15" fill="rgb(221,1,38)" fg:x="98982633" fg:w="457363"/><text x="91.2666%" y="319.50"></text></g><g><title>__GI___mprotect (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="533" width="2.4630%" height="15" fill="rgb(206,124,46)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="543.50">__..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="517" width="2.4630%" height="15" fill="rgb(249,21,11)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="527.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="501" width="2.4630%" height="15" fill="rgb(222,201,40)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="511.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="485" width="2.4630%" height="15" fill="rgb(235,61,29)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="495.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="469" width="2.4630%" height="15" fill="rgb(219,207,3)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="479.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="453" width="2.4630%" height="15" fill="rgb(222,56,46)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="463.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="437" width="2.4630%" height="15" fill="rgb(239,76,54)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="447.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="421" width="2.4630%" height="15" fill="rgb(231,124,27)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="431.50">[u..</text></g><g><title>[unknown] (2,678,542 samples, 2.46%)</title><rect x="91.4371%" y="405" width="2.4630%" height="15" fill="rgb(249,195,6)" fg:x="99439996" fg:w="2678542"/><text x="91.6871%" y="415.50">[u..</text></g><g><title>[unknown] (1,747,524 samples, 1.61%)</title><rect x="92.2932%" y="389" width="1.6069%" height="15" fill="rgb(237,174,47)" fg:x="100371014" fg:w="1747524"/><text x="92.5432%" y="399.50"></text></g><g><title>[unknown] (1,747,524 samples, 1.61%)</title><rect x="92.2932%" y="373" width="1.6069%" height="15" fill="rgb(206,201,31)" fg:x="100371014" fg:w="1747524"/><text x="92.5432%" y="383.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="629" width="5.9982%" height="15" fill="rgb(231,57,52)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="639.50">std::sys..</text></g><g><title>pthread_getattr_np (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="613" width="5.9982%" height="15" fill="rgb(248,177,22)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="623.50">pthread_..</text></g><g><title>__GI___libc_malloc (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="597" width="5.9982%" height="15" fill="rgb(215,211,37)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="607.50">__GI___l..</text></g><g><title>tcache_init.part.0 (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="581" width="5.9982%" height="15" fill="rgb(241,128,51)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="591.50">tcache_i..</text></g><g><title>arena_get2.part.0 (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="565" width="5.9982%" height="15" fill="rgb(227,165,31)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="575.50">arena_ge..</text></g><g><title>new_heap (6,523,186 samples, 6.00%)</title><rect x="88.7823%" y="549" width="5.9982%" height="15" fill="rgb(228,167,24)" fg:x="96552865" fg:w="6523186"/><text x="89.0323%" y="559.50">new_heap</text></g><g><title>__GI_munmap (957,513 samples, 0.88%)</title><rect x="93.9001%" y="533" width="0.8805%" height="15" fill="rgb(228,143,12)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="543.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="517" width="0.8805%" height="15" fill="rgb(249,149,8)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="527.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="501" width="0.8805%" height="15" fill="rgb(243,35,44)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="511.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="485" width="0.8805%" height="15" fill="rgb(246,89,9)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="495.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="469" width="0.8805%" height="15" fill="rgb(233,213,13)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="479.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="453" width="0.8805%" height="15" fill="rgb(233,141,41)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="463.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="437" width="0.8805%" height="15" fill="rgb(239,167,4)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="447.50"></text></g><g><title>[unknown] (957,513 samples, 0.88%)</title><rect x="93.9001%" y="421" width="0.8805%" height="15" fill="rgb(209,217,16)" fg:x="102118538" fg:w="957513"/><text x="94.1501%" y="431.50"></text></g><g><title>__GI___clone (93,131,327 samples, 85.64%)</title><rect x="9.8068%" y="709" width="85.6362%" height="15" fill="rgb(219,88,35)" fg:x="10665108" fg:w="93131327"/><text x="10.0568%" y="719.50">__GI___clone</text></g><g><title>start_thread (92,519,788 samples, 85.07%)</title><rect x="10.3691%" y="693" width="85.0738%" height="15" fill="rgb(220,193,23)" fg:x="11276647" fg:w="92519788"/><text x="10.6191%" y="703.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (92,519,788 samples, 85.07%)</title><rect x="10.3691%" y="677" width="85.0738%" height="15" fill="rgb(230,90,52)" fg:x="11276647" fg:w="92519788"/><text x="10.6191%" y="687.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (7,243,570 samples, 6.66%)</title><rect x="88.7823%" y="661" width="6.6606%" height="15" fill="rgb(252,106,19)" fg:x="96552865" fg:w="7243570"/><text x="89.0323%" y="671.50">std::sys:..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (7,243,570 samples, 6.66%)</title><rect x="88.7823%" y="645" width="6.6606%" height="15" fill="rgb(206,74,20)" fg:x="96552865" fg:w="7243570"/><text x="89.0323%" y="655.50">std::sys:..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (720,384 samples, 0.66%)</title><rect x="94.7805%" y="629" width="0.6624%" height="15" fill="rgb(230,138,44)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="639.50"></text></g><g><title>__GI___mmap64 (720,384 samples, 0.66%)</title><rect x="94.7805%" y="613" width="0.6624%" height="15" fill="rgb(235,182,43)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="623.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="597" width="0.6624%" height="15" fill="rgb(242,16,51)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="607.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="581" width="0.6624%" height="15" fill="rgb(248,9,4)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="591.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="565" width="0.6624%" height="15" fill="rgb(210,31,22)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="575.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="549" width="0.6624%" height="15" fill="rgb(239,54,39)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="559.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="533" width="0.6624%" height="15" fill="rgb(230,99,41)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="543.50"></text></g><g><title>[unknown] (720,384 samples, 0.66%)</title><rect x="94.7805%" y="517" width="0.6624%" height="15" fill="rgb(253,106,12)" fg:x="103076051" fg:w="720384"/><text x="95.0305%" y="527.50"></text></g><g><title>_dl_map_object_deps (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="645" width="1.6445%" height="15" fill="rgb(213,46,41)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="655.50"></text></g><g><title>_dl_catch_exception (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="629" width="1.6445%" height="15" fill="rgb(215,133,35)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="639.50"></text></g><g><title>openaux (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="613" width="1.6445%" height="15" fill="rgb(213,28,5)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="623.50"></text></g><g><title>_dl_map_object (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="597" width="1.6445%" height="15" fill="rgb(215,77,49)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="581" width="1.6445%" height="15" fill="rgb(248,100,22)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="591.50"></text></g><g><title>__mmap (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="565" width="1.6445%" height="15" fill="rgb(208,67,9)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="575.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="549" width="1.6445%" height="15" fill="rgb(219,133,21)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="559.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="533" width="1.6445%" height="15" fill="rgb(246,46,29)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="543.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="517" width="1.6445%" height="15" fill="rgb(246,185,52)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="527.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="501" width="1.6445%" height="15" fill="rgb(252,136,11)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="511.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="485" width="1.6445%" height="15" fill="rgb(219,138,53)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="495.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="469" width="1.6445%" height="15" fill="rgb(211,51,23)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="479.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="453" width="1.6445%" height="15" fill="rgb(247,221,28)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="463.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="437" width="1.6445%" height="15" fill="rgb(251,222,45)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="447.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="421" width="1.6445%" height="15" fill="rgb(217,162,53)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="431.50"></text></g><g><title>[unknown] (1,788,455 samples, 1.64%)</title><rect x="95.4430%" y="405" width="1.6445%" height="15" fill="rgb(229,93,14)" fg:x="103796435" fg:w="1788455"/><text x="95.6930%" y="415.50"></text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="629" width="2.5603%" height="15" fill="rgb(209,67,49)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="639.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="613" width="2.5603%" height="15" fill="rgb(213,87,29)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="623.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="597" width="2.5603%" height="15" fill="rgb(205,151,52)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="607.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="581" width="2.5603%" height="15" fill="rgb(253,215,39)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="591.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="565" width="2.5603%" height="15" fill="rgb(221,220,41)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="575.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="549" width="2.5603%" height="15" fill="rgb(218,133,21)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="559.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="533" width="2.5603%" height="15" fill="rgb(221,193,43)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="543.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="517" width="2.5603%" height="15" fill="rgb(240,128,52)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="527.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="501" width="2.5603%" height="15" fill="rgb(253,114,12)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="511.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="485" width="2.5603%" height="15" fill="rgb(215,223,47)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="495.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="469" width="2.5603%" height="15" fill="rgb(248,225,23)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="479.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="453" width="2.5603%" height="15" fill="rgb(250,108,0)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="463.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="437" width="2.5603%" height="15" fill="rgb(228,208,7)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="447.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="421" width="2.5603%" height="15" fill="rgb(244,45,10)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="431.50">[u..</text></g><g><title>[unknown] (2,784,414 samples, 2.56%)</title><rect x="97.0875%" y="405" width="2.5603%" height="15" fill="rgb(207,125,25)" fg:x="105584890" fg:w="2784414"/><text x="97.3375%" y="415.50">[u..</text></g><g><title>lab4 (108,689,147 samples, 99.94%)</title><rect x="0.0000%" y="725" width="99.9419%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="108689147"/><text x="0.2500%" y="735.50">lab4</text></g><g><title>_start (4,892,712 samples, 4.50%)</title><rect x="95.4430%" y="709" width="4.4989%" height="15" fill="rgb(249,80,12)" fg:x="103796435" fg:w="4892712"/><text x="95.6930%" y="719.50">_start</text></g><g><title>_dl_start (4,892,712 samples, 4.50%)</title><rect x="95.4430%" y="693" width="4.4989%" height="15" fill="rgb(221,65,9)" fg:x="103796435" fg:w="4892712"/><text x="95.6930%" y="703.50">_dl_s..</text></g><g><title>_dl_sysdep_start (4,892,712 samples, 4.50%)</title><rect x="95.4430%" y="677" width="4.4989%" height="15" fill="rgb(235,49,36)" fg:x="103796435" fg:w="4892712"/><text x="95.6930%" y="687.50">_dl_s..</text></g><g><title>dl_main (4,892,712 samples, 4.50%)</title><rect x="95.4430%" y="661" width="4.4989%" height="15" fill="rgb(225,32,20)" fg:x="103796435" fg:w="4892712"/><text x="95.6930%" y="671.50">dl_ma..</text></g><g><title>_dl_relocate_object (3,104,257 samples, 2.85%)</title><rect x="97.0875%" y="645" width="2.8544%" height="15" fill="rgb(215,141,46)" fg:x="105584890" fg:w="3104257"/><text x="97.3375%" y="655.50">_d..</text></g><g><title>_dl_lookup_symbol_x (319,843 samples, 0.29%)</title><rect x="99.6478%" y="629" width="0.2941%" height="15" fill="rgb(250,160,47)" fg:x="108369304" fg:w="319843"/><text x="99.8978%" y="639.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="613" width="0.0223%" height="15" fill="rgb(216,222,40)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="623.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="597" width="0.0223%" height="15" fill="rgb(234,217,39)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="607.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="581" width="0.0223%" height="15" fill="rgb(207,178,40)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="591.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="565" width="0.0223%" height="15" fill="rgb(221,136,13)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="575.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="549" width="0.0223%" height="15" fill="rgb(249,199,10)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="559.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="533" width="0.0223%" height="15" fill="rgb(249,222,13)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="543.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="517" width="0.0223%" height="15" fill="rgb(244,185,38)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="527.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="501" width="0.0223%" height="15" fill="rgb(236,202,9)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="511.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="485" width="0.0223%" height="15" fill="rgb(250,229,37)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="495.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="469" width="0.0223%" height="15" fill="rgb(206,174,23)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="479.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="453" width="0.0223%" height="15" fill="rgb(211,33,43)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="463.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="437" width="0.0223%" height="15" fill="rgb(245,58,50)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="447.50"></text></g><g><title>[unknown] (24,284 samples, 0.02%)</title><rect x="99.9196%" y="421" width="0.0223%" height="15" fill="rgb(244,68,36)" fg:x="108664863" fg:w="24284"/><text x="100.1696%" y="431.50"></text></g><g><title>all (108,752,330 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="108752330"/><text x="0.2500%" y="751.50"></text></g><g><title>perf-exec (63,183 samples, 0.06%)</title><rect x="99.9419%" y="725" width="0.0581%" height="15" fill="rgb(254,30,23)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="735.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="709" width="0.0581%" height="15" fill="rgb(235,160,14)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="719.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="693" width="0.0581%" height="15" fill="rgb(212,155,44)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="703.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="677" width="0.0581%" height="15" fill="rgb(226,2,50)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="687.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="661" width="0.0581%" height="15" fill="rgb(234,177,6)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="671.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="645" width="0.0581%" height="15" fill="rgb(217,24,9)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="655.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="629" width="0.0581%" height="15" fill="rgb(220,13,46)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="639.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="613" width="0.0581%" height="15" fill="rgb(239,221,27)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="623.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="597" width="0.0581%" height="15" fill="rgb(222,198,25)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="607.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="581" width="0.0581%" height="15" fill="rgb(211,99,13)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="591.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="565" width="0.0581%" height="15" fill="rgb(232,111,31)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="575.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="549" width="0.0581%" height="15" fill="rgb(245,82,37)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="559.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="533" width="0.0581%" height="15" fill="rgb(227,149,46)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="543.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="517" width="0.0581%" height="15" fill="rgb(218,36,50)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="527.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="501" width="0.0581%" height="15" fill="rgb(226,80,48)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="511.50"></text></g><g><title>[unknown] (63,183 samples, 0.06%)</title><rect x="99.9419%" y="485" width="0.0581%" height="15" fill="rgb(238,224,15)" fg:x="108689147" fg:w="63183"/><text x="100.1919%" y="495.50"></text></g></svg></svg>