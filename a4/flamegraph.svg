<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="150345083"><g><title>[anon] (834,094 samples, 0.55%)</title><rect x="0.0000%" y="853" width="0.5548%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="834094"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys::thread_local::guard::key::enable (834,094 samples, 0.55%)</title><rect x="0.0000%" y="837" width="0.5548%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="834094"/><text x="0.2500%" y="847.50"></text></g><g><title>[unknown] (5,395,212 samples, 3.59%)</title><rect x="0.5548%" y="853" width="3.5886%" height="15" fill="rgb(221,193,54)" fg:x="834094" fg:w="5395212"/><text x="0.8048%" y="863.50">[unk..</text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="837" width="0.4714%" height="15" fill="rgb(248,212,6)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="847.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="821" width="0.4714%" height="15" fill="rgb(208,68,35)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="831.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="805" width="0.4714%" height="15" fill="rgb(232,128,0)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="815.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="789" width="0.4714%" height="15" fill="rgb(207,160,47)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="799.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="773" width="0.4714%" height="15" fill="rgb(228,23,34)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="783.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="757" width="0.4714%" height="15" fill="rgb(218,30,26)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="767.50"></text></g><g><title>[unknown] (708,709 samples, 0.47%)</title><rect x="3.6720%" y="741" width="0.4714%" height="15" fill="rgb(220,122,19)" fg:x="5520597" fg:w="708709"/><text x="3.9220%" y="751.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="725" width="0.4714%" height="15" fill="rgb(250,228,42)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="735.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="709" width="0.4714%" height="15" fill="rgb(240,193,28)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="719.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="693" width="0.4714%" height="15" fill="rgb(216,20,37)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="703.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="677" width="0.4714%" height="15" fill="rgb(206,188,39)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="687.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="661" width="0.4714%" height="15" fill="rgb(217,207,13)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="671.50"></text></g><g><title>[unknown] (708,708 samples, 0.47%)</title><rect x="3.6720%" y="645" width="0.4714%" height="15" fill="rgb(231,73,38)" fg:x="5520598" fg:w="708708"/><text x="3.9220%" y="655.50"></text></g><g><title>[unknown] (796,805 samples, 0.53%)</title><rect x="4.1433%" y="837" width="0.5300%" height="15" fill="rgb(225,20,46)" fg:x="6229306" fg:w="796805"/><text x="4.3933%" y="847.50"></text></g><g><title>[unknown] (584,010 samples, 0.39%)</title><rect x="4.2849%" y="821" width="0.3884%" height="15" fill="rgb(210,31,41)" fg:x="6442101" fg:w="584010"/><text x="4.5349%" y="831.50"></text></g><g><title>[unknown] (584,010 samples, 0.39%)</title><rect x="4.2849%" y="805" width="0.3884%" height="15" fill="rgb(221,200,47)" fg:x="6442101" fg:w="584010"/><text x="4.5349%" y="815.50"></text></g><g><title>[unknown] (498,321 samples, 0.33%)</title><rect x="4.3419%" y="789" width="0.3315%" height="15" fill="rgb(226,26,5)" fg:x="6527790" fg:w="498321"/><text x="4.5919%" y="799.50"></text></g><g><title>[unknown] (498,321 samples, 0.33%)</title><rect x="4.3419%" y="773" width="0.3315%" height="15" fill="rgb(249,33,26)" fg:x="6527790" fg:w="498321"/><text x="4.5919%" y="783.50"></text></g><g><title>[unknown] (498,321 samples, 0.33%)</title><rect x="4.3419%" y="757" width="0.3315%" height="15" fill="rgb(235,183,28)" fg:x="6527790" fg:w="498321"/><text x="4.5919%" y="767.50"></text></g><g><title>[unknown] (498,321 samples, 0.33%)</title><rect x="4.3419%" y="741" width="0.3315%" height="15" fill="rgb(221,5,38)" fg:x="6527790" fg:w="498321"/><text x="4.5919%" y="751.50"></text></g><g><title>[unknown] (498,321 samples, 0.33%)</title><rect x="4.3419%" y="725" width="0.3315%" height="15" fill="rgb(247,18,42)" fg:x="6527790" fg:w="498321"/><text x="4.5919%" y="735.50"></text></g><g><title>[unknown] (239,698 samples, 0.16%)</title><rect x="4.6733%" y="821" width="0.1594%" height="15" fill="rgb(241,131,45)" fg:x="7026111" fg:w="239698"/><text x="4.9233%" y="831.50"></text></g><g><title>__GI___ctype_init (181,756 samples, 0.12%)</title><rect x="4.8328%" y="821" width="0.1209%" height="15" fill="rgb(249,31,29)" fg:x="7265809" fg:w="181756"/><text x="5.0828%" y="831.50"></text></g><g><title>__malloc_arena_thread_freeres (2,234,724 samples, 1.49%)</title><rect x="4.9536%" y="821" width="1.4864%" height="15" fill="rgb(225,111,53)" fg:x="7447565" fg:w="2234724"/><text x="5.2036%" y="831.50"></text></g><g><title>_int_free (2,234,724 samples, 1.49%)</title><rect x="4.9536%" y="805" width="1.4864%" height="15" fill="rgb(238,160,17)" fg:x="7447565" fg:w="2234724"/><text x="5.2036%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="501" width="2.5011%" height="15" fill="rgb(214,148,48)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="511.50">co..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="485" width="2.5011%" height="15" fill="rgb(232,36,49)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="495.50">on..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="469" width="2.5011%" height="15" fill="rgb(209,103,24)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="479.50">on..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="453" width="2.5011%" height="15" fill="rgb(229,88,8)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="463.50">on..</text></g><g><title>core::ops::function::FnOnce::call_once (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="437" width="2.5011%" height="15" fill="rgb(213,181,19)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="447.50">co..</text></g><g><title>core::ops::function::FnOnce::call_once (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="421" width="2.5011%" height="15" fill="rgb(254,191,54)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="431.50">co..</text></g><g><title>lab4::idea::CROSS_PROD::{{closure}} (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="405" width="2.5011%" height="15" fill="rgb(241,83,37)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="415.50">la..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="389" width="2.5011%" height="15" fill="rgb(233,36,39)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="399.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="373" width="2.5011%" height="15" fill="rgb(226,3,54)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="383.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="357" width="2.5011%" height="15" fill="rgb(245,192,40)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="367.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="341" width="2.5011%" height="15" fill="rgb(238,167,29)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="351.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="325" width="2.5011%" height="15" fill="rgb(232,182,51)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="335.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="309" width="2.5011%" height="15" fill="rgb(231,60,39)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="319.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="293" width="2.5011%" height="15" fill="rgb(208,69,12)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="303.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="277" width="2.5011%" height="15" fill="rgb(235,93,37)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="287.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="261" width="2.5011%" height="15" fill="rgb(213,116,39)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="271.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="245" width="2.5011%" height="15" fill="rgb(222,207,29)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="255.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="229" width="2.5011%" height="15" fill="rgb(206,96,30)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="239.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="213" width="2.5011%" height="15" fill="rgb(218,138,4)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="223.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="197" width="2.5011%" height="15" fill="rgb(250,191,14)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="207.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="181" width="2.5011%" height="15" fill="rgb(239,60,40)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="191.50">al..</text></g><g><title>alloc::alloc::realloc (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="165" width="2.5011%" height="15" fill="rgb(206,27,48)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="175.50">al..</text></g><g><title>__GI___libc_realloc (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="149" width="2.5011%" height="15" fill="rgb(225,35,8)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="159.50">__..</text></g><g><title>_int_realloc (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="133" width="2.5011%" height="15" fill="rgb(250,213,24)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="143.50">_i..</text></g><g><title>__memmove_avx_unaligned_erms (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="117" width="2.5011%" height="15" fill="rgb(247,123,22)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="127.50">__..</text></g><g><title>[unknown] (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="101" width="2.5011%" height="15" fill="rgb(231,138,38)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="111.50">[u..</text></g><g><title>[unknown] (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="85" width="2.5011%" height="15" fill="rgb(231,145,46)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="95.50">[u..</text></g><g><title>[unknown] (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="69" width="2.5011%" height="15" fill="rgb(251,118,11)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="79.50">[u..</text></g><g><title>[unknown] (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="53" width="2.5011%" height="15" fill="rgb(217,147,25)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="63.50">[u..</text></g><g><title>[unknown] (3,760,217 samples, 2.50%)</title><rect x="6.4400%" y="37" width="2.5011%" height="15" fill="rgb(247,81,37)" fg:x="9682289" fg:w="3760217"/><text x="6.6900%" y="47.50">[u..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="597" width="2.5142%" height="15" fill="rgb(209,12,38)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="607.50">&lt;o..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="581" width="2.5142%" height="15" fill="rgb(227,1,9)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="591.50">on..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="565" width="2.5142%" height="15" fill="rgb(248,47,43)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="575.50">on..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="549" width="2.5142%" height="15" fill="rgb(221,10,30)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="559.50">on..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="533" width="2.5142%" height="15" fill="rgb(210,229,1)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="543.50">on..</text></g><g><title>once_cell::imp::initialize_or_wait (3,779,934 samples, 2.51%)</title><rect x="6.4400%" y="517" width="2.5142%" height="15" fill="rgb(222,148,37)" fg:x="9682289" fg:w="3779934"/><text x="6.6900%" y="527.50">on..</text></g><g><title>once_cell::imp::wait (19,717 samples, 0.01%)</title><rect x="8.9411%" y="501" width="0.0131%" height="15" fill="rgb(234,67,33)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="511.50"></text></g><g><title>std::thread::park (19,717 samples, 0.01%)</title><rect x="8.9411%" y="485" width="0.0131%" height="15" fill="rgb(247,98,35)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="495.50"></text></g><g><title>std::thread::Thread::park (19,717 samples, 0.01%)</title><rect x="8.9411%" y="469" width="0.0131%" height="15" fill="rgb(247,138,52)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="479.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (19,717 samples, 0.01%)</title><rect x="8.9411%" y="453" width="0.0131%" height="15" fill="rgb(213,79,30)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (19,717 samples, 0.01%)</title><rect x="8.9411%" y="437" width="0.0131%" height="15" fill="rgb(246,177,23)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="447.50"></text></g><g><title>syscall (19,717 samples, 0.01%)</title><rect x="8.9411%" y="421" width="0.0131%" height="15" fill="rgb(230,62,27)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="431.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="405" width="0.0131%" height="15" fill="rgb(216,154,8)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="415.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="389" width="0.0131%" height="15" fill="rgb(244,35,45)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="399.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="373" width="0.0131%" height="15" fill="rgb(251,115,12)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="383.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="357" width="0.0131%" height="15" fill="rgb(240,54,50)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="367.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="341" width="0.0131%" height="15" fill="rgb(233,84,52)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="351.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="325" width="0.0131%" height="15" fill="rgb(207,117,47)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="335.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="309" width="0.0131%" height="15" fill="rgb(249,43,39)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="319.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="293" width="0.0131%" height="15" fill="rgb(209,38,44)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="303.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="277" width="0.0131%" height="15" fill="rgb(236,212,23)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="287.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="261" width="0.0131%" height="15" fill="rgb(242,79,21)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="271.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="245" width="0.0131%" height="15" fill="rgb(211,96,35)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="255.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="229" width="0.0131%" height="15" fill="rgb(253,215,40)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="239.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="213" width="0.0131%" height="15" fill="rgb(211,81,21)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="223.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="197" width="0.0131%" height="15" fill="rgb(208,190,38)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="207.50"></text></g><g><title>[unknown] (19,717 samples, 0.01%)</title><rect x="8.9411%" y="181" width="0.0131%" height="15" fill="rgb(235,213,38)" fg:x="13442506" fg:w="19717"/><text x="9.1911%" y="191.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (3,996,005 samples, 2.66%)</title><rect x="6.4400%" y="629" width="2.6579%" height="15" fill="rgb(237,122,38)" fg:x="9682289" fg:w="3996005"/><text x="6.6900%" y="639.50">la..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (3,996,005 samples, 2.66%)</title><rect x="6.4400%" y="613" width="2.6579%" height="15" fill="rgb(244,218,35)" fg:x="9682289" fg:w="3996005"/><text x="6.6900%" y="623.50">la..</text></g><g><title>alloc::fmt::format (216,071 samples, 0.14%)</title><rect x="8.9542%" y="597" width="0.1437%" height="15" fill="rgb(240,68,47)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (216,071 samples, 0.14%)</title><rect x="8.9542%" y="581" width="0.1437%" height="15" fill="rgb(210,16,53)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="591.50"></text></g><g><title>alloc::fmt::format::{{closure}} (216,071 samples, 0.14%)</title><rect x="8.9542%" y="565" width="0.1437%" height="15" fill="rgb(235,124,12)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (216,071 samples, 0.14%)</title><rect x="8.9542%" y="549" width="0.1437%" height="15" fill="rgb(224,169,11)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (216,071 samples, 0.14%)</title><rect x="8.9542%" y="533" width="0.1437%" height="15" fill="rgb(250,166,2)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (216,071 samples, 0.14%)</title><rect x="8.9542%" y="517" width="0.1437%" height="15" fill="rgb(242,216,29)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="527.50"></text></g><g><title>core::fmt::write (216,071 samples, 0.14%)</title><rect x="8.9542%" y="501" width="0.1437%" height="15" fill="rgb(230,116,27)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (216,071 samples, 0.14%)</title><rect x="8.9542%" y="485" width="0.1437%" height="15" fill="rgb(228,99,48)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (216,071 samples, 0.14%)</title><rect x="8.9542%" y="469" width="0.1437%" height="15" fill="rgb(253,11,6)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="479.50"></text></g><g><title>alloc::string::String::push_str (216,071 samples, 0.14%)</title><rect x="8.9542%" y="453" width="0.1437%" height="15" fill="rgb(247,143,39)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (216,071 samples, 0.14%)</title><rect x="8.9542%" y="437" width="0.1437%" height="15" fill="rgb(236,97,10)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (216,071 samples, 0.14%)</title><rect x="8.9542%" y="421" width="0.1437%" height="15" fill="rgb(233,208,19)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (216,071 samples, 0.14%)</title><rect x="8.9542%" y="405" width="0.1437%" height="15" fill="rgb(216,164,2)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (216,071 samples, 0.14%)</title><rect x="8.9542%" y="389" width="0.1437%" height="15" fill="rgb(220,129,5)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (216,071 samples, 0.14%)</title><rect x="8.9542%" y="373" width="0.1437%" height="15" fill="rgb(242,17,10)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (216,071 samples, 0.14%)</title><rect x="8.9542%" y="357" width="0.1437%" height="15" fill="rgb(242,107,0)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (216,071 samples, 0.14%)</title><rect x="8.9542%" y="341" width="0.1437%" height="15" fill="rgb(251,28,31)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (216,071 samples, 0.14%)</title><rect x="8.9542%" y="325" width="0.1437%" height="15" fill="rgb(233,223,10)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (216,071 samples, 0.14%)</title><rect x="8.9542%" y="309" width="0.1437%" height="15" fill="rgb(215,21,27)" fg:x="13462223" fg:w="216071"/><text x="9.2042%" y="319.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (263,820 samples, 0.18%)</title><rect x="9.0979%" y="613" width="0.1755%" height="15" fill="rgb(232,23,21)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (263,820 samples, 0.18%)</title><rect x="9.0979%" y="597" width="0.1755%" height="15" fill="rgb(244,5,23)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (263,820 samples, 0.18%)</title><rect x="9.0979%" y="581" width="0.1755%" height="15" fill="rgb(226,81,46)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (263,820 samples, 0.18%)</title><rect x="9.0979%" y="565" width="0.1755%" height="15" fill="rgb(247,70,30)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (263,820 samples, 0.18%)</title><rect x="9.0979%" y="549" width="0.1755%" height="15" fill="rgb(212,68,19)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (263,820 samples, 0.18%)</title><rect x="9.0979%" y="533" width="0.1755%" height="15" fill="rgb(240,187,13)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (263,820 samples, 0.18%)</title><rect x="9.0979%" y="517" width="0.1755%" height="15" fill="rgb(223,113,26)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (263,820 samples, 0.18%)</title><rect x="9.0979%" y="501" width="0.1755%" height="15" fill="rgb(206,192,2)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (263,820 samples, 0.18%)</title><rect x="9.0979%" y="485" width="0.1755%" height="15" fill="rgb(241,108,4)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (263,820 samples, 0.18%)</title><rect x="9.0979%" y="469" width="0.1755%" height="15" fill="rgb(247,173,49)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (263,820 samples, 0.18%)</title><rect x="9.0979%" y="453" width="0.1755%" height="15" fill="rgb(224,114,35)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (263,820 samples, 0.18%)</title><rect x="9.0979%" y="437" width="0.1755%" height="15" fill="rgb(245,159,27)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="447.50"></text></g><g><title>alloc::alloc::alloc (263,820 samples, 0.18%)</title><rect x="9.0979%" y="421" width="0.1755%" height="15" fill="rgb(245,172,44)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="431.50"></text></g><g><title>__GI___libc_malloc (263,820 samples, 0.18%)</title><rect x="9.0979%" y="405" width="0.1755%" height="15" fill="rgb(236,23,11)" fg:x="13678294" fg:w="263820"/><text x="9.3479%" y="415.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="517" width="1.8012%" height="15" fill="rgb(205,117,38)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="501" width="1.8012%" height="15" fill="rgb(237,72,25)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="511.50">&lt;..</text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="485" width="1.8012%" height="15" fill="rgb(244,70,9)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="495.50">&lt;..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="469" width="1.8012%" height="15" fill="rgb(217,125,39)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="479.50">c..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="453" width="1.8012%" height="15" fill="rgb(235,36,10)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="463.50">&lt;..</text></g><g><title>core::slice::memchr::memchr (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="437" width="1.8012%" height="15" fill="rgb(251,123,47)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="447.50">c..</text></g><g><title>core::slice::memchr::memchr_aligned (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="421" width="1.8012%" height="15" fill="rgb(221,13,13)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="431.50">c..</text></g><g><title>core::slice::memchr::memchr_aligned::runtime (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="405" width="1.8012%" height="15" fill="rgb(238,131,9)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="415.50">c..</text></g><g><title>core::slice::memchr::memchr_naive (2,707,988 samples, 1.80%)</title><rect x="9.2734%" y="389" width="1.8012%" height="15" fill="rgb(211,50,8)" fg:x="13942114" fg:w="2707988"/><text x="9.5234%" y="399.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="517" width="2.7693%" height="15" fill="rgb(245,182,24)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="527.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="501" width="2.7693%" height="15" fill="rgb(242,14,37)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="511.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="485" width="2.7693%" height="15" fill="rgb(246,228,12)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="495.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="469" width="2.7693%" height="15" fill="rgb(213,55,15)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="479.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="453" width="2.7693%" height="15" fill="rgb(209,9,3)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="463.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="437" width="2.7693%" height="15" fill="rgb(230,59,30)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="447.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="421" width="2.7693%" height="15" fill="rgb(209,121,21)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="431.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="405" width="2.7693%" height="15" fill="rgb(220,109,13)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="415.50">al..</text></g><g><title>alloc::alloc::realloc (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="389" width="2.7693%" height="15" fill="rgb(232,18,1)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="399.50">al..</text></g><g><title>__GI___libc_realloc (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="373" width="2.7693%" height="15" fill="rgb(215,41,42)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="383.50">__..</text></g><g><title>_int_realloc (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="357" width="2.7693%" height="15" fill="rgb(224,123,36)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="367.50">_i..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="341" width="2.7693%" height="15" fill="rgb(240,125,3)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="351.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="325" width="2.7693%" height="15" fill="rgb(205,98,50)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="335.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="309" width="2.7693%" height="15" fill="rgb(205,185,37)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="319.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="293" width="2.7693%" height="15" fill="rgb(238,207,15)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="303.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="277" width="2.7693%" height="15" fill="rgb(213,199,42)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="287.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="261" width="2.7693%" height="15" fill="rgb(235,201,11)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="271.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="245" width="2.7693%" height="15" fill="rgb(207,46,11)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="255.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="229" width="2.7693%" height="15" fill="rgb(241,35,35)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="239.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="213" width="2.7693%" height="15" fill="rgb(243,32,47)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="223.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="197" width="2.7693%" height="15" fill="rgb(247,202,23)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="207.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="181" width="2.7693%" height="15" fill="rgb(219,102,11)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="191.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="165" width="2.7693%" height="15" fill="rgb(243,110,44)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="175.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="149" width="2.7693%" height="15" fill="rgb(222,74,54)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="159.50">[u..</text></g><g><title>[unknown] (4,163,474 samples, 2.77%)</title><rect x="11.0746%" y="133" width="2.7693%" height="15" fill="rgb(216,99,12)" fg:x="16650102" fg:w="4163474"/><text x="11.3246%" y="143.50">[u..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="613" width="4.5846%" height="15" fill="rgb(226,22,26)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="623.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="597" width="4.5846%" height="15" fill="rgb(217,163,10)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="607.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="581" width="4.5846%" height="15" fill="rgb(213,25,53)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="591.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="565" width="4.5846%" height="15" fill="rgb(252,105,26)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="575.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="549" width="4.5846%" height="15" fill="rgb(220,39,43)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="559.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,892,729 samples, 4.58%)</title><rect x="9.2734%" y="533" width="4.5846%" height="15" fill="rgb(229,68,48)" fg:x="13942114" fg:w="6892729"/><text x="9.5234%" y="543.50">alloc..</text></g><g><title>core::ptr::write (21,267 samples, 0.01%)</title><rect x="13.8439%" y="517" width="0.0141%" height="15" fill="rgb(252,8,32)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="527.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="501" width="0.0141%" height="15" fill="rgb(223,20,43)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="511.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="485" width="0.0141%" height="15" fill="rgb(229,81,49)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="495.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="469" width="0.0141%" height="15" fill="rgb(236,28,36)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="479.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="453" width="0.0141%" height="15" fill="rgb(249,185,26)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="463.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="437" width="0.0141%" height="15" fill="rgb(249,174,33)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="447.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="421" width="0.0141%" height="15" fill="rgb(233,201,37)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="431.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="405" width="0.0141%" height="15" fill="rgb(221,78,26)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="415.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="389" width="0.0141%" height="15" fill="rgb(250,127,30)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="399.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="373" width="0.0141%" height="15" fill="rgb(230,49,44)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="383.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="357" width="0.0141%" height="15" fill="rgb(229,67,23)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="367.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="341" width="0.0141%" height="15" fill="rgb(249,83,47)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="351.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="325" width="0.0141%" height="15" fill="rgb(215,43,3)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="335.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="309" width="0.0141%" height="15" fill="rgb(238,154,13)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="319.50"></text></g><g><title>[unknown] (21,267 samples, 0.01%)</title><rect x="13.8439%" y="293" width="0.0141%" height="15" fill="rgb(219,56,2)" fg:x="20813576" fg:w="21267"/><text x="14.0939%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="565" width="2.3452%" height="15" fill="rgb(233,0,4)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="575.50">a..</text></g><g><title>alloc::alloc::exchange_malloc (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="549" width="2.3452%" height="15" fill="rgb(235,30,7)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="559.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="533" width="2.3452%" height="15" fill="rgb(250,79,13)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="543.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="517" width="2.3452%" height="15" fill="rgb(211,146,34)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="527.50">a..</text></g><g><title>alloc::alloc::alloc (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="501" width="2.3452%" height="15" fill="rgb(228,22,38)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="511.50">a..</text></g><g><title>__GI___libc_malloc (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="485" width="2.3452%" height="15" fill="rgb(235,168,5)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="495.50">_..</text></g><g><title>_int_malloc (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="469" width="2.3452%" height="15" fill="rgb(221,155,16)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="479.50">_..</text></g><g><title>malloc_consolidate (3,525,920 samples, 2.35%)</title><rect x="13.8580%" y="453" width="2.3452%" height="15" fill="rgb(215,215,53)" fg:x="20834843" fg:w="3525920"/><text x="14.1080%" y="463.50">m..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (26,946,998 samples, 17.92%)</title><rect x="13.8580%" y="613" width="17.9234%" height="15" fill="rgb(223,4,10)" fg:x="20834843" fg:w="26946998"/><text x="14.1080%" y="623.50">crossbeam_channel::channel::..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (26,946,998 samples, 17.92%)</title><rect x="13.8580%" y="597" width="17.9234%" height="15" fill="rgb(234,103,6)" fg:x="20834843" fg:w="26946998"/><text x="14.1080%" y="607.50">crossbeam_channel::flavors::..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (26,946,998 samples, 17.92%)</title><rect x="13.8580%" y="581" width="17.9234%" height="15" fill="rgb(227,97,0)" fg:x="20834843" fg:w="26946998"/><text x="14.1080%" y="591.50">crossbeam_channel::flavors::..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (23,421,078 samples, 15.58%)</title><rect x="16.2032%" y="565" width="15.5782%" height="15" fill="rgb(234,150,53)" fg:x="24360763" fg:w="23421078"/><text x="16.4532%" y="575.50">crossbeam_utils::backoff..</text></g><g><title>core::sync::atomic::spin_loop_hint (23,421,078 samples, 15.58%)</title><rect x="16.2032%" y="549" width="15.5782%" height="15" fill="rgb(228,201,54)" fg:x="24360763" fg:w="23421078"/><text x="16.4532%" y="559.50">core::sync::atomic::spin..</text></g><g><title>core::hint::spin_loop (23,421,078 samples, 15.58%)</title><rect x="16.2032%" y="533" width="15.5782%" height="15" fill="rgb(222,22,37)" fg:x="24360763" fg:w="23421078"/><text x="16.4532%" y="543.50">core::hint::spin_loop</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (23,421,078 samples, 15.58%)</title><rect x="16.2032%" y="517" width="15.5782%" height="15" fill="rgb(237,53,32)" fg:x="24360763" fg:w="23421078"/><text x="16.4532%" y="527.50">core::core_arch::x86::ss..</text></g><g><title>sha2::sha256::soft::add (3,445,617 samples, 2.29%)</title><rect x="31.7814%" y="405" width="2.2918%" height="15" fill="rgb(233,25,53)" fg:x="47781841" fg:w="3445617"/><text x="32.0314%" y="415.50">s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3,445,617 samples, 2.29%)</title><rect x="31.7814%" y="389" width="2.2918%" height="15" fill="rgb(210,40,34)" fg:x="47781841" fg:w="3445617"/><text x="32.0314%" y="399.50">c..</text></g><g><title>sha2::sha256::soft::schedule (8,546,617 samples, 5.68%)</title><rect x="31.7814%" y="421" width="5.6847%" height="15" fill="rgb(241,220,44)" fg:x="47781841" fg:w="8546617"/><text x="32.0314%" y="431.50">sha2::s..</text></g><g><title>sha2::sha256::soft::sha256msg1 (5,101,000 samples, 3.39%)</title><rect x="34.0733%" y="405" width="3.3929%" height="15" fill="rgb(235,28,35)" fg:x="51227458" fg:w="5101000"/><text x="34.3233%" y="415.50">sha..</text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (5,101,000 samples, 3.39%)</title><rect x="34.0733%" y="389" width="3.3929%" height="15" fill="rgb(210,56,17)" fg:x="51227458" fg:w="5101000"/><text x="34.3233%" y="399.50">sha..</text></g><g><title>sha2::sha256::soft::or (5,101,000 samples, 3.39%)</title><rect x="34.0733%" y="373" width="3.3929%" height="15" fill="rgb(224,130,29)" fg:x="51227458" fg:w="5101000"/><text x="34.3233%" y="383.50">sha..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (4,352,149 samples, 2.89%)</title><rect x="39.8952%" y="405" width="2.8948%" height="15" fill="rgb(235,212,8)" fg:x="59980430" fg:w="4352149"/><text x="40.1452%" y="415.50">co..</text></g><g><title>lab4::checksum::Checksum::with_sha256 (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="613" width="13.3905%" height="15" fill="rgb(223,33,50)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="623.50">lab4::checksum::Chec..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="597" width="13.3905%" height="15" fill="rgb(219,149,13)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="607.50">&lt;D as digest::digest..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="581" width="13.3905%" height="15" fill="rgb(250,156,29)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="591.50">digest::fixed::Fixed..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="565" width="13.3905%" height="15" fill="rgb(216,193,19)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="575.50">&lt;D as digest::fixed:..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="549" width="13.3905%" height="15" fill="rgb(216,135,14)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="559.50">&lt;sha2::sha256::Sha25..</text></g><g><title>sha2::sha256::Engine256::finish (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="533" width="13.3905%" height="15" fill="rgb(241,47,5)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="543.50">sha2::sha256::Engine..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="517" width="13.3905%" height="15" fill="rgb(233,42,35)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="527.50">block_buffer::BlockB..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="501" width="13.3905%" height="15" fill="rgb(231,13,6)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="511.50">sha2::sha256::Engine..</text></g><g><title>sha2::sha256::compress256 (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="485" width="13.3905%" height="15" fill="rgb(207,181,40)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="495.50">sha2::sha256::compre..</text></g><g><title>sha2::sha256::x86::compress (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="469" width="13.3905%" height="15" fill="rgb(254,173,49)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="479.50">sha2::sha256::x86::c..</text></g><g><title>sha2::sha256::soft::compress (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="453" width="13.3905%" height="15" fill="rgb(221,1,38)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="463.50">sha2::sha256::soft::..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (20,131,905 samples, 13.39%)</title><rect x="31.7814%" y="437" width="13.3905%" height="15" fill="rgb(206,124,46)" fg:x="47781841" fg:w="20131905"/><text x="32.0314%" y="447.50">sha2::sha256::soft::..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (11,585,288 samples, 7.71%)</title><rect x="37.4661%" y="421" width="7.7058%" height="15" fill="rgb(249,21,11)" fg:x="56328458" fg:w="11585288"/><text x="37.7161%" y="431.50">sha2::sha25..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3,581,167 samples, 2.38%)</title><rect x="42.7899%" y="405" width="2.3820%" height="15" fill="rgb(222,201,40)" fg:x="64332579" fg:w="3581167"/><text x="43.0399%" y="415.50">co..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (8,990,650 samples, 5.98%)</title><rect x="45.1719%" y="565" width="5.9800%" height="15" fill="rgb(235,61,29)" fg:x="67913746" fg:w="8990650"/><text x="45.4219%" y="575.50">std::sys..</text></g><g><title>syscall (8,990,650 samples, 5.98%)</title><rect x="45.1719%" y="549" width="5.9800%" height="15" fill="rgb(219,207,3)" fg:x="67913746" fg:w="8990650"/><text x="45.4219%" y="559.50">syscall</text></g><g><title>[unknown] (8,990,650 samples, 5.98%)</title><rect x="45.1719%" y="533" width="5.9800%" height="15" fill="rgb(222,56,46)" fg:x="67913746" fg:w="8990650"/><text x="45.4219%" y="543.50">[unknown]</text></g><g><title>[unknown] (5,012,554 samples, 3.33%)</title><rect x="47.8179%" y="517" width="3.3340%" height="15" fill="rgb(239,76,54)" fg:x="71891842" fg:w="5012554"/><text x="48.0679%" y="527.50">[un..</text></g><g><title>[unknown] (3,395,316 samples, 2.26%)</title><rect x="48.8936%" y="501" width="2.2583%" height="15" fill="rgb(231,124,27)" fg:x="73509080" fg:w="3395316"/><text x="49.1436%" y="511.50">[..</text></g><g><title>[unknown] (3,395,316 samples, 2.26%)</title><rect x="48.8936%" y="485" width="2.2583%" height="15" fill="rgb(249,195,6)" fg:x="73509080" fg:w="3395316"/><text x="49.1436%" y="495.50">[..</text></g><g><title>[unknown] (3,117,561 samples, 2.07%)</title><rect x="49.0783%" y="469" width="2.0736%" height="15" fill="rgb(237,174,47)" fg:x="73786835" fg:w="3117561"/><text x="49.3283%" y="479.50">[..</text></g><g><title>[unknown] (3,117,561 samples, 2.07%)</title><rect x="49.0783%" y="453" width="2.0736%" height="15" fill="rgb(206,201,31)" fg:x="73786835" fg:w="3117561"/><text x="49.3283%" y="463.50">[..</text></g><g><title>[unknown] (2,840,646 samples, 1.89%)</title><rect x="49.2625%" y="437" width="1.8894%" height="15" fill="rgb(231,57,52)" fg:x="74063750" fg:w="2840646"/><text x="49.5125%" y="447.50">[..</text></g><g><title>[unknown] (1,635,509 samples, 1.09%)</title><rect x="50.0641%" y="421" width="1.0878%" height="15" fill="rgb(248,177,22)" fg:x="75268887" fg:w="1635509"/><text x="50.3141%" y="431.50"></text></g><g><title>[unknown] (1,635,509 samples, 1.09%)</title><rect x="50.0641%" y="405" width="1.0878%" height="15" fill="rgb(215,211,37)" fg:x="75268887" fg:w="1635509"/><text x="50.3141%" y="415.50"></text></g><g><title>[unknown] (1,635,509 samples, 1.09%)</title><rect x="50.0641%" y="389" width="1.0878%" height="15" fill="rgb(241,128,51)" fg:x="75268887" fg:w="1635509"/><text x="50.3141%" y="399.50"></text></g><g><title>[unknown] (1,635,509 samples, 1.09%)</title><rect x="50.0641%" y="373" width="1.0878%" height="15" fill="rgb(227,165,31)" fg:x="75268887" fg:w="1635509"/><text x="50.3141%" y="383.50"></text></g><g><title>[unknown] (347,242 samples, 0.23%)</title><rect x="50.9210%" y="357" width="0.2310%" height="15" fill="rgb(228,167,24)" fg:x="76557154" fg:w="347242"/><text x="51.1710%" y="367.50"></text></g><g><title>[unknown] (347,242 samples, 0.23%)</title><rect x="50.9210%" y="341" width="0.2310%" height="15" fill="rgb(228,143,12)" fg:x="76557154" fg:w="347242"/><text x="51.1710%" y="351.50"></text></g><g><title>[unknown] (347,242 samples, 0.23%)</title><rect x="50.9210%" y="325" width="0.2310%" height="15" fill="rgb(249,149,8)" fg:x="76557154" fg:w="347242"/><text x="51.1710%" y="335.50"></text></g><g><title>[unknown] (347,242 samples, 0.23%)</title><rect x="50.9210%" y="309" width="0.2310%" height="15" fill="rgb(243,35,44)" fg:x="76557154" fg:w="347242"/><text x="51.1710%" y="319.50"></text></g><g><title>lab4::package::PackageDownloader::run (70,350,018 samples, 46.79%)</title><rect x="9.0979%" y="629" width="46.7924%" height="15" fill="rgb(246,89,9)" fg:x="13678294" fg:w="70350018"/><text x="9.3479%" y="639.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (16,114,566 samples, 10.72%)</title><rect x="45.1719%" y="613" width="10.7184%" height="15" fill="rgb(233,213,13)" fg:x="67913746" fg:w="16114566"/><text x="45.4219%" y="623.50">std::sync::poiso..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (16,114,566 samples, 10.72%)</title><rect x="45.1719%" y="597" width="10.7184%" height="15" fill="rgb(233,141,41)" fg:x="67913746" fg:w="16114566"/><text x="45.4219%" y="607.50">std::sys::sync::..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (16,114,566 samples, 10.72%)</title><rect x="45.1719%" y="581" width="10.7184%" height="15" fill="rgb(239,167,4)" fg:x="67913746" fg:w="16114566"/><text x="45.4219%" y="591.50">std::sys::sync::..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7,123,916 samples, 4.74%)</title><rect x="51.1519%" y="565" width="4.7384%" height="15" fill="rgb(209,217,16)" fg:x="76904396" fg:w="7123916"/><text x="51.4019%" y="575.50">std::s..</text></g><g><title>core::hint::spin_loop (7,123,916 samples, 4.74%)</title><rect x="51.1519%" y="549" width="4.7384%" height="15" fill="rgb(219,88,35)" fg:x="76904396" fg:w="7123916"/><text x="51.4019%" y="559.50">core::..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7,123,916 samples, 4.74%)</title><rect x="51.1519%" y="533" width="4.7384%" height="15" fill="rgb(220,193,23)" fg:x="76904396" fg:w="7123916"/><text x="51.4019%" y="543.50">core::..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (4,998,963 samples, 3.32%)</title><rect x="55.8903%" y="485" width="3.3250%" height="15" fill="rgb(230,90,52)" fg:x="84028312" fg:w="4998963"/><text x="56.1403%" y="495.50">cro..</text></g><g><title>core::sync::atomic::spin_loop_hint (4,998,963 samples, 3.32%)</title><rect x="55.8903%" y="469" width="3.3250%" height="15" fill="rgb(252,106,19)" fg:x="84028312" fg:w="4998963"/><text x="56.1403%" y="479.50">cor..</text></g><g><title>core::hint::spin_loop (4,998,963 samples, 3.32%)</title><rect x="55.8903%" y="453" width="3.3250%" height="15" fill="rgb(206,74,20)" fg:x="84028312" fg:w="4998963"/><text x="56.1403%" y="463.50">cor..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (4,998,963 samples, 3.32%)</title><rect x="55.8903%" y="437" width="3.3250%" height="15" fill="rgb(230,138,44)" fg:x="84028312" fg:w="4998963"/><text x="56.1403%" y="447.50">cor..</text></g><g><title>crossbeam_channel::context::Context::with (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="581" width="3.5774%" height="15" fill="rgb(235,182,43)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="591.50">cros..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="565" width="3.5774%" height="15" fill="rgb(242,16,51)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="575.50">std:..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="549" width="3.5774%" height="15" fill="rgb(248,9,4)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="559.50">cros..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="533" width="3.5774%" height="15" fill="rgb(210,31,22)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="543.50">cros..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="517" width="3.5774%" height="15" fill="rgb(239,54,39)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="527.50">cros..</text></g><g><title>crossbeam_channel::context::Context::wait_until (5,378,517 samples, 3.58%)</title><rect x="55.8903%" y="501" width="3.5774%" height="15" fill="rgb(230,99,41)" fg:x="84028312" fg:w="5378517"/><text x="56.1403%" y="511.50">cros..</text></g><g><title>std::thread::park (379,554 samples, 0.25%)</title><rect x="59.2153%" y="485" width="0.2525%" height="15" fill="rgb(253,106,12)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="495.50"></text></g><g><title>std::thread::Thread::park (379,554 samples, 0.25%)</title><rect x="59.2153%" y="469" width="0.2525%" height="15" fill="rgb(213,46,41)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="479.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (379,554 samples, 0.25%)</title><rect x="59.2153%" y="453" width="0.2525%" height="15" fill="rgb(215,133,35)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (379,554 samples, 0.25%)</title><rect x="59.2153%" y="437" width="0.2525%" height="15" fill="rgb(213,28,5)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="447.50"></text></g><g><title>syscall (379,554 samples, 0.25%)</title><rect x="59.2153%" y="421" width="0.2525%" height="15" fill="rgb(215,77,49)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="431.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="405" width="0.2525%" height="15" fill="rgb(248,100,22)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="415.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="389" width="0.2525%" height="15" fill="rgb(208,67,9)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="399.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="373" width="0.2525%" height="15" fill="rgb(219,133,21)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="383.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="357" width="0.2525%" height="15" fill="rgb(246,46,29)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="367.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="341" width="0.2525%" height="15" fill="rgb(246,185,52)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="351.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="325" width="0.2525%" height="15" fill="rgb(252,136,11)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="335.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="309" width="0.2525%" height="15" fill="rgb(219,138,53)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="319.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="293" width="0.2525%" height="15" fill="rgb(211,51,23)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="303.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="277" width="0.2525%" height="15" fill="rgb(247,221,28)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="287.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="261" width="0.2525%" height="15" fill="rgb(251,222,45)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="271.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="245" width="0.2525%" height="15" fill="rgb(217,162,53)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="255.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="229" width="0.2525%" height="15" fill="rgb(229,93,14)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="239.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="213" width="0.2525%" height="15" fill="rgb(209,67,49)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="223.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="197" width="0.2525%" height="15" fill="rgb(213,87,29)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="207.50"></text></g><g><title>[unknown] (379,554 samples, 0.25%)</title><rect x="59.2153%" y="181" width="0.2525%" height="15" fill="rgb(205,151,52)" fg:x="89027275" fg:w="379554"/><text x="59.4653%" y="191.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (4,304,242 samples, 2.86%)</title><rect x="59.4677%" y="581" width="2.8629%" height="15" fill="rgb(253,215,39)" fg:x="89406829" fg:w="4304242"/><text x="59.7177%" y="591.50">cr..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (4,304,242 samples, 2.86%)</title><rect x="59.4677%" y="565" width="2.8629%" height="15" fill="rgb(221,220,41)" fg:x="89406829" fg:w="4304242"/><text x="59.7177%" y="575.50">co..</text></g><g><title>core::sync::atomic::atomic_or (4,304,242 samples, 2.86%)</title><rect x="59.4677%" y="549" width="2.8629%" height="15" fill="rgb(218,133,21)" fg:x="89406829" fg:w="4304242"/><text x="59.7177%" y="559.50">co..</text></g><g><title>__GI___sched_yield (5,558,425 samples, 3.70%)</title><rect x="62.3307%" y="565" width="3.6971%" height="15" fill="rgb(221,193,43)" fg:x="93711071" fg:w="5558425"/><text x="62.5807%" y="575.50">__GI..</text></g><g><title>[unknown] (5,558,425 samples, 3.70%)</title><rect x="62.3307%" y="549" width="3.6971%" height="15" fill="rgb(240,128,52)" fg:x="93711071" fg:w="5558425"/><text x="62.5807%" y="559.50">[unk..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="533" width="2.3107%" height="15" fill="rgb(253,114,12)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="543.50">[..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="517" width="2.3107%" height="15" fill="rgb(215,223,47)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="527.50">[..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="501" width="2.3107%" height="15" fill="rgb(248,225,23)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="511.50">[..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="485" width="2.3107%" height="15" fill="rgb(250,108,0)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="495.50">[..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="469" width="2.3107%" height="15" fill="rgb(228,208,7)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="479.50">[..</text></g><g><title>[unknown] (3,474,072 samples, 2.31%)</title><rect x="63.7170%" y="453" width="2.3107%" height="15" fill="rgb(244,45,10)" fg:x="95795424" fg:w="3474072"/><text x="63.9670%" y="463.50">[..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,275,031 samples, 2.18%)</title><rect x="66.0278%" y="565" width="2.1783%" height="15" fill="rgb(207,125,25)" fg:x="99269496" fg:w="3275031"/><text x="66.2778%" y="575.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,275,031 samples, 2.18%)</title><rect x="66.0278%" y="549" width="2.1783%" height="15" fill="rgb(210,195,18)" fg:x="99269496" fg:w="3275031"/><text x="66.2778%" y="559.50">&lt;..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3,275,031 samples, 2.18%)</title><rect x="66.0278%" y="533" width="2.1783%" height="15" fill="rgb(249,80,12)" fg:x="99269496" fg:w="3275031"/><text x="66.2778%" y="543.50">c..</text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (32,301,354 samples, 21.48%)</title><rect x="55.8903%" y="613" width="21.4848%" height="15" fill="rgb(221,65,9)" fg:x="84028312" fg:w="32301354"/><text x="56.1403%" y="623.50">crossbeam_channel::channel::Receiv..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (32,301,354 samples, 21.48%)</title><rect x="55.8903%" y="597" width="21.4848%" height="15" fill="rgb(235,49,36)" fg:x="84028312" fg:w="32301354"/><text x="56.1403%" y="607.50">crossbeam_channel::flavors::list::..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (22,618,595 samples, 15.04%)</title><rect x="62.3307%" y="581" width="15.0445%" height="15" fill="rgb(225,32,20)" fg:x="93711071" fg:w="22618595"/><text x="62.5807%" y="591.50">crossbeam_utils::backof..</text></g><g><title>core::sync::atomic::spin_loop_hint (13,785,139 samples, 9.17%)</title><rect x="68.2061%" y="565" width="9.1690%" height="15" fill="rgb(215,141,46)" fg:x="102544527" fg:w="13785139"/><text x="68.4561%" y="575.50">core::sync::a..</text></g><g><title>core::hint::spin_loop (13,785,139 samples, 9.17%)</title><rect x="68.2061%" y="549" width="9.1690%" height="15" fill="rgb(250,160,47)" fg:x="102544527" fg:w="13785139"/><text x="68.4561%" y="559.50">core::hint::s..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13,785,139 samples, 9.17%)</title><rect x="68.2061%" y="533" width="9.1690%" height="15" fill="rgb(216,222,40)" fg:x="102544527" fg:w="13785139"/><text x="68.4561%" y="543.50">core::core_ar..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="613" width="8.8855%" height="15" fill="rgb(234,217,39)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="623.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="597" width="8.8855%" height="15" fill="rgb(207,178,40)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="607.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="581" width="8.8855%" height="15" fill="rgb(221,136,13)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="591.50">crossbeam_cha..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="565" width="8.8855%" height="15" fill="rgb(249,199,10)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="575.50">crossbeam_uti..</text></g><g><title>core::sync::atomic::spin_loop_hint (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="549" width="8.8855%" height="15" fill="rgb(249,222,13)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="559.50">core::sync::a..</text></g><g><title>core::hint::spin_loop (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="533" width="8.8855%" height="15" fill="rgb(244,185,38)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="543.50">core::hint::s..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13,358,953 samples, 8.89%)</title><rect x="77.3751%" y="517" width="8.8855%" height="15" fill="rgb(236,202,9)" fg:x="116329666" fg:w="13358953"/><text x="77.6251%" y="527.50">core::core_ar..</text></g><g><title>sha2::sha256::soft::schedule (3,651,688 samples, 2.43%)</title><rect x="86.2606%" y="405" width="2.4289%" height="15" fill="rgb(250,229,37)" fg:x="129688619" fg:w="3651688"/><text x="86.5106%" y="415.50">sh..</text></g><g><title>sha2::sha256::soft::sha256msg2 (3,651,688 samples, 2.43%)</title><rect x="86.2606%" y="389" width="2.4289%" height="15" fill="rgb(206,174,23)" fg:x="129688619" fg:w="3651688"/><text x="86.5106%" y="399.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3,651,688 samples, 2.43%)</title><rect x="86.2606%" y="373" width="2.4289%" height="15" fill="rgb(211,33,43)" fg:x="129688619" fg:w="3651688"/><text x="86.5106%" y="383.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="805" width="84.9087%" height="15" fill="rgb(245,58,50)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="815.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="789" width="84.9087%" height="15" fill="rgb(244,68,36)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="799.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="773" width="84.9087%" height="15" fill="rgb(232,229,15)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="757" width="84.9087%" height="15" fill="rgb(254,30,23)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="767.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="741" width="84.9087%" height="15" fill="rgb(235,160,14)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="725" width="84.9087%" height="15" fill="rgb(212,155,44)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="709" width="84.9087%" height="15" fill="rgb(226,2,50)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="719.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="693" width="84.9087%" height="15" fill="rgb(234,177,6)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="703.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="677" width="84.9087%" height="15" fill="rgb(217,24,9)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="687.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="661" width="84.9087%" height="15" fill="rgb(220,13,46)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="671.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (127,656,018 samples, 84.91%)</title><rect x="6.4400%" y="645" width="84.9087%" height="15" fill="rgb(239,221,27)" fg:x="9682289" fg:w="127656018"/><text x="6.6900%" y="655.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (53,309,995 samples, 35.46%)</title><rect x="55.8903%" y="629" width="35.4584%" height="15" fill="rgb(222,198,25)" fg:x="84028312" fg:w="53309995"/><text x="56.1403%" y="639.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="613" width="5.0881%" height="15" fill="rgb(211,99,13)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="623.50">lab4::..</text></g><g><title>lab4::checksum::Checksum::with_sha256 (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="597" width="5.0881%" height="15" fill="rgb(232,111,31)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="607.50">lab4::..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="581" width="5.0881%" height="15" fill="rgb(245,82,37)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="591.50">&lt;D as ..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="565" width="5.0881%" height="15" fill="rgb(227,149,46)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="575.50">digest..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="549" width="5.0881%" height="15" fill="rgb(218,36,50)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="559.50">&lt;D as ..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="533" width="5.0881%" height="15" fill="rgb(226,80,48)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="543.50">&lt;sha2:..</text></g><g><title>sha2::sha256::Engine256::finish (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="517" width="5.0881%" height="15" fill="rgb(238,224,15)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="527.50">sha2::..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="501" width="5.0881%" height="15" fill="rgb(241,136,10)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="511.50">block_..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="485" width="5.0881%" height="15" fill="rgb(208,32,45)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="495.50">sha2::..</text></g><g><title>sha2::sha256::compress256 (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="469" width="5.0881%" height="15" fill="rgb(207,135,9)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="479.50">sha2::..</text></g><g><title>sha2::sha256::x86::compress (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="453" width="5.0881%" height="15" fill="rgb(206,86,44)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="463.50">sha2::..</text></g><g><title>sha2::sha256::soft::compress (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="437" width="5.0881%" height="15" fill="rgb(245,177,15)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="447.50">sha2::..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (7,649,688 samples, 5.09%)</title><rect x="86.2606%" y="421" width="5.0881%" height="15" fill="rgb(206,64,50)" fg:x="129688619" fg:w="7649688"/><text x="86.5106%" y="431.50">sha2::..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3,998,000 samples, 2.66%)</title><rect x="88.6895%" y="405" width="2.6592%" height="15" fill="rgb(234,36,40)" fg:x="133340307" fg:w="3998000"/><text x="88.9395%" y="415.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3,998,000 samples, 2.66%)</title><rect x="88.6895%" y="389" width="2.6592%" height="15" fill="rgb(213,64,8)" fg:x="133340307" fg:w="3998000"/><text x="88.9395%" y="399.50">co..</text></g><g><title>[unknown] (702,116 samples, 0.47%)</title><rect x="91.3487%" y="677" width="0.4670%" height="15" fill="rgb(210,75,36)" fg:x="137338307" fg:w="702116"/><text x="91.5987%" y="687.50"></text></g><g><title>__GI___mmap64 (2,353,942 samples, 1.57%)</title><rect x="91.8157%" y="677" width="1.5657%" height="15" fill="rgb(229,88,21)" fg:x="138040423" fg:w="2353942"/><text x="92.0657%" y="687.50"></text></g><g><title>[unknown] (2,353,942 samples, 1.57%)</title><rect x="91.8157%" y="661" width="1.5657%" height="15" fill="rgb(252,204,47)" fg:x="138040423" fg:w="2353942"/><text x="92.0657%" y="671.50"></text></g><g><title>[unknown] (2,064,515 samples, 1.37%)</title><rect x="92.0082%" y="645" width="1.3732%" height="15" fill="rgb(208,77,27)" fg:x="138329850" fg:w="2064515"/><text x="92.2582%" y="655.50"></text></g><g><title>[unknown] (2,064,515 samples, 1.37%)</title><rect x="92.0082%" y="629" width="1.3732%" height="15" fill="rgb(221,76,26)" fg:x="138329850" fg:w="2064515"/><text x="92.2582%" y="639.50"></text></g><g><title>[unknown] (2,064,515 samples, 1.37%)</title><rect x="92.0082%" y="613" width="1.3732%" height="15" fill="rgb(225,139,18)" fg:x="138329850" fg:w="2064515"/><text x="92.2582%" y="623.50"></text></g><g><title>[unknown] (2,064,515 samples, 1.37%)</title><rect x="92.0082%" y="597" width="1.3732%" height="15" fill="rgb(230,137,11)" fg:x="138329850" fg:w="2064515"/><text x="92.2582%" y="607.50"></text></g><g><title>[unknown] (2,064,515 samples, 1.37%)</title><rect x="92.0082%" y="581" width="1.3732%" height="15" fill="rgb(212,28,1)" fg:x="138329850" fg:w="2064515"/><text x="92.2582%" y="591.50"></text></g><g><title>[unknown] (1,890,688 samples, 1.26%)</title><rect x="92.1238%" y="565" width="1.2576%" height="15" fill="rgb(248,164,17)" fg:x="138503677" fg:w="1890688"/><text x="92.3738%" y="575.50"></text></g><g><title>[unknown] (1,890,688 samples, 1.26%)</title><rect x="92.1238%" y="549" width="1.2576%" height="15" fill="rgb(222,171,42)" fg:x="138503677" fg:w="1890688"/><text x="92.3738%" y="559.50"></text></g><g><title>[unknown] (1,549,509 samples, 1.03%)</title><rect x="92.3508%" y="533" width="1.0306%" height="15" fill="rgb(243,84,45)" fg:x="138844856" fg:w="1549509"/><text x="92.6008%" y="543.50"></text></g><g><title>[unknown] (1,549,509 samples, 1.03%)</title><rect x="92.3508%" y="517" width="1.0306%" height="15" fill="rgb(252,49,23)" fg:x="138844856" fg:w="1549509"/><text x="92.6008%" y="527.50"></text></g><g><title>[unknown] (924,395 samples, 0.61%)</title><rect x="92.7666%" y="501" width="0.6148%" height="15" fill="rgb(215,19,7)" fg:x="139469970" fg:w="924395"/><text x="93.0166%" y="511.50"></text></g><g><title>[unknown] (378,327 samples, 0.25%)</title><rect x="93.1298%" y="485" width="0.2516%" height="15" fill="rgb(238,81,41)" fg:x="140016038" fg:w="378327"/><text x="93.3798%" y="495.50"></text></g><g><title>[unknown] (378,327 samples, 0.25%)</title><rect x="93.1298%" y="469" width="0.2516%" height="15" fill="rgb(210,199,37)" fg:x="140016038" fg:w="378327"/><text x="93.3798%" y="479.50"></text></g><g><title>__GI___mprotect (1,833,379 samples, 1.22%)</title><rect x="93.3814%" y="677" width="1.2194%" height="15" fill="rgb(244,192,49)" fg:x="140394365" fg:w="1833379"/><text x="93.6314%" y="687.50"></text></g><g><title>[unknown] (1,833,379 samples, 1.22%)</title><rect x="93.3814%" y="661" width="1.2194%" height="15" fill="rgb(226,211,11)" fg:x="140394365" fg:w="1833379"/><text x="93.6314%" y="671.50"></text></g><g><title>[unknown] (1,833,379 samples, 1.22%)</title><rect x="93.3814%" y="645" width="1.2194%" height="15" fill="rgb(236,162,54)" fg:x="140394365" fg:w="1833379"/><text x="93.6314%" y="655.50"></text></g><g><title>[unknown] (1,833,379 samples, 1.22%)</title><rect x="93.3814%" y="629" width="1.2194%" height="15" fill="rgb(220,229,9)" fg:x="140394365" fg:w="1833379"/><text x="93.6314%" y="639.50"></text></g><g><title>[unknown] (1,833,379 samples, 1.22%)</title><rect x="93.3814%" y="613" width="1.2194%" height="15" fill="rgb(250,87,22)" fg:x="140394365" fg:w="1833379"/><text x="93.6314%" y="623.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="773" width="3.4658%" height="15" fill="rgb(239,43,17)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="783.50">std..</text></g><g><title>pthread_getattr_np (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="757" width="3.4658%" height="15" fill="rgb(231,177,25)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="767.50">pth..</text></g><g><title>__GI___libc_malloc (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="741" width="3.4658%" height="15" fill="rgb(219,179,1)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="751.50">__G..</text></g><g><title>tcache_init.part.0 (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="725" width="3.4658%" height="15" fill="rgb(238,219,53)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="735.50">tca..</text></g><g><title>arena_get2.part.0 (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="709" width="3.4658%" height="15" fill="rgb(232,167,36)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="719.50">are..</text></g><g><title>new_heap (5,210,588 samples, 3.47%)</title><rect x="91.3487%" y="693" width="3.4658%" height="15" fill="rgb(244,19,51)" fg:x="137338307" fg:w="5210588"/><text x="91.5987%" y="703.50">new..</text></g><g><title>__GI_munmap (321,151 samples, 0.21%)</title><rect x="94.6009%" y="677" width="0.2136%" height="15" fill="rgb(224,6,22)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="687.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="661" width="0.2136%" height="15" fill="rgb(224,145,5)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="671.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="645" width="0.2136%" height="15" fill="rgb(234,130,49)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="655.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="629" width="0.2136%" height="15" fill="rgb(254,6,2)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="639.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="613" width="0.2136%" height="15" fill="rgb(208,96,46)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="623.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="597" width="0.2136%" height="15" fill="rgb(239,3,39)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="607.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="581" width="0.2136%" height="15" fill="rgb(233,210,1)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="591.50"></text></g><g><title>[unknown] (321,151 samples, 0.21%)</title><rect x="94.6009%" y="565" width="0.2136%" height="15" fill="rgb(244,137,37)" fg:x="142227744" fg:w="321151"/><text x="94.8509%" y="575.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="549" width="0.0157%" height="15" fill="rgb(240,136,2)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="559.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="533" width="0.0157%" height="15" fill="rgb(239,18,37)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="543.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="517" width="0.0157%" height="15" fill="rgb(218,185,22)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="527.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="501" width="0.0157%" height="15" fill="rgb(225,218,4)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="511.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="485" width="0.0157%" height="15" fill="rgb(230,182,32)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="495.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="469" width="0.0157%" height="15" fill="rgb(242,56,43)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="479.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="453" width="0.0157%" height="15" fill="rgb(233,99,24)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="463.50"></text></g><g><title>[unknown] (23,639 samples, 0.02%)</title><rect x="94.7987%" y="437" width="0.0157%" height="15" fill="rgb(234,209,42)" fg:x="142525256" fg:w="23639"/><text x="95.0487%" y="447.50"></text></g><g><title>__GI___mmap64 (579,443 samples, 0.39%)</title><rect x="94.8145%" y="757" width="0.3854%" height="15" fill="rgb(227,7,12)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="767.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="741" width="0.3854%" height="15" fill="rgb(245,203,43)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="751.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="725" width="0.3854%" height="15" fill="rgb(238,205,33)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="735.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="709" width="0.3854%" height="15" fill="rgb(231,56,7)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="719.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="693" width="0.3854%" height="15" fill="rgb(244,186,29)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="703.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="677" width="0.3854%" height="15" fill="rgb(234,111,31)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="687.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="661" width="0.3854%" height="15" fill="rgb(241,149,10)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="671.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="645" width="0.3854%" height="15" fill="rgb(249,206,44)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="655.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="629" width="0.3854%" height="15" fill="rgb(251,153,30)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="639.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="613" width="0.3854%" height="15" fill="rgb(239,152,38)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="623.50"></text></g><g><title>[unknown] (579,443 samples, 0.39%)</title><rect x="94.8145%" y="597" width="0.3854%" height="15" fill="rgb(249,139,47)" fg:x="142548895" fg:w="579443"/><text x="95.0645%" y="607.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="581" width="0.0263%" height="15" fill="rgb(244,64,35)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="591.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="565" width="0.0263%" height="15" fill="rgb(216,46,15)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="575.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="549" width="0.0263%" height="15" fill="rgb(250,74,19)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="559.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="533" width="0.0263%" height="15" fill="rgb(249,42,33)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="543.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="517" width="0.0263%" height="15" fill="rgb(242,149,17)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="527.50"></text></g><g><title>[unknown] (39,555 samples, 0.03%)</title><rect x="95.1736%" y="501" width="0.0263%" height="15" fill="rgb(244,29,21)" fg:x="143088783" fg:w="39555"/><text x="95.4236%" y="511.50"></text></g><g><title>__GI___clone (141,977,640 samples, 94.43%)</title><rect x="4.1433%" y="853" width="94.4345%" height="15" fill="rgb(220,130,37)" fg:x="6229306" fg:w="141977640"/><text x="4.3933%" y="863.50">__GI___clone</text></g><g><title>start_thread (141,180,835 samples, 93.90%)</title><rect x="4.6733%" y="837" width="93.9045%" height="15" fill="rgb(211,67,2)" fg:x="7026111" fg:w="141180835"/><text x="4.9233%" y="847.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (138,524,657 samples, 92.14%)</title><rect x="6.4400%" y="821" width="92.1378%" height="15" fill="rgb(235,68,52)" fg:x="9682289" fg:w="138524657"/><text x="6.6900%" y="831.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (10,868,639 samples, 7.23%)</title><rect x="91.3487%" y="805" width="7.2291%" height="15" fill="rgb(246,142,3)" fg:x="137338307" fg:w="10868639"/><text x="91.5987%" y="815.50">std::sys::..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (10,868,639 samples, 7.23%)</title><rect x="91.3487%" y="789" width="7.2291%" height="15" fill="rgb(241,25,7)" fg:x="137338307" fg:w="10868639"/><text x="91.5987%" y="799.50">std::sys::..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (5,658,051 samples, 3.76%)</title><rect x="94.8145%" y="773" width="3.7634%" height="15" fill="rgb(242,119,39)" fg:x="142548895" fg:w="5658051"/><text x="95.0645%" y="783.50">std:..</text></g><g><title>__GI___mprotect (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="757" width="3.3780%" height="15" fill="rgb(241,98,45)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="767.50">__G..</text></g><g><title>[unknown] (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="741" width="3.3780%" height="15" fill="rgb(254,28,30)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="751.50">[un..</text></g><g><title>[unknown] (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="725" width="3.3780%" height="15" fill="rgb(241,142,54)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="735.50">[un..</text></g><g><title>[unknown] (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="709" width="3.3780%" height="15" fill="rgb(222,85,15)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="719.50">[un..</text></g><g><title>[unknown] (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="693" width="3.3780%" height="15" fill="rgb(210,85,47)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="703.50">[un..</text></g><g><title>[unknown] (5,078,608 samples, 3.38%)</title><rect x="95.1999%" y="677" width="3.3780%" height="15" fill="rgb(224,206,25)" fg:x="143128338" fg:w="5078608"/><text x="95.4499%" y="687.50">[un..</text></g><g><title>[unknown] (2,576,609 samples, 1.71%)</title><rect x="96.8641%" y="661" width="1.7138%" height="15" fill="rgb(243,201,19)" fg:x="145630337" fg:w="2576609"/><text x="97.1141%" y="671.50"></text></g><g><title>[unknown] (2,576,609 samples, 1.71%)</title><rect x="96.8641%" y="645" width="1.7138%" height="15" fill="rgb(236,59,4)" fg:x="145630337" fg:w="2576609"/><text x="97.1141%" y="655.50"></text></g><g><title>__GI_exit (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="821" width="1.1474%" height="15" fill="rgb(254,179,45)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="831.50"></text></g><g><title>__run_exit_handlers (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="805" width="1.1474%" height="15" fill="rgb(226,14,10)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="815.50"></text></g><g><title>__GI__exit (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="789" width="1.1474%" height="15" fill="rgb(244,27,41)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="799.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="773" width="1.1474%" height="15" fill="rgb(235,35,32)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="783.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="757" width="1.1474%" height="15" fill="rgb(218,68,31)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="767.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="741" width="1.1474%" height="15" fill="rgb(207,120,37)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="751.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="725" width="1.1474%" height="15" fill="rgb(227,98,0)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="735.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="709" width="1.1474%" height="15" fill="rgb(207,7,3)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="719.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="693" width="1.1474%" height="15" fill="rgb(206,98,19)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="703.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="677" width="1.1474%" height="15" fill="rgb(217,5,26)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="687.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="661" width="1.1474%" height="15" fill="rgb(235,190,38)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="671.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="645" width="1.1474%" height="15" fill="rgb(247,86,24)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="655.50"></text></g><g><title>[unknown] (1,724,998 samples, 1.15%)</title><rect x="98.5778%" y="629" width="1.1474%" height="15" fill="rgb(205,101,16)" fg:x="148206946" fg:w="1724998"/><text x="98.8278%" y="639.50"></text></g><g><title>lab4 (150,301,439 samples, 99.97%)</title><rect x="0.0000%" y="869" width="99.9710%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="150301439"/><text x="0.2500%" y="879.50">lab4</text></g><g><title>_start (2,094,493 samples, 1.39%)</title><rect x="98.5778%" y="853" width="1.3931%" height="15" fill="rgb(231,114,1)" fg:x="148206946" fg:w="2094493"/><text x="98.8278%" y="863.50"></text></g><g><title>__libc_start_main (2,094,493 samples, 1.39%)</title><rect x="98.5778%" y="837" width="1.3931%" height="15" fill="rgb(207,184,53)" fg:x="148206946" fg:w="2094493"/><text x="98.8278%" y="847.50"></text></g><g><title>main (369,495 samples, 0.25%)</title><rect x="99.7252%" y="821" width="0.2458%" height="15" fill="rgb(224,95,51)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (369,495 samples, 0.25%)</title><rect x="99.7252%" y="805" width="0.2458%" height="15" fill="rgb(212,188,45)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="815.50"></text></g><g><title>std::panic::catch_unwind (369,495 samples, 0.25%)</title><rect x="99.7252%" y="789" width="0.2458%" height="15" fill="rgb(223,154,38)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="799.50"></text></g><g><title>std::panicking::try (369,495 samples, 0.25%)</title><rect x="99.7252%" y="773" width="0.2458%" height="15" fill="rgb(251,22,52)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="783.50"></text></g><g><title>std::panicking::try::do_call (369,495 samples, 0.25%)</title><rect x="99.7252%" y="757" width="0.2458%" height="15" fill="rgb(229,209,22)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (369,495 samples, 0.25%)</title><rect x="99.7252%" y="741" width="0.2458%" height="15" fill="rgb(234,138,34)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="751.50"></text></g><g><title>std::panic::catch_unwind (369,495 samples, 0.25%)</title><rect x="99.7252%" y="725" width="0.2458%" height="15" fill="rgb(212,95,11)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="735.50"></text></g><g><title>std::panicking::try (369,495 samples, 0.25%)</title><rect x="99.7252%" y="709" width="0.2458%" height="15" fill="rgb(240,179,47)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="719.50"></text></g><g><title>std::panicking::try::do_call (369,495 samples, 0.25%)</title><rect x="99.7252%" y="693" width="0.2458%" height="15" fill="rgb(240,163,11)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (369,495 samples, 0.25%)</title><rect x="99.7252%" y="677" width="0.2458%" height="15" fill="rgb(236,37,12)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (369,495 samples, 0.25%)</title><rect x="99.7252%" y="661" width="0.2458%" height="15" fill="rgb(232,164,16)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="671.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (369,495 samples, 0.25%)</title><rect x="99.7252%" y="645" width="0.2458%" height="15" fill="rgb(244,205,15)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (369,495 samples, 0.25%)</title><rect x="99.7252%" y="629" width="0.2458%" height="15" fill="rgb(223,117,47)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="639.50"></text></g><g><title>lab4::main (369,495 samples, 0.25%)</title><rect x="99.7252%" y="613" width="0.2458%" height="15" fill="rgb(244,107,35)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="623.50"></text></g><g><title>lab4::hackathon (369,495 samples, 0.25%)</title><rect x="99.7252%" y="597" width="0.2458%" height="15" fill="rgb(205,140,8)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="607.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (369,495 samples, 0.25%)</title><rect x="99.7252%" y="581" width="0.2458%" height="15" fill="rgb(228,84,46)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="591.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (369,495 samples, 0.25%)</title><rect x="99.7252%" y="565" width="0.2458%" height="15" fill="rgb(254,188,9)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="575.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (369,495 samples, 0.25%)</title><rect x="99.7252%" y="549" width="0.2458%" height="15" fill="rgb(206,112,54)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="559.50"></text></g><g><title>__pthread_clockjoin_ex (369,495 samples, 0.25%)</title><rect x="99.7252%" y="533" width="0.2458%" height="15" fill="rgb(216,84,49)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="543.50"></text></g><g><title>[unknown] (369,495 samples, 0.25%)</title><rect x="99.7252%" y="517" width="0.2458%" height="15" fill="rgb(214,194,35)" fg:x="149931944" fg:w="369495"/><text x="99.9752%" y="527.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="501" width="0.1297%" height="15" fill="rgb(249,28,3)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="511.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="485" width="0.1297%" height="15" fill="rgb(222,56,52)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="495.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="469" width="0.1297%" height="15" fill="rgb(245,217,50)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="479.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="453" width="0.1297%" height="15" fill="rgb(213,201,24)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="463.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="437" width="0.1297%" height="15" fill="rgb(248,116,28)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="447.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="421" width="0.1297%" height="15" fill="rgb(219,72,43)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="431.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="405" width="0.1297%" height="15" fill="rgb(209,138,14)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="415.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="389" width="0.1297%" height="15" fill="rgb(222,18,33)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="399.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="373" width="0.1297%" height="15" fill="rgb(213,199,7)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="383.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="357" width="0.1297%" height="15" fill="rgb(250,110,10)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="367.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="341" width="0.1297%" height="15" fill="rgb(248,123,6)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="351.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="325" width="0.1297%" height="15" fill="rgb(206,91,31)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="335.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="309" width="0.1297%" height="15" fill="rgb(211,154,13)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="319.50"></text></g><g><title>[unknown] (195,060 samples, 0.13%)</title><rect x="99.8412%" y="293" width="0.1297%" height="15" fill="rgb(225,148,7)" fg:x="150106379" fg:w="195060"/><text x="100.0912%" y="303.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="277" width="0.1094%" height="15" fill="rgb(220,160,43)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="287.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="261" width="0.1094%" height="15" fill="rgb(213,52,39)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="271.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="245" width="0.1094%" height="15" fill="rgb(243,137,7)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="255.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="229" width="0.1094%" height="15" fill="rgb(230,79,13)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="239.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="213" width="0.1094%" height="15" fill="rgb(247,105,23)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="223.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="197" width="0.1094%" height="15" fill="rgb(223,179,41)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="207.50"></text></g><g><title>[unknown] (164,494 samples, 0.11%)</title><rect x="99.8616%" y="181" width="0.1094%" height="15" fill="rgb(218,9,34)" fg:x="150136945" fg:w="164494"/><text x="100.1116%" y="191.50"></text></g><g><title>all (150,345,083 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(222,106,8)" fg:x="0" fg:w="150345083"/><text x="0.2500%" y="895.50"></text></g><g><title>perf-exec (43,644 samples, 0.03%)</title><rect x="99.9710%" y="869" width="0.0290%" height="15" fill="rgb(211,220,0)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="879.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="853" width="0.0290%" height="15" fill="rgb(229,52,16)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="863.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="837" width="0.0290%" height="15" fill="rgb(212,155,18)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="847.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="821" width="0.0290%" height="15" fill="rgb(242,21,14)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="831.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="805" width="0.0290%" height="15" fill="rgb(222,19,48)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="815.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="789" width="0.0290%" height="15" fill="rgb(232,45,27)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="799.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="773" width="0.0290%" height="15" fill="rgb(249,103,42)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="783.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="757" width="0.0290%" height="15" fill="rgb(246,81,33)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="767.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="741" width="0.0290%" height="15" fill="rgb(252,33,42)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="751.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="725" width="0.0290%" height="15" fill="rgb(209,212,41)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="735.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="709" width="0.0290%" height="15" fill="rgb(207,154,6)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="719.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="693" width="0.0290%" height="15" fill="rgb(223,64,47)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="703.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="677" width="0.0290%" height="15" fill="rgb(211,161,38)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="687.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="661" width="0.0290%" height="15" fill="rgb(219,138,40)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="671.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="645" width="0.0290%" height="15" fill="rgb(241,228,46)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="655.50"></text></g><g><title>[unknown] (43,644 samples, 0.03%)</title><rect x="99.9710%" y="629" width="0.0290%" height="15" fill="rgb(223,209,38)" fg:x="150301439" fg:w="43644"/><text x="100.2210%" y="639.50"></text></g></svg></svg>