<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="131691199"><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1,060,726 samples, 0.81%)</title><rect x="0.2170%" y="917" width="0.8055%" height="15" fill="rgb(227,0,7)" fg:x="285780" fg:w="1060726"/><text x="0.4670%" y="927.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="917" width="1.5240%" height="15" fill="rgb(217,0,24)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="927.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="901" width="1.5240%" height="15" fill="rgb(221,193,54)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="911.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="885" width="1.5240%" height="15" fill="rgb(248,212,6)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="895.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="869" width="1.5240%" height="15" fill="rgb(208,68,35)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="879.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="853" width="1.5240%" height="15" fill="rgb(232,128,0)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="863.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="837" width="1.5240%" height="15" fill="rgb(207,160,47)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="847.50"></text></g><g><title>[unknown] (2,007,008 samples, 1.52%)</title><rect x="1.0225%" y="821" width="1.5240%" height="15" fill="rgb(228,23,34)" fg:x="1346506" fg:w="2007008"/><text x="1.2725%" y="831.50"></text></g><g><title>[unknown] (2,007,007 samples, 1.52%)</title><rect x="1.0225%" y="805" width="1.5240%" height="15" fill="rgb(218,30,26)" fg:x="1346507" fg:w="2007007"/><text x="1.2725%" y="815.50"></text></g><g><title>[unknown] (2,007,007 samples, 1.52%)</title><rect x="1.0225%" y="789" width="1.5240%" height="15" fill="rgb(220,122,19)" fg:x="1346507" fg:w="2007007"/><text x="1.2725%" y="799.50"></text></g><g><title>[unknown] (1,755,915 samples, 1.33%)</title><rect x="1.2131%" y="773" width="1.3334%" height="15" fill="rgb(250,228,42)" fg:x="1597599" fg:w="1755915"/><text x="1.4631%" y="783.50"></text></g><g><title>[unknown] (1,755,915 samples, 1.33%)</title><rect x="1.2131%" y="757" width="1.3334%" height="15" fill="rgb(240,193,28)" fg:x="1597599" fg:w="1755915"/><text x="1.4631%" y="767.50"></text></g><g><title>[unknown] (1,504,823 samples, 1.14%)</title><rect x="1.4038%" y="741" width="1.1427%" height="15" fill="rgb(216,20,37)" fg:x="1848691" fg:w="1504823"/><text x="1.6538%" y="751.50"></text></g><g><title>[unknown] (1,504,823 samples, 1.14%)</title><rect x="1.4038%" y="725" width="1.1427%" height="15" fill="rgb(206,188,39)" fg:x="1848691" fg:w="1504823"/><text x="1.6538%" y="735.50"></text></g><g><title>[unknown] (1,504,823 samples, 1.14%)</title><rect x="1.4038%" y="709" width="1.1427%" height="15" fill="rgb(217,207,13)" fg:x="1848691" fg:w="1504823"/><text x="1.6538%" y="719.50"></text></g><g><title>[unknown] (1,286,177 samples, 0.98%)</title><rect x="1.5698%" y="693" width="0.9767%" height="15" fill="rgb(231,73,38)" fg:x="2067337" fg:w="1286177"/><text x="1.8198%" y="703.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="677" width="0.2582%" height="15" fill="rgb(225,20,46)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="687.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="661" width="0.2582%" height="15" fill="rgb(210,31,41)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="671.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="645" width="0.2582%" height="15" fill="rgb(221,200,47)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="655.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="629" width="0.2582%" height="15" fill="rgb(226,26,5)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="639.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="613" width="0.2582%" height="15" fill="rgb(249,33,26)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="623.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="597" width="0.2582%" height="15" fill="rgb(235,183,28)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="607.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="581" width="0.2582%" height="15" fill="rgb(221,5,38)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="591.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="565" width="0.2582%" height="15" fill="rgb(247,18,42)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="575.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="549" width="0.2582%" height="15" fill="rgb(241,131,45)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="559.50"></text></g><g><title>[unknown] (340,056 samples, 0.26%)</title><rect x="2.2883%" y="533" width="0.2582%" height="15" fill="rgb(249,31,29)" fg:x="3013458" fg:w="340056"/><text x="2.5383%" y="543.50"></text></g><g><title>__GI___clone (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="917" width="2.5520%" height="15" fill="rgb(225,111,53)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="927.50">__..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="901" width="2.5520%" height="15" fill="rgb(238,160,17)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="911.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="885" width="2.5520%" height="15" fill="rgb(214,148,48)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="895.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="869" width="2.5520%" height="15" fill="rgb(232,36,49)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="879.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="853" width="2.5520%" height="15" fill="rgb(209,103,24)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="863.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="837" width="2.5520%" height="15" fill="rgb(229,88,8)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="847.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="821" width="2.5520%" height="15" fill="rgb(213,181,19)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="831.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="805" width="2.5520%" height="15" fill="rgb(254,191,54)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="815.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="789" width="2.5520%" height="15" fill="rgb(241,83,37)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="799.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="773" width="2.5520%" height="15" fill="rgb(233,36,39)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="783.50">[u..</text></g><g><title>[unknown] (3,360,817 samples, 2.55%)</title><rect x="2.5465%" y="757" width="2.5520%" height="15" fill="rgb(226,3,54)" fg:x="3353514" fg:w="3360817"/><text x="2.7965%" y="767.50">[u..</text></g><g><title>[unknown] (2,449,104 samples, 1.86%)</title><rect x="3.2388%" y="741" width="1.8597%" height="15" fill="rgb(245,192,40)" fg:x="4265227" fg:w="2449104"/><text x="3.4888%" y="751.50">[..</text></g><g><title>[unknown] (2,449,104 samples, 1.86%)</title><rect x="3.2388%" y="725" width="1.8597%" height="15" fill="rgb(238,167,29)" fg:x="4265227" fg:w="2449104"/><text x="3.4888%" y="735.50">[..</text></g><g><title>[unknown] (2,449,104 samples, 1.86%)</title><rect x="3.2388%" y="709" width="1.8597%" height="15" fill="rgb(232,182,51)" fg:x="4265227" fg:w="2449104"/><text x="3.4888%" y="719.50">[..</text></g><g><title>[unknown] (1,532,813 samples, 1.16%)</title><rect x="3.9346%" y="693" width="1.1639%" height="15" fill="rgb(231,60,39)" fg:x="5181518" fg:w="1532813"/><text x="4.1846%" y="703.50"></text></g><g><title>[unknown] (1,532,813 samples, 1.16%)</title><rect x="3.9346%" y="677" width="1.1639%" height="15" fill="rgb(208,69,12)" fg:x="5181518" fg:w="1532813"/><text x="4.1846%" y="687.50"></text></g><g><title>[unknown] (7,951,383 samples, 6.04%)</title><rect x="0.0000%" y="933" width="6.0379%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="7951383"/><text x="0.2500%" y="943.50">[unknown]</text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (1,237,052 samples, 0.94%)</title><rect x="5.0985%" y="917" width="0.9394%" height="15" fill="rgb(213,116,39)" fg:x="6714331" fg:w="1237052"/><text x="5.3485%" y="927.50"></text></g><g><title>[unknown] (470,966 samples, 0.36%)</title><rect x="6.0379%" y="917" width="0.3576%" height="15" fill="rgb(222,207,29)" fg:x="7951383" fg:w="470966"/><text x="6.2879%" y="927.50"></text></g><g><title>[unknown] (470,966 samples, 0.36%)</title><rect x="6.0379%" y="901" width="0.3576%" height="15" fill="rgb(206,96,30)" fg:x="7951383" fg:w="470966"/><text x="6.2879%" y="911.50"></text></g><g><title>[unknown] (470,966 samples, 0.36%)</title><rect x="6.0379%" y="885" width="0.3576%" height="15" fill="rgb(218,138,4)" fg:x="7951383" fg:w="470966"/><text x="6.2879%" y="895.50"></text></g><g><title>[unknown] (433,100 samples, 0.33%)</title><rect x="6.0667%" y="869" width="0.3289%" height="15" fill="rgb(250,191,14)" fg:x="7989249" fg:w="433100"/><text x="6.3167%" y="879.50"></text></g><g><title>[unknown] (349,482 samples, 0.27%)</title><rect x="6.1301%" y="853" width="0.2654%" height="15" fill="rgb(239,60,40)" fg:x="8072867" fg:w="349482"/><text x="6.3801%" y="863.50"></text></g><g><title>[unknown] (349,482 samples, 0.27%)</title><rect x="6.1301%" y="837" width="0.2654%" height="15" fill="rgb(206,27,48)" fg:x="8072867" fg:w="349482"/><text x="6.3801%" y="847.50"></text></g><g><title>[unknown] (349,482 samples, 0.27%)</title><rect x="6.1301%" y="821" width="0.2654%" height="15" fill="rgb(225,35,8)" fg:x="8072867" fg:w="349482"/><text x="6.3801%" y="831.50"></text></g><g><title>[unknown] (349,482 samples, 0.27%)</title><rect x="6.1301%" y="805" width="0.2654%" height="15" fill="rgb(250,213,24)" fg:x="8072867" fg:w="349482"/><text x="6.3801%" y="815.50"></text></g><g><title>[unknown] (274,288 samples, 0.21%)</title><rect x="6.3955%" y="901" width="0.2083%" height="15" fill="rgb(247,123,22)" fg:x="8422349" fg:w="274288"/><text x="6.6455%" y="911.50"></text></g><g><title>__nptl_deallocate_tsd (1,688,987 samples, 1.28%)</title><rect x="6.6038%" y="901" width="1.2825%" height="15" fill="rgb(231,138,38)" fg:x="8696637" fg:w="1688987"/><text x="6.8538%" y="911.50"></text></g><g><title>__nptl_deallocate_tsd (1,688,987 samples, 1.28%)</title><rect x="6.6038%" y="885" width="1.2825%" height="15" fill="rgb(231,145,46)" fg:x="8696637" fg:w="1688987"/><text x="6.8538%" y="895.50"></text></g><g><title>_dl_runtime_resolve_xsavec (172,698 samples, 0.13%)</title><rect x="7.8863%" y="901" width="0.1311%" height="15" fill="rgb(251,118,11)" fg:x="10385624" fg:w="172698"/><text x="8.1363%" y="911.50"></text></g><g><title>_dl_fixup (172,698 samples, 0.13%)</title><rect x="7.8863%" y="885" width="0.1311%" height="15" fill="rgb(217,147,25)" fg:x="10385624" fg:w="172698"/><text x="8.1363%" y="895.50"></text></g><g><title>_dl_lookup_symbol_x (172,698 samples, 0.13%)</title><rect x="7.8863%" y="869" width="0.1311%" height="15" fill="rgb(247,81,37)" fg:x="10385624" fg:w="172698"/><text x="8.1363%" y="879.50"></text></g><g><title>do_lookup_x (172,698 samples, 0.13%)</title><rect x="7.8863%" y="853" width="0.1311%" height="15" fill="rgb(209,12,38)" fg:x="10385624" fg:w="172698"/><text x="8.1363%" y="863.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (986,203 samples, 0.75%)</title><rect x="8.5378%" y="693" width="0.7489%" height="15" fill="rgb(227,1,9)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="703.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (986,203 samples, 0.75%)</title><rect x="8.5378%" y="677" width="0.7489%" height="15" fill="rgb(248,47,43)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="687.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (986,203 samples, 0.75%)</title><rect x="8.5378%" y="661" width="0.7489%" height="15" fill="rgb(221,10,30)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="671.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (986,203 samples, 0.75%)</title><rect x="8.5378%" y="645" width="0.7489%" height="15" fill="rgb(210,229,1)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="655.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (986,203 samples, 0.75%)</title><rect x="8.5378%" y="629" width="0.7489%" height="15" fill="rgb(222,148,37)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="639.50"></text></g><g><title>sha2::sha256::Engine256::finish (986,203 samples, 0.75%)</title><rect x="8.5378%" y="613" width="0.7489%" height="15" fill="rgb(234,67,33)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="623.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (986,203 samples, 0.75%)</title><rect x="8.5378%" y="597" width="0.7489%" height="15" fill="rgb(247,98,35)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="607.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (986,203 samples, 0.75%)</title><rect x="8.5378%" y="581" width="0.7489%" height="15" fill="rgb(247,138,52)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="591.50"></text></g><g><title>sha2::sha256::compress256 (986,203 samples, 0.75%)</title><rect x="8.5378%" y="565" width="0.7489%" height="15" fill="rgb(213,79,30)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="575.50"></text></g><g><title>sha2::sha256::x86::compress (986,203 samples, 0.75%)</title><rect x="8.5378%" y="549" width="0.7489%" height="15" fill="rgb(246,177,23)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="559.50"></text></g><g><title>sha2::sha256::soft::compress (986,203 samples, 0.75%)</title><rect x="8.5378%" y="533" width="0.7489%" height="15" fill="rgb(230,62,27)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="543.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (986,203 samples, 0.75%)</title><rect x="8.5378%" y="517" width="0.7489%" height="15" fill="rgb(216,154,8)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="527.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (986,203 samples, 0.75%)</title><rect x="8.5378%" y="501" width="0.7489%" height="15" fill="rgb(244,35,45)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (986,203 samples, 0.75%)</title><rect x="8.5378%" y="485" width="0.7489%" height="15" fill="rgb(251,115,12)" fg:x="11243558" fg:w="986203"/><text x="8.7878%" y="495.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (943,528 samples, 0.72%)</title><rect x="9.2867%" y="677" width="0.7165%" height="15" fill="rgb(240,54,50)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="687.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (943,528 samples, 0.72%)</title><rect x="9.2867%" y="661" width="0.7165%" height="15" fill="rgb(233,84,52)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (943,528 samples, 0.72%)</title><rect x="9.2867%" y="645" width="0.7165%" height="15" fill="rgb(207,117,47)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="655.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (943,528 samples, 0.72%)</title><rect x="9.2867%" y="629" width="0.7165%" height="15" fill="rgb(249,43,39)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="639.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (943,528 samples, 0.72%)</title><rect x="9.2867%" y="613" width="0.7165%" height="15" fill="rgb(209,38,44)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="623.50"></text></g><g><title>once_cell::imp::initialize_or_wait (943,528 samples, 0.72%)</title><rect x="9.2867%" y="597" width="0.7165%" height="15" fill="rgb(236,212,23)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (943,528 samples, 0.72%)</title><rect x="9.2867%" y="581" width="0.7165%" height="15" fill="rgb(242,79,21)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="591.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (943,528 samples, 0.72%)</title><rect x="9.2867%" y="565" width="0.7165%" height="15" fill="rgb(211,96,35)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (943,528 samples, 0.72%)</title><rect x="9.2867%" y="549" width="0.7165%" height="15" fill="rgb(253,215,40)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="559.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (943,528 samples, 0.72%)</title><rect x="9.2867%" y="533" width="0.7165%" height="15" fill="rgb(211,81,21)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (943,528 samples, 0.72%)</title><rect x="9.2867%" y="517" width="0.7165%" height="15" fill="rgb(208,190,38)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (943,528 samples, 0.72%)</title><rect x="9.2867%" y="501" width="0.7165%" height="15" fill="rgb(235,213,38)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="511.50"></text></g><g><title>lab4::idea::CROSS_PROD::{{closure}} (943,528 samples, 0.72%)</title><rect x="9.2867%" y="485" width="0.7165%" height="15" fill="rgb(237,122,38)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (943,528 samples, 0.72%)</title><rect x="9.2867%" y="469" width="0.7165%" height="15" fill="rgb(244,218,35)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (943,528 samples, 0.72%)</title><rect x="9.2867%" y="453" width="0.7165%" height="15" fill="rgb(240,68,47)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (943,528 samples, 0.72%)</title><rect x="9.2867%" y="437" width="0.7165%" height="15" fill="rgb(210,16,53)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (943,528 samples, 0.72%)</title><rect x="9.2867%" y="421" width="0.7165%" height="15" fill="rgb(235,124,12)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (943,528 samples, 0.72%)</title><rect x="9.2867%" y="405" width="0.7165%" height="15" fill="rgb(224,169,11)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (943,528 samples, 0.72%)</title><rect x="9.2867%" y="389" width="0.7165%" height="15" fill="rgb(250,166,2)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (943,528 samples, 0.72%)</title><rect x="9.2867%" y="373" width="0.7165%" height="15" fill="rgb(242,216,29)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (943,528 samples, 0.72%)</title><rect x="9.2867%" y="357" width="0.7165%" height="15" fill="rgb(230,116,27)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="367.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (943,528 samples, 0.72%)</title><rect x="9.2867%" y="341" width="0.7165%" height="15" fill="rgb(228,99,48)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (943,528 samples, 0.72%)</title><rect x="9.2867%" y="325" width="0.7165%" height="15" fill="rgb(253,11,6)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (943,528 samples, 0.72%)</title><rect x="9.2867%" y="309" width="0.7165%" height="15" fill="rgb(247,143,39)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (943,528 samples, 0.72%)</title><rect x="9.2867%" y="293" width="0.7165%" height="15" fill="rgb(236,97,10)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (943,528 samples, 0.72%)</title><rect x="9.2867%" y="277" width="0.7165%" height="15" fill="rgb(233,208,19)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="287.50"></text></g><g><title>lab4::idea::CROSS_PROD::{{closure}}::{{closure}}::{{closure}} (943,528 samples, 0.72%)</title><rect x="9.2867%" y="261" width="0.7165%" height="15" fill="rgb(216,164,2)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (943,528 samples, 0.72%)</title><rect x="9.2867%" y="245" width="0.7165%" height="15" fill="rgb(220,129,5)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (943,528 samples, 0.72%)</title><rect x="9.2867%" y="229" width="0.7165%" height="15" fill="rgb(242,17,10)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (943,528 samples, 0.72%)</title><rect x="9.2867%" y="213" width="0.7165%" height="15" fill="rgb(242,107,0)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (943,528 samples, 0.72%)</title><rect x="9.2867%" y="197" width="0.7165%" height="15" fill="rgb(251,28,31)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (943,528 samples, 0.72%)</title><rect x="9.2867%" y="181" width="0.7165%" height="15" fill="rgb(233,223,10)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (943,528 samples, 0.72%)</title><rect x="9.2867%" y="165" width="0.7165%" height="15" fill="rgb(215,21,27)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (943,528 samples, 0.72%)</title><rect x="9.2867%" y="149" width="0.7165%" height="15" fill="rgb(232,23,21)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (943,528 samples, 0.72%)</title><rect x="9.2867%" y="133" width="0.7165%" height="15" fill="rgb(244,5,23)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (943,528 samples, 0.72%)</title><rect x="9.2867%" y="117" width="0.7165%" height="15" fill="rgb(226,81,46)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (943,528 samples, 0.72%)</title><rect x="9.2867%" y="101" width="0.7165%" height="15" fill="rgb(247,70,30)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (943,528 samples, 0.72%)</title><rect x="9.2867%" y="85" width="0.7165%" height="15" fill="rgb(212,68,19)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (943,528 samples, 0.72%)</title><rect x="9.2867%" y="69" width="0.7165%" height="15" fill="rgb(240,187,13)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="79.50"></text></g><g><title>alloc::alloc::alloc (943,528 samples, 0.72%)</title><rect x="9.2867%" y="53" width="0.7165%" height="15" fill="rgb(223,113,26)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="63.50"></text></g><g><title>__GI___libc_malloc (943,528 samples, 0.72%)</title><rect x="9.2867%" y="37" width="0.7165%" height="15" fill="rgb(206,192,2)" fg:x="12229761" fg:w="943528"/><text x="9.5367%" y="47.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (4,678,565 samples, 3.55%)</title><rect x="8.5378%" y="709" width="3.5527%" height="15" fill="rgb(241,108,4)" fg:x="11243558" fg:w="4678565"/><text x="8.7878%" y="719.50">lab4..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (3,692,362 samples, 2.80%)</title><rect x="9.2867%" y="693" width="2.8038%" height="15" fill="rgb(247,173,49)" fg:x="12229761" fg:w="3692362"/><text x="9.5367%" y="703.50">la..</text></g><g><title>alloc::fmt::format (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="677" width="2.0873%" height="15" fill="rgb(224,114,35)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="687.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="661" width="2.0873%" height="15" fill="rgb(245,159,27)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="671.50">c..</text></g><g><title>alloc::fmt::format::{{closure}} (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="645" width="2.0873%" height="15" fill="rgb(245,172,44)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="655.50">a..</text></g><g><title>alloc::fmt::format::format_inner (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="629" width="2.0873%" height="15" fill="rgb(236,23,11)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="639.50">a..</text></g><g><title>core::fmt::Write::write_fmt (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="613" width="2.0873%" height="15" fill="rgb(205,117,38)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="623.50">c..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="597" width="2.0873%" height="15" fill="rgb(237,72,25)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="607.50">&lt;..</text></g><g><title>core::fmt::write (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="581" width="2.0873%" height="15" fill="rgb(244,70,9)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="591.50">c..</text></g><g><title>core::fmt::rt::Argument::fmt (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="565" width="2.0873%" height="15" fill="rgb(217,125,39)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="575.50">c..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="549" width="2.0873%" height="15" fill="rgb(235,36,10)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="559.50">&lt;..</text></g><g><title>alloc::string::String::push_str (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="533" width="2.0873%" height="15" fill="rgb(251,123,47)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="543.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="517" width="2.0873%" height="15" fill="rgb(221,13,13)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="527.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="501" width="2.0873%" height="15" fill="rgb(238,131,9)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="511.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="485" width="2.0873%" height="15" fill="rgb(211,50,8)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="495.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="469" width="2.0873%" height="15" fill="rgb(245,182,24)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="479.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="453" width="2.0873%" height="15" fill="rgb(242,14,37)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="463.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="437" width="2.0873%" height="15" fill="rgb(246,228,12)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="447.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="421" width="2.0873%" height="15" fill="rgb(213,55,15)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="405" width="2.0873%" height="15" fill="rgb(209,9,3)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,748,834 samples, 2.09%)</title><rect x="10.0032%" y="389" width="2.0873%" height="15" fill="rgb(230,59,30)" fg:x="13173289" fg:w="2748834"/><text x="10.2532%" y="399.50">a..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (437,340 samples, 0.33%)</title><rect x="12.0905%" y="597" width="0.3321%" height="15" fill="rgb(209,121,21)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (437,340 samples, 0.33%)</title><rect x="12.0905%" y="581" width="0.3321%" height="15" fill="rgb(220,109,13)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="591.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (437,340 samples, 0.33%)</title><rect x="12.0905%" y="565" width="0.3321%" height="15" fill="rgb(232,18,1)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="575.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (437,340 samples, 0.33%)</title><rect x="12.0905%" y="549" width="0.3321%" height="15" fill="rgb(215,41,42)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="559.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (437,340 samples, 0.33%)</title><rect x="12.0905%" y="533" width="0.3321%" height="15" fill="rgb(224,123,36)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="543.50"></text></g><g><title>core::slice::memchr::memchr (437,340 samples, 0.33%)</title><rect x="12.0905%" y="517" width="0.3321%" height="15" fill="rgb(240,125,3)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="527.50"></text></g><g><title>core::slice::memchr::memchr_aligned (437,340 samples, 0.33%)</title><rect x="12.0905%" y="501" width="0.3321%" height="15" fill="rgb(205,98,50)" fg:x="15922123" fg:w="437340"/><text x="12.3405%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52,811 samples, 0.04%)</title><rect x="12.4226%" y="597" width="0.0401%" height="15" fill="rgb(205,185,37)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52,811 samples, 0.04%)</title><rect x="12.4226%" y="581" width="0.0401%" height="15" fill="rgb(238,207,15)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (52,811 samples, 0.04%)</title><rect x="12.4226%" y="565" width="0.0401%" height="15" fill="rgb(213,199,42)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (52,811 samples, 0.04%)</title><rect x="12.4226%" y="549" width="0.0401%" height="15" fill="rgb(235,201,11)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (52,811 samples, 0.04%)</title><rect x="12.4226%" y="533" width="0.0401%" height="15" fill="rgb(207,46,11)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (52,811 samples, 0.04%)</title><rect x="12.4226%" y="517" width="0.0401%" height="15" fill="rgb(241,35,35)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52,811 samples, 0.04%)</title><rect x="12.4226%" y="501" width="0.0401%" height="15" fill="rgb(243,32,47)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (52,811 samples, 0.04%)</title><rect x="12.4226%" y="485" width="0.0401%" height="15" fill="rgb(247,202,23)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="495.50"></text></g><g><title>alloc::alloc::realloc (52,811 samples, 0.04%)</title><rect x="12.4226%" y="469" width="0.0401%" height="15" fill="rgb(219,102,11)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="479.50"></text></g><g><title>__GI___libc_realloc (52,811 samples, 0.04%)</title><rect x="12.4226%" y="453" width="0.0401%" height="15" fill="rgb(243,110,44)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="463.50"></text></g><g><title>_int_realloc (52,811 samples, 0.04%)</title><rect x="12.4226%" y="437" width="0.0401%" height="15" fill="rgb(222,74,54)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="447.50"></text></g><g><title>[unknown] (52,811 samples, 0.04%)</title><rect x="12.4226%" y="421" width="0.0401%" height="15" fill="rgb(216,99,12)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="431.50"></text></g><g><title>[unknown] (52,811 samples, 0.04%)</title><rect x="12.4226%" y="405" width="0.0401%" height="15" fill="rgb(226,22,26)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="415.50"></text></g><g><title>[unknown] (52,811 samples, 0.04%)</title><rect x="12.4226%" y="389" width="0.0401%" height="15" fill="rgb(217,163,10)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="399.50"></text></g><g><title>[unknown] (52,811 samples, 0.04%)</title><rect x="12.4226%" y="373" width="0.0401%" height="15" fill="rgb(213,25,53)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="383.50"></text></g><g><title>[unknown] (52,811 samples, 0.04%)</title><rect x="12.4226%" y="357" width="0.0401%" height="15" fill="rgb(252,105,26)" fg:x="16359463" fg:w="52811"/><text x="12.6726%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="693" width="1.1730%" height="15" fill="rgb(220,39,43)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="677" width="1.1730%" height="15" fill="rgb(229,68,48)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="661" width="1.1730%" height="15" fill="rgb(252,8,32)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="645" width="1.1730%" height="15" fill="rgb(223,20,43)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="629" width="1.1730%" height="15" fill="rgb(229,81,49)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,544,694 samples, 1.17%)</title><rect x="12.0905%" y="613" width="1.1730%" height="15" fill="rgb(236,28,36)" fg:x="15922123" fg:w="1544694"/><text x="12.3405%" y="623.50"></text></g><g><title>core::ptr::write (1,054,543 samples, 0.80%)</title><rect x="12.4627%" y="597" width="0.8008%" height="15" fill="rgb(249,185,26)" fg:x="16412274" fg:w="1054543"/><text x="12.7127%" y="607.50"></text></g><g><title>[unknown] (1,054,543 samples, 0.80%)</title><rect x="12.4627%" y="581" width="0.8008%" height="15" fill="rgb(249,174,33)" fg:x="16412274" fg:w="1054543"/><text x="12.7127%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (16,690,297 samples, 12.67%)</title><rect x="13.2635%" y="693" width="12.6738%" height="15" fill="rgb(233,201,37)" fg:x="17466817" fg:w="16690297"/><text x="13.5135%" y="703.50">core::ptr::drop_in_..</text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,690,297 samples, 12.67%)</title><rect x="13.2635%" y="677" width="12.6738%" height="15" fill="rgb(221,78,26)" fg:x="17466817" fg:w="16690297"/><text x="13.5135%" y="687.50">&lt;std::sync::poison:..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (16,690,297 samples, 12.67%)</title><rect x="13.2635%" y="661" width="12.6738%" height="15" fill="rgb(250,127,30)" fg:x="17466817" fg:w="16690297"/><text x="13.5135%" y="671.50">std::sys::sync::mut..</text></g><g><title>syscall (16,690,297 samples, 12.67%)</title><rect x="13.2635%" y="645" width="12.6738%" height="15" fill="rgb(230,49,44)" fg:x="17466817" fg:w="16690297"/><text x="13.5135%" y="655.50">syscall</text></g><g><title>[unknown] (16,690,297 samples, 12.67%)</title><rect x="13.2635%" y="629" width="12.6738%" height="15" fill="rgb(229,67,23)" fg:x="17466817" fg:w="16690297"/><text x="13.5135%" y="639.50">[unknown]</text></g><g><title>[unknown] (3,864,614 samples, 2.93%)</title><rect x="23.0027%" y="613" width="2.9346%" height="15" fill="rgb(249,83,47)" fg:x="30292500" fg:w="3864614"/><text x="23.2527%" y="623.50">[u..</text></g><g><title>[unknown] (3,864,614 samples, 2.93%)</title><rect x="23.0027%" y="597" width="2.9346%" height="15" fill="rgb(215,43,3)" fg:x="30292500" fg:w="3864614"/><text x="23.2527%" y="607.50">[u..</text></g><g><title>[unknown] (3,864,614 samples, 2.93%)</title><rect x="23.0027%" y="581" width="2.9346%" height="15" fill="rgb(238,154,13)" fg:x="30292500" fg:w="3864614"/><text x="23.2527%" y="591.50">[u..</text></g><g><title>[unknown] (3,864,614 samples, 2.93%)</title><rect x="23.0027%" y="565" width="2.9346%" height="15" fill="rgb(219,56,2)" fg:x="30292500" fg:w="3864614"/><text x="23.2527%" y="575.50">[u..</text></g><g><title>[unknown] (3,864,614 samples, 2.93%)</title><rect x="23.0027%" y="549" width="2.9346%" height="15" fill="rgb(233,0,4)" fg:x="30292500" fg:w="3864614"/><text x="23.2527%" y="559.50">[u..</text></g><g><title>[unknown] (861,329 samples, 0.65%)</title><rect x="25.2832%" y="533" width="0.6541%" height="15" fill="rgb(235,30,7)" fg:x="33295785" fg:w="861329"/><text x="25.5332%" y="543.50"></text></g><g><title>[unknown] (861,329 samples, 0.65%)</title><rect x="25.2832%" y="517" width="0.6541%" height="15" fill="rgb(250,79,13)" fg:x="33295785" fg:w="861329"/><text x="25.5332%" y="527.50"></text></g><g><title>[unknown] (861,329 samples, 0.65%)</title><rect x="25.2832%" y="501" width="0.6541%" height="15" fill="rgb(211,146,34)" fg:x="33295785" fg:w="861329"/><text x="25.5332%" y="511.50"></text></g><g><title>[unknown] (861,329 samples, 0.65%)</title><rect x="25.2832%" y="485" width="0.6541%" height="15" fill="rgb(228,22,38)" fg:x="33295785" fg:w="861329"/><text x="25.5332%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,565,412 samples, 1.19%)</title><rect x="25.9373%" y="645" width="1.1887%" height="15" fill="rgb(235,168,5)" fg:x="34157114" fg:w="1565412"/><text x="26.1873%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,565,412 samples, 1.19%)</title><rect x="25.9373%" y="629" width="1.1887%" height="15" fill="rgb(221,155,16)" fg:x="34157114" fg:w="1565412"/><text x="26.1873%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (4,885,200 samples, 3.71%)</title><rect x="25.9373%" y="661" width="3.7096%" height="15" fill="rgb(215,215,53)" fg:x="34157114" fg:w="4885200"/><text x="26.1873%" y="671.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (3,319,788 samples, 2.52%)</title><rect x="27.1260%" y="645" width="2.5209%" height="15" fill="rgb(223,4,10)" fg:x="35722526" fg:w="3319788"/><text x="27.3760%" y="655.50">cr..</text></g><g><title>core::sync::atomic::spin_loop_hint (3,319,788 samples, 2.52%)</title><rect x="27.1260%" y="629" width="2.5209%" height="15" fill="rgb(234,103,6)" fg:x="35722526" fg:w="3319788"/><text x="27.3760%" y="639.50">co..</text></g><g><title>core::hint::spin_loop (3,319,788 samples, 2.52%)</title><rect x="27.1260%" y="613" width="2.5209%" height="15" fill="rgb(227,97,0)" fg:x="35722526" fg:w="3319788"/><text x="27.3760%" y="623.50">co..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3,319,788 samples, 2.52%)</title><rect x="27.1260%" y="597" width="2.5209%" height="15" fill="rgb(234,150,53)" fg:x="35722526" fg:w="3319788"/><text x="27.3760%" y="607.50">co..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (5,948,548 samples, 4.52%)</title><rect x="25.9373%" y="693" width="4.5170%" height="15" fill="rgb(228,201,54)" fg:x="34157114" fg:w="5948548"/><text x="26.1873%" y="703.50">cross..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (5,948,548 samples, 4.52%)</title><rect x="25.9373%" y="677" width="4.5170%" height="15" fill="rgb(222,22,37)" fg:x="34157114" fg:w="5948548"/><text x="26.1873%" y="687.50">cross..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="661" width="0.8075%" height="15" fill="rgb(237,53,32)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="671.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="645" width="0.8075%" height="15" fill="rgb(233,25,53)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;crossbeam_channel::waker::Entry&gt;&gt; (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="629" width="0.8075%" height="15" fill="rgb(210,40,34)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::Entry&gt; (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="613" width="0.8075%" height="15" fill="rgb(241,220,44)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::context::Context&gt; (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="597" width="0.8075%" height="15" fill="rgb(235,28,35)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;crossbeam_channel::context::Inner&gt;&gt; (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="581" width="0.8075%" height="15" fill="rgb(210,56,17)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="565" width="0.8075%" height="15" fill="rgb(224,130,29)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="549" width="0.8075%" height="15" fill="rgb(235,212,8)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,063,348 samples, 0.81%)</title><rect x="29.6469%" y="533" width="0.8075%" height="15" fill="rgb(223,33,50)" fg:x="39042314" fg:w="1063348"/><text x="29.8969%" y="543.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="693" width="3.2418%" height="15" fill="rgb(219,149,13)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="703.50">lab..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="677" width="3.2418%" height="15" fill="rgb(250,156,29)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="687.50">&lt;D ..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="661" width="3.2418%" height="15" fill="rgb(216,193,19)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="671.50">dig..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="645" width="3.2418%" height="15" fill="rgb(216,135,14)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="655.50">&lt;D ..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="629" width="3.2418%" height="15" fill="rgb(241,47,5)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="639.50">&lt;sh..</text></g><g><title>sha2::sha256::Engine256::finish (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="613" width="3.2418%" height="15" fill="rgb(233,42,35)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="623.50">sha..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="597" width="3.2418%" height="15" fill="rgb(231,13,6)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="607.50">blo..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="581" width="3.2418%" height="15" fill="rgb(207,181,40)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="591.50">sha..</text></g><g><title>sha2::sha256::compress256 (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="565" width="3.2418%" height="15" fill="rgb(254,173,49)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="575.50">sha..</text></g><g><title>sha2::sha256::x86::compress (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="549" width="3.2418%" height="15" fill="rgb(221,1,38)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="559.50">sha..</text></g><g><title>sha2::sha256::soft::compress (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="533" width="3.2418%" height="15" fill="rgb(206,124,46)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="543.50">sha..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="517" width="3.2418%" height="15" fill="rgb(249,21,11)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="527.50">sha..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (4,269,172 samples, 3.24%)</title><rect x="30.4543%" y="501" width="3.2418%" height="15" fill="rgb(222,201,40)" fg:x="40105662" fg:w="4269172"/><text x="30.7043%" y="511.50">sha..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1,893,931 samples, 1.44%)</title><rect x="32.2580%" y="485" width="1.4382%" height="15" fill="rgb(235,61,29)" fg:x="42480903" fg:w="1893931"/><text x="32.5080%" y="495.50"></text></g><g><title>std::fs::read_to_string (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="693" width="1.2169%" height="15" fill="rgb(219,207,3)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="703.50"></text></g><g><title>std::fs::read_to_string::inner (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="677" width="1.2169%" height="15" fill="rgb(222,56,46)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="687.50"></text></g><g><title>std::fs::File::metadata (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="661" width="1.2169%" height="15" fill="rgb(239,76,54)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="671.50"></text></g><g><title>std::sys::pal::unix::fs::File::file_attr (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="645" width="1.2169%" height="15" fill="rgb(231,124,27)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="655.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="629" width="1.2169%" height="15" fill="rgb(249,195,6)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="639.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx::statx (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="613" width="1.2169%" height="15" fill="rgb(237,174,47)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="623.50"></text></g><g><title>statx (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="597" width="1.2169%" height="15" fill="rgb(206,201,31)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="607.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="581" width="1.2169%" height="15" fill="rgb(231,57,52)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="591.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="565" width="1.2169%" height="15" fill="rgb(248,177,22)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="575.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="549" width="1.2169%" height="15" fill="rgb(215,211,37)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="559.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="533" width="1.2169%" height="15" fill="rgb(241,128,51)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="543.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="517" width="1.2169%" height="15" fill="rgb(227,165,31)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="527.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="501" width="1.2169%" height="15" fill="rgb(228,167,24)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="511.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="485" width="1.2169%" height="15" fill="rgb(228,143,12)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="495.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="469" width="1.2169%" height="15" fill="rgb(249,149,8)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="479.50"></text></g><g><title>[unknown] (1,602,536 samples, 1.22%)</title><rect x="33.6961%" y="453" width="1.2169%" height="15" fill="rgb(243,35,44)" fg:x="44374834" fg:w="1602536"/><text x="33.9461%" y="463.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (16,316,268 samples, 12.39%)</title><rect x="34.9130%" y="645" width="12.3898%" height="15" fill="rgb(246,89,9)" fg:x="45977370" fg:w="16316268"/><text x="35.1630%" y="655.50">std::sys::pal::uni..</text></g><g><title>syscall (16,316,268 samples, 12.39%)</title><rect x="34.9130%" y="629" width="12.3898%" height="15" fill="rgb(233,213,13)" fg:x="45977370" fg:w="16316268"/><text x="35.1630%" y="639.50">syscall</text></g><g><title>[unknown] (16,316,268 samples, 12.39%)</title><rect x="34.9130%" y="613" width="12.3898%" height="15" fill="rgb(233,141,41)" fg:x="45977370" fg:w="16316268"/><text x="35.1630%" y="623.50">[unknown]</text></g><g><title>[unknown] (9,520,761 samples, 7.23%)</title><rect x="40.0732%" y="597" width="7.2296%" height="15" fill="rgb(239,167,4)" fg:x="52772877" fg:w="9520761"/><text x="40.3232%" y="607.50">[unknown]</text></g><g><title>[unknown] (9,520,761 samples, 7.23%)</title><rect x="40.0732%" y="581" width="7.2296%" height="15" fill="rgb(209,217,16)" fg:x="52772877" fg:w="9520761"/><text x="40.3232%" y="591.50">[unknown]</text></g><g><title>[unknown] (9,520,761 samples, 7.23%)</title><rect x="40.0732%" y="565" width="7.2296%" height="15" fill="rgb(219,88,35)" fg:x="52772877" fg:w="9520761"/><text x="40.3232%" y="575.50">[unknown]</text></g><g><title>[unknown] (9,520,761 samples, 7.23%)</title><rect x="40.0732%" y="549" width="7.2296%" height="15" fill="rgb(220,193,23)" fg:x="52772877" fg:w="9520761"/><text x="40.3232%" y="559.50">[unknown]</text></g><g><title>[unknown] (9,430,219 samples, 7.16%)</title><rect x="40.1420%" y="533" width="7.1609%" height="15" fill="rgb(230,90,52)" fg:x="52863419" fg:w="9430219"/><text x="40.3920%" y="543.50">[unknown]</text></g><g><title>[unknown] (9,430,219 samples, 7.16%)</title><rect x="40.1420%" y="517" width="7.1609%" height="15" fill="rgb(252,106,19)" fg:x="52863419" fg:w="9430219"/><text x="40.3920%" y="527.50">[unknown]</text></g><g><title>[unknown] (9,430,219 samples, 7.16%)</title><rect x="40.1420%" y="501" width="7.1609%" height="15" fill="rgb(206,74,20)" fg:x="52863419" fg:w="9430219"/><text x="40.3920%" y="511.50">[unknown]</text></g><g><title>[unknown] (9,430,219 samples, 7.16%)</title><rect x="40.1420%" y="485" width="7.1609%" height="15" fill="rgb(230,138,44)" fg:x="52863419" fg:w="9430219"/><text x="40.3920%" y="495.50">[unknown]</text></g><g><title>[unknown] (9,430,219 samples, 7.16%)</title><rect x="40.1420%" y="469" width="7.1609%" height="15" fill="rgb(235,182,43)" fg:x="52863419" fg:w="9430219"/><text x="40.3920%" y="479.50">[unknown]</text></g><g><title>[unknown] (7,304,012 samples, 5.55%)</title><rect x="41.7565%" y="453" width="5.5463%" height="15" fill="rgb(242,16,51)" fg:x="54989626" fg:w="7304012"/><text x="42.0065%" y="463.50">[unknow..</text></g><g><title>[unknown] (5,970,932 samples, 4.53%)</title><rect x="42.7688%" y="437" width="4.5340%" height="15" fill="rgb(248,9,4)" fg:x="56322706" fg:w="5970932"/><text x="43.0188%" y="447.50">[unkn..</text></g><g><title>[unknown] (5,970,932 samples, 4.53%)</title><rect x="42.7688%" y="421" width="4.5340%" height="15" fill="rgb(210,31,22)" fg:x="56322706" fg:w="5970932"/><text x="43.0188%" y="431.50">[unkn..</text></g><g><title>[unknown] (189,085 samples, 0.14%)</title><rect x="47.1592%" y="405" width="0.1436%" height="15" fill="rgb(239,54,39)" fg:x="62104553" fg:w="189085"/><text x="47.4092%" y="415.50"></text></g><g><title>[unknown] (189,085 samples, 0.14%)</title><rect x="47.1592%" y="389" width="0.1436%" height="15" fill="rgb(230,99,41)" fg:x="62104553" fg:w="189085"/><text x="47.4092%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (17,529,480 samples, 13.31%)</title><rect x="34.9130%" y="661" width="13.3110%" height="15" fill="rgb(253,106,12)" fg:x="45977370" fg:w="17529480"/><text x="35.1630%" y="671.50">std::sys::sync::mute..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (1,213,212 samples, 0.92%)</title><rect x="47.3028%" y="645" width="0.9213%" height="15" fill="rgb(213,46,41)" fg:x="62293638" fg:w="1213212"/><text x="47.5528%" y="655.50"></text></g><g><title>core::hint::spin_loop (1,213,212 samples, 0.92%)</title><rect x="47.3028%" y="629" width="0.9213%" height="15" fill="rgb(215,133,35)" fg:x="62293638" fg:w="1213212"/><text x="47.5528%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,213,212 samples, 0.92%)</title><rect x="47.3028%" y="613" width="0.9213%" height="15" fill="rgb(213,28,5)" fg:x="62293638" fg:w="1213212"/><text x="47.5528%" y="623.50"></text></g><g><title>lab4::package::PackageDownloader::run (48,424,308 samples, 36.77%)</title><rect x="12.0905%" y="709" width="36.7711%" height="15" fill="rgb(215,77,49)" fg:x="15922123" fg:w="48424308"/><text x="12.3405%" y="719.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (18,369,061 samples, 13.95%)</title><rect x="34.9130%" y="693" width="13.9486%" height="15" fill="rgb(248,100,22)" fg:x="45977370" fg:w="18369061"/><text x="35.1630%" y="703.50">std::sync::poison::mu..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (18,369,061 samples, 13.95%)</title><rect x="34.9130%" y="677" width="13.9486%" height="15" fill="rgb(208,67,9)" fg:x="45977370" fg:w="18369061"/><text x="35.1630%" y="687.50">std::sys::sync::mutex..</text></g><g><title>syscall (839,581 samples, 0.64%)</title><rect x="48.2241%" y="661" width="0.6375%" height="15" fill="rgb(219,133,21)" fg:x="63506850" fg:w="839581"/><text x="48.4741%" y="671.50"></text></g><g><title>[unknown] (839,581 samples, 0.64%)</title><rect x="48.2241%" y="645" width="0.6375%" height="15" fill="rgb(246,46,29)" fg:x="63506850" fg:w="839581"/><text x="48.4741%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3,183,920 samples, 2.42%)</title><rect x="48.8616%" y="677" width="2.4177%" height="15" fill="rgb(246,185,52)" fg:x="64346431" fg:w="3183920"/><text x="49.1116%" y="687.50">co..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (111,740 samples, 0.08%)</title><rect x="51.2793%" y="613" width="0.0849%" height="15" fill="rgb(252,136,11)" fg:x="67530351" fg:w="111740"/><text x="51.5293%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (111,740 samples, 0.08%)</title><rect x="51.2793%" y="597" width="0.0849%" height="15" fill="rgb(219,138,53)" fg:x="67530351" fg:w="111740"/><text x="51.5293%" y="607.50"></text></g><g><title>core::mem::replace (111,740 samples, 0.08%)</title><rect x="51.2793%" y="581" width="0.0849%" height="15" fill="rgb(211,51,23)" fg:x="67530351" fg:w="111740"/><text x="51.5293%" y="591.50"></text></g><g><title>core::ptr::read (111,740 samples, 0.08%)</title><rect x="51.2793%" y="565" width="0.0849%" height="15" fill="rgb(247,221,28)" fg:x="67530351" fg:w="111740"/><text x="51.5293%" y="575.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1,395,989 samples, 1.06%)</title><rect x="51.3642%" y="565" width="1.0600%" height="15" fill="rgb(251,222,45)" fg:x="67642091" fg:w="1395989"/><text x="51.6142%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1,395,989 samples, 1.06%)</title><rect x="51.3642%" y="549" width="1.0600%" height="15" fill="rgb(217,162,53)" fg:x="67642091" fg:w="1395989"/><text x="51.6142%" y="559.50"></text></g><g><title>core::hint::spin_loop (1,395,989 samples, 1.06%)</title><rect x="51.3642%" y="533" width="1.0600%" height="15" fill="rgb(229,93,14)" fg:x="67642091" fg:w="1395989"/><text x="51.6142%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,395,989 samples, 1.06%)</title><rect x="51.3642%" y="517" width="1.0600%" height="15" fill="rgb(209,67,49)" fg:x="67642091" fg:w="1395989"/><text x="51.6142%" y="527.50"></text></g><g><title>crossbeam_channel::context::Context::with (2,662,063 samples, 2.02%)</title><rect x="51.2793%" y="661" width="2.0214%" height="15" fill="rgb(213,87,29)" fg:x="67530351" fg:w="2662063"/><text x="51.5293%" y="671.50">c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,662,063 samples, 2.02%)</title><rect x="51.2793%" y="645" width="2.0214%" height="15" fill="rgb(205,151,52)" fg:x="67530351" fg:w="2662063"/><text x="51.5293%" y="655.50">s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (2,662,063 samples, 2.02%)</title><rect x="51.2793%" y="629" width="2.0214%" height="15" fill="rgb(253,215,39)" fg:x="67530351" fg:w="2662063"/><text x="51.5293%" y="639.50">c..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (2,550,323 samples, 1.94%)</title><rect x="51.3642%" y="613" width="1.9366%" height="15" fill="rgb(221,220,41)" fg:x="67642091" fg:w="2550323"/><text x="51.6142%" y="623.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (2,550,323 samples, 1.94%)</title><rect x="51.3642%" y="597" width="1.9366%" height="15" fill="rgb(218,133,21)" fg:x="67642091" fg:w="2550323"/><text x="51.6142%" y="607.50">c..</text></g><g><title>crossbeam_channel::context::Context::wait_until (2,550,323 samples, 1.94%)</title><rect x="51.3642%" y="581" width="1.9366%" height="15" fill="rgb(221,193,43)" fg:x="67642091" fg:w="2550323"/><text x="51.6142%" y="591.50">c..</text></g><g><title>std::thread::park (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="565" width="0.8765%" height="15" fill="rgb(240,128,52)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="575.50"></text></g><g><title>std::thread::Thread::park (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="549" width="0.8765%" height="15" fill="rgb(253,114,12)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="559.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="533" width="0.8765%" height="15" fill="rgb(215,223,47)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="543.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="517" width="0.8765%" height="15" fill="rgb(248,225,23)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="527.50"></text></g><g><title>syscall (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="501" width="0.8765%" height="15" fill="rgb(250,108,0)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="511.50"></text></g><g><title>[unknown] (1,154,334 samples, 0.88%)</title><rect x="52.4242%" y="485" width="0.8765%" height="15" fill="rgb(228,208,7)" fg:x="69038080" fg:w="1154334"/><text x="52.6742%" y="495.50"></text></g><g><title>[unknown] (1,122,717 samples, 0.85%)</title><rect x="52.4482%" y="469" width="0.8525%" height="15" fill="rgb(244,45,10)" fg:x="69069697" fg:w="1122717"/><text x="52.6982%" y="479.50"></text></g><g><title>[unknown] (1,096,898 samples, 0.83%)</title><rect x="52.4678%" y="453" width="0.8329%" height="15" fill="rgb(207,125,25)" fg:x="69095516" fg:w="1096898"/><text x="52.7178%" y="463.50"></text></g><g><title>[unknown] (1,096,898 samples, 0.83%)</title><rect x="52.4678%" y="437" width="0.8329%" height="15" fill="rgb(210,195,18)" fg:x="69095516" fg:w="1096898"/><text x="52.7178%" y="447.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="421" width="0.8143%" height="15" fill="rgb(249,80,12)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="431.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="405" width="0.8143%" height="15" fill="rgb(221,65,9)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="415.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="389" width="0.8143%" height="15" fill="rgb(235,49,36)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="399.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="373" width="0.8143%" height="15" fill="rgb(225,32,20)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="383.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="357" width="0.8143%" height="15" fill="rgb(215,141,46)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="367.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="341" width="0.8143%" height="15" fill="rgb(250,160,47)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="351.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="325" width="0.8143%" height="15" fill="rgb(216,222,40)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="335.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="309" width="0.8143%" height="15" fill="rgb(234,217,39)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="319.50"></text></g><g><title>[unknown] (1,072,299 samples, 0.81%)</title><rect x="52.4865%" y="293" width="0.8143%" height="15" fill="rgb(207,178,40)" fg:x="69120115" fg:w="1072299"/><text x="52.7365%" y="303.50"></text></g><g><title>[unknown] (80,155 samples, 0.06%)</title><rect x="53.2399%" y="277" width="0.0609%" height="15" fill="rgb(221,136,13)" fg:x="70112259" fg:w="80155"/><text x="53.4899%" y="287.50"></text></g><g><title>[unknown] (80,155 samples, 0.06%)</title><rect x="53.2399%" y="261" width="0.0609%" height="15" fill="rgb(249,199,10)" fg:x="70112259" fg:w="80155"/><text x="53.4899%" y="271.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (2,071,112 samples, 1.57%)</title><rect x="53.3008%" y="661" width="1.5727%" height="15" fill="rgb(249,222,13)" fg:x="70192414" fg:w="2071112"/><text x="53.5508%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2,071,112 samples, 1.57%)</title><rect x="53.3008%" y="645" width="1.5727%" height="15" fill="rgb(244,185,38)" fg:x="70192414" fg:w="2071112"/><text x="53.5508%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_or (2,071,112 samples, 1.57%)</title><rect x="53.3008%" y="629" width="1.5727%" height="15" fill="rgb(236,202,9)" fg:x="70192414" fg:w="2071112"/><text x="53.5508%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2,030,433 samples, 1.54%)</title><rect x="54.8735%" y="645" width="1.5418%" height="15" fill="rgb(250,229,37)" fg:x="72263526" fg:w="2030433"/><text x="55.1235%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,030,433 samples, 1.54%)</title><rect x="54.8735%" y="629" width="1.5418%" height="15" fill="rgb(206,174,23)" fg:x="72263526" fg:w="2030433"/><text x="55.1235%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,245,302 samples, 0.95%)</title><rect x="56.4153%" y="645" width="0.9456%" height="15" fill="rgb(211,33,43)" fg:x="74293959" fg:w="1245302"/><text x="56.6653%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1,245,302 samples, 0.95%)</title><rect x="56.4153%" y="629" width="0.9456%" height="15" fill="rgb(245,58,50)" fg:x="74293959" fg:w="1245302"/><text x="56.6653%" y="639.50"></text></g><g><title>core::sync::atomic::fence (5,570,046 samples, 4.23%)</title><rect x="57.3609%" y="645" width="4.2296%" height="15" fill="rgb(244,68,36)" fg:x="75539261" fg:w="5570046"/><text x="57.6109%" y="655.50">core:..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (773,314 samples, 0.59%)</title><rect x="61.5905%" y="645" width="0.5872%" height="15" fill="rgb(232,229,15)" fg:x="81109307" fg:w="773314"/><text x="61.8405%" y="655.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (773,314 samples, 0.59%)</title><rect x="61.5905%" y="629" width="0.5872%" height="15" fill="rgb(254,30,23)" fg:x="81109307" fg:w="773314"/><text x="61.8405%" y="639.50"></text></g><g><title>core::hint::spin_loop (773,314 samples, 0.59%)</title><rect x="61.5905%" y="613" width="0.5872%" height="15" fill="rgb(235,160,14)" fg:x="81109307" fg:w="773314"/><text x="61.8405%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (773,314 samples, 0.59%)</title><rect x="61.5905%" y="597" width="0.5872%" height="15" fill="rgb(212,155,44)" fg:x="81109307" fg:w="773314"/><text x="61.8405%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (10,552,789 samples, 8.01%)</title><rect x="54.8735%" y="661" width="8.0133%" height="15" fill="rgb(226,2,50)" fg:x="72263526" fg:w="10552789"/><text x="55.1235%" y="671.50">crossbeam_c..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (933,694 samples, 0.71%)</title><rect x="62.1777%" y="645" width="0.7090%" height="15" fill="rgb(234,177,6)" fg:x="81882621" fg:w="933694"/><text x="62.4277%" y="655.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (933,694 samples, 0.71%)</title><rect x="62.1777%" y="629" width="0.7090%" height="15" fill="rgb(217,24,9)" fg:x="81882621" fg:w="933694"/><text x="62.4277%" y="639.50"></text></g><g><title>core::hint::spin_loop (933,694 samples, 0.71%)</title><rect x="62.1777%" y="613" width="0.7090%" height="15" fill="rgb(220,13,46)" fg:x="81882621" fg:w="933694"/><text x="62.4277%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (933,694 samples, 0.71%)</title><rect x="62.1777%" y="597" width="0.7090%" height="15" fill="rgb(239,221,27)" fg:x="81882621" fg:w="933694"/><text x="62.4277%" y="607.50"></text></g><g><title>__GI___sched_yield (2,442,883 samples, 1.86%)</title><rect x="62.8867%" y="645" width="1.8550%" height="15" fill="rgb(222,198,25)" fg:x="82816315" fg:w="2442883"/><text x="63.1367%" y="655.50">_..</text></g><g><title>[unknown] (2,442,883 samples, 1.86%)</title><rect x="62.8867%" y="629" width="1.8550%" height="15" fill="rgb(211,99,13)" fg:x="82816315" fg:w="2442883"/><text x="63.1367%" y="639.50">[..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,026,391 samples, 3.06%)</title><rect x="64.7418%" y="645" width="3.0574%" height="15" fill="rgb(232,111,31)" fg:x="85259198" fg:w="4026391"/><text x="64.9918%" y="655.50">cor..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,026,391 samples, 3.06%)</title><rect x="64.7418%" y="629" width="3.0574%" height="15" fill="rgb(245,82,37)" fg:x="85259198" fg:w="4026391"/><text x="64.9918%" y="639.50">&lt;co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (4,026,391 samples, 3.06%)</title><rect x="64.7418%" y="613" width="3.0574%" height="15" fill="rgb(227,149,46)" fg:x="85259198" fg:w="4026391"/><text x="64.9918%" y="623.50">cor..</text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (33,101,982 samples, 25.14%)</title><rect x="48.8616%" y="693" width="25.1361%" height="15" fill="rgb(218,36,50)" fg:x="64346431" fg:w="33101982"/><text x="49.1116%" y="703.50">crossbeam_channel::channel::Receiver&lt;T&gt;:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (29,918,062 samples, 22.72%)</title><rect x="51.2793%" y="677" width="22.7183%" height="15" fill="rgb(226,80,48)" fg:x="67530351" fg:w="29918062"/><text x="51.5293%" y="687.50">crossbeam_channel::flavors::list::Ch..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (14,632,098 samples, 11.11%)</title><rect x="62.8867%" y="661" width="11.1109%" height="15" fill="rgb(238,224,15)" fg:x="82816315" fg:w="14632098"/><text x="63.1367%" y="671.50">crossbeam_utils:..</text></g><g><title>core::sync::atomic::spin_loop_hint (8,162,824 samples, 6.20%)</title><rect x="67.7992%" y="645" width="6.1985%" height="15" fill="rgb(241,136,10)" fg:x="89285589" fg:w="8162824"/><text x="68.0492%" y="655.50">core::sy..</text></g><g><title>core::hint::spin_loop (8,162,824 samples, 6.20%)</title><rect x="67.7992%" y="629" width="6.1985%" height="15" fill="rgb(208,32,45)" fg:x="89285589" fg:w="8162824"/><text x="68.0492%" y="639.50">core::hi..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (8,162,824 samples, 6.20%)</title><rect x="67.7992%" y="613" width="6.1985%" height="15" fill="rgb(207,135,9)" fg:x="89285589" fg:w="8162824"/><text x="68.0492%" y="623.50">core::co..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (4,834,839 samples, 3.67%)</title><rect x="73.9977%" y="693" width="3.6713%" height="15" fill="rgb(206,86,44)" fg:x="97448413" fg:w="4834839"/><text x="74.2477%" y="703.50">cros..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (4,834,839 samples, 3.67%)</title><rect x="73.9977%" y="677" width="3.6713%" height="15" fill="rgb(245,177,15)" fg:x="97448413" fg:w="4834839"/><text x="74.2477%" y="687.50">cros..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (4,834,839 samples, 3.67%)</title><rect x="73.9977%" y="661" width="3.6713%" height="15" fill="rgb(206,64,50)" fg:x="97448413" fg:w="4834839"/><text x="74.2477%" y="671.50">cros..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4,834,839 samples, 3.67%)</title><rect x="73.9977%" y="645" width="3.6713%" height="15" fill="rgb(234,36,40)" fg:x="97448413" fg:w="4834839"/><text x="74.2477%" y="655.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4,834,839 samples, 3.67%)</title><rect x="73.9977%" y="629" width="3.6713%" height="15" fill="rgb(213,64,8)" fg:x="97448413" fg:w="4834839"/><text x="74.2477%" y="639.50">core..</text></g><g><title>alloc::fmt::format (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="677" width="3.5170%" height="15" fill="rgb(210,75,36)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="687.50">all..</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="661" width="3.5170%" height="15" fill="rgb(229,88,21)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="671.50">cor..</text></g><g><title>alloc::fmt::format::{{closure}} (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="645" width="3.5170%" height="15" fill="rgb(252,204,47)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="655.50">all..</text></g><g><title>alloc::fmt::format::format_inner (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="629" width="3.5170%" height="15" fill="rgb(208,77,27)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="639.50">all..</text></g><g><title>core::fmt::Write::write_fmt (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="613" width="3.5170%" height="15" fill="rgb(221,76,26)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="623.50">cor..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="597" width="3.5170%" height="15" fill="rgb(225,139,18)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="607.50">&lt;&amp;m..</text></g><g><title>core::fmt::write (4,631,541 samples, 3.52%)</title><rect x="77.6690%" y="581" width="3.5170%" height="15" fill="rgb(230,137,11)" fg:x="102283252" fg:w="4631541"/><text x="77.9190%" y="591.50">cor..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,422,858 samples, 1.84%)</title><rect x="79.3462%" y="565" width="1.8398%" height="15" fill="rgb(212,28,1)" fg:x="104491935" fg:w="2422858"/><text x="79.5962%" y="575.50">&lt;..</text></g><g><title>alloc::string::String::push_str (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="549" width="1.1158%" height="15" fill="rgb(248,164,17)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="533" width="1.1158%" height="15" fill="rgb(222,171,42)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="517" width="1.1158%" height="15" fill="rgb(243,84,45)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="501" width="1.1158%" height="15" fill="rgb(252,49,23)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="485" width="1.1158%" height="15" fill="rgb(215,19,7)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="469" width="1.1158%" height="15" fill="rgb(238,81,41)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="453" width="1.1158%" height="15" fill="rgb(210,199,37)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="437" width="1.1158%" height="15" fill="rgb(244,192,49)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="421" width="1.1158%" height="15" fill="rgb(226,211,11)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="405" width="1.1158%" height="15" fill="rgb(236,162,54)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="389" width="1.1158%" height="15" fill="rgb(220,229,9)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="373" width="1.1158%" height="15" fill="rgb(250,87,22)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="357" width="1.1158%" height="15" fill="rgb(239,43,17)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="367.50"></text></g><g><title>__GI___libc_realloc (1,469,416 samples, 1.12%)</title><rect x="80.0702%" y="341" width="1.1158%" height="15" fill="rgb(231,177,25)" fg:x="105445377" fg:w="1469416"/><text x="80.3202%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="677" width="1.5316%" height="15" fill="rgb(219,179,1)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="661" width="1.5316%" height="15" fill="rgb(238,219,53)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="645" width="1.5316%" height="15" fill="rgb(232,167,36)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="629" width="1.5316%" height="15" fill="rgb(244,19,51)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="613" width="1.5316%" height="15" fill="rgb(224,6,22)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="597" width="1.5316%" height="15" fill="rgb(224,145,5)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="581" width="1.5316%" height="15" fill="rgb(234,130,49)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="591.50"></text></g><g><title>_int_free (2,016,953 samples, 1.53%)</title><rect x="81.1860%" y="565" width="1.5316%" height="15" fill="rgb(254,6,2)" fg:x="106914793" fg:w="2016953"/><text x="81.4360%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;lab4::package::Package&gt;&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="677" width="0.7374%" height="15" fill="rgb(208,96,46)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (971,146 samples, 0.74%)</title><rect x="82.7176%" y="661" width="0.7374%" height="15" fill="rgb(239,3,39)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lab4::package::Package]&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="645" width="0.7374%" height="15" fill="rgb(233,210,1)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="629" width="0.7374%" height="15" fill="rgb(244,137,37)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="613" width="0.7374%" height="15" fill="rgb(240,136,2)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="597" width="0.7374%" height="15" fill="rgb(239,18,37)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (971,146 samples, 0.74%)</title><rect x="82.7176%" y="581" width="0.7374%" height="15" fill="rgb(218,185,22)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (971,146 samples, 0.74%)</title><rect x="82.7176%" y="565" width="0.7374%" height="15" fill="rgb(225,218,4)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (971,146 samples, 0.74%)</title><rect x="82.7176%" y="549" width="0.7374%" height="15" fill="rgb(230,182,32)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (971,146 samples, 0.74%)</title><rect x="82.7176%" y="533" width="0.7374%" height="15" fill="rgb(242,56,43)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (971,146 samples, 0.74%)</title><rect x="82.7176%" y="517" width="0.7374%" height="15" fill="rgb(233,99,24)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="527.50"></text></g><g><title>__rust_dealloc (971,146 samples, 0.74%)</title><rect x="82.7176%" y="501" width="0.7374%" height="15" fill="rgb(234,209,42)" fg:x="108931746" fg:w="971146"/><text x="82.9676%" y="511.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="677" width="2.7036%" height="15" fill="rgb(227,7,12)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="687.50">la..</text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="661" width="2.7036%" height="15" fill="rgb(245,203,43)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="671.50">&lt;D..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="645" width="2.7036%" height="15" fill="rgb(238,205,33)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="655.50">di..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="629" width="2.7036%" height="15" fill="rgb(231,56,7)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="639.50">&lt;D..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="613" width="2.7036%" height="15" fill="rgb(244,186,29)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="623.50">&lt;s..</text></g><g><title>sha2::sha256::Engine256::finish (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="597" width="2.7036%" height="15" fill="rgb(234,111,31)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="607.50">sh..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="581" width="2.7036%" height="15" fill="rgb(241,149,10)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="591.50">bl..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="565" width="2.7036%" height="15" fill="rgb(249,206,44)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="575.50">sh..</text></g><g><title>sha2::sha256::compress256 (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="549" width="2.7036%" height="15" fill="rgb(251,153,30)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="559.50">sh..</text></g><g><title>sha2::sha256::x86::compress (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="533" width="2.7036%" height="15" fill="rgb(239,152,38)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="543.50">sh..</text></g><g><title>sha2::sha256::soft::compress (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="517" width="2.7036%" height="15" fill="rgb(249,139,47)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="527.50">sh..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="501" width="2.7036%" height="15" fill="rgb(244,64,35)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="511.50">sh..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (3,560,347 samples, 2.70%)</title><rect x="83.4550%" y="485" width="2.7036%" height="15" fill="rgb(216,46,15)" fg:x="109902892" fg:w="3560347"/><text x="83.7050%" y="495.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1,508,803 samples, 1.15%)</title><rect x="85.0128%" y="469" width="1.1457%" height="15" fill="rgb(250,74,19)" fg:x="111954436" fg:w="1508803"/><text x="85.2628%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="677" width="5.3205%" height="15" fill="rgb(249,42,33)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="687.50">std::io..</text></g><g><title>core::fmt::write (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="661" width="5.3205%" height="15" fill="rgb(242,149,17)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="671.50">core::f..</text></g><g><title>core::fmt::rt::Argument::fmt (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="645" width="5.3205%" height="15" fill="rgb(244,29,21)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="655.50">core::f..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="629" width="5.3205%" height="15" fill="rgb(220,130,37)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="639.50">&lt;std::i..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="613" width="5.3205%" height="15" fill="rgb(211,67,2)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="623.50">&lt;std::i..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="597" width="5.3205%" height="15" fill="rgb(235,68,52)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="607.50">&lt;std::i..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="581" width="5.3205%" height="15" fill="rgb(246,142,3)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="591.50">&lt;std::i..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="565" width="5.3205%" height="15" fill="rgb(241,25,7)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="575.50">&lt;std::i..</text></g><g><title>std::io::Write::write_all (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="549" width="5.3205%" height="15" fill="rgb(242,119,39)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="559.50">std::io..</text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="533" width="5.3205%" height="15" fill="rgb(241,98,45)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="543.50">&lt;std::s..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="517" width="5.3205%" height="15" fill="rgb(254,28,30)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="527.50">std::sy..</text></g><g><title>__libc_write (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="501" width="5.3205%" height="15" fill="rgb(241,142,54)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="511.50">__libc_..</text></g><g><title>__libc_write (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="485" width="5.3205%" height="15" fill="rgb(222,85,15)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="495.50">__libc_..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="469" width="5.3205%" height="15" fill="rgb(210,85,47)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="479.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="453" width="5.3205%" height="15" fill="rgb(224,206,25)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="463.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="437" width="5.3205%" height="15" fill="rgb(243,201,19)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="447.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="421" width="5.3205%" height="15" fill="rgb(236,59,4)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="431.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="405" width="5.3205%" height="15" fill="rgb(254,179,45)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="415.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="389" width="5.3205%" height="15" fill="rgb(226,14,10)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="399.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="373" width="5.3205%" height="15" fill="rgb(244,27,41)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="383.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="357" width="5.3205%" height="15" fill="rgb(235,35,32)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="367.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="341" width="5.3205%" height="15" fill="rgb(218,68,31)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="351.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="325" width="5.3205%" height="15" fill="rgb(207,120,37)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="335.50">[unknow..</text></g><g><title>[unknown] (7,006,595 samples, 5.32%)</title><rect x="86.1586%" y="309" width="5.3205%" height="15" fill="rgb(227,98,0)" fg:x="113463239" fg:w="7006595"/><text x="86.4086%" y="319.50">[unknow..</text></g><g><title>[unknown] (6,062,182 samples, 4.60%)</title><rect x="86.8757%" y="293" width="4.6033%" height="15" fill="rgb(207,7,3)" fg:x="114407652" fg:w="6062182"/><text x="87.1257%" y="303.50">[unkn..</text></g><g><title>[unknown] (3,835,733 samples, 2.91%)</title><rect x="88.5664%" y="277" width="2.9127%" height="15" fill="rgb(206,98,19)" fg:x="116634101" fg:w="3835733"/><text x="88.8164%" y="287.50">[u..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="261" width="2.0754%" height="15" fill="rgb(217,5,26)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="271.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="245" width="2.0754%" height="15" fill="rgb(235,190,38)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="255.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="229" width="2.0754%" height="15" fill="rgb(247,86,24)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="239.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="213" width="2.0754%" height="15" fill="rgb(205,101,16)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="223.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="197" width="2.0754%" height="15" fill="rgb(246,168,33)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="207.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="181" width="2.0754%" height="15" fill="rgb(231,114,1)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="191.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="165" width="2.0754%" height="15" fill="rgb(207,184,53)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="175.50">[..</text></g><g><title>[unknown] (2,733,126 samples, 2.08%)</title><rect x="89.4036%" y="149" width="2.0754%" height="15" fill="rgb(224,95,51)" fg:x="117736708" fg:w="2733126"/><text x="89.6536%" y="159.50">[..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (47,315 samples, 0.04%)</title><rect x="91.4790%" y="613" width="0.0359%" height="15" fill="rgb(212,188,45)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="623.50"></text></g><g><title>syscall (47,315 samples, 0.04%)</title><rect x="91.4790%" y="597" width="0.0359%" height="15" fill="rgb(223,154,38)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="607.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="581" width="0.0359%" height="15" fill="rgb(251,22,52)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="591.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="565" width="0.0359%" height="15" fill="rgb(229,209,22)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="575.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="549" width="0.0359%" height="15" fill="rgb(234,138,34)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="559.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="533" width="0.0359%" height="15" fill="rgb(212,95,11)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="543.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="517" width="0.0359%" height="15" fill="rgb(240,179,47)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="527.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="501" width="0.0359%" height="15" fill="rgb(240,163,11)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="511.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="485" width="0.0359%" height="15" fill="rgb(236,37,12)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="495.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="469" width="0.0359%" height="15" fill="rgb(232,164,16)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="479.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="453" width="0.0359%" height="15" fill="rgb(244,205,15)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="463.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="437" width="0.0359%" height="15" fill="rgb(223,117,47)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="447.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="421" width="0.0359%" height="15" fill="rgb(244,107,35)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="431.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="405" width="0.0359%" height="15" fill="rgb(205,140,8)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="415.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="389" width="0.0359%" height="15" fill="rgb(228,84,46)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="399.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="373" width="0.0359%" height="15" fill="rgb(254,188,9)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="383.50"></text></g><g><title>[unknown] (47,315 samples, 0.04%)</title><rect x="91.4790%" y="357" width="0.0359%" height="15" fill="rgb(206,112,54)" fg:x="120469834" fg:w="47315"/><text x="91.7290%" y="367.50"></text></g><g><title>std::io::stdio::Stderr::lock (371,235 samples, 0.28%)</title><rect x="91.4790%" y="677" width="0.2819%" height="15" fill="rgb(216,84,49)" fg:x="120469834" fg:w="371235"/><text x="91.7290%" y="687.50"></text></g><g><title>std::sync::reentrant_lock::ReentrantLock&lt;T&gt;::lock (371,235 samples, 0.28%)</title><rect x="91.4790%" y="661" width="0.2819%" height="15" fill="rgb(214,194,35)" fg:x="120469834" fg:w="371235"/><text x="91.7290%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (371,235 samples, 0.28%)</title><rect x="91.4790%" y="645" width="0.2819%" height="15" fill="rgb(249,28,3)" fg:x="120469834" fg:w="371235"/><text x="91.7290%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (371,235 samples, 0.28%)</title><rect x="91.4790%" y="629" width="0.2819%" height="15" fill="rgb(222,56,52)" fg:x="120469834" fg:w="371235"/><text x="91.7290%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (323,920 samples, 0.25%)</title><rect x="91.5150%" y="613" width="0.2460%" height="15" fill="rgb(245,217,50)" fg:x="120517149" fg:w="323920"/><text x="91.7650%" y="623.50"></text></g><g><title>core::hint::spin_loop (323,920 samples, 0.25%)</title><rect x="91.5150%" y="597" width="0.2460%" height="15" fill="rgb(213,201,24)" fg:x="120517149" fg:w="323920"/><text x="91.7650%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (323,920 samples, 0.25%)</title><rect x="91.5150%" y="581" width="0.2460%" height="15" fill="rgb(248,116,28)" fg:x="120517149" fg:w="323920"/><text x="91.7650%" y="591.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (242,200 samples, 0.18%)</title><rect x="91.7609%" y="629" width="0.1839%" height="15" fill="rgb(219,72,43)" fg:x="120841069" fg:w="242200"/><text x="92.0109%" y="639.50"></text></g><g><title>syscall (242,200 samples, 0.18%)</title><rect x="91.7609%" y="613" width="0.1839%" height="15" fill="rgb(209,138,14)" fg:x="120841069" fg:w="242200"/><text x="92.0109%" y="623.50"></text></g><g><title>[unknown] (242,200 samples, 0.18%)</title><rect x="91.7609%" y="597" width="0.1839%" height="15" fill="rgb(222,18,33)" fg:x="120841069" fg:w="242200"/><text x="92.0109%" y="607.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="581" width="0.0518%" height="15" fill="rgb(213,199,7)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="591.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="565" width="0.0518%" height="15" fill="rgb(250,110,10)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="575.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="549" width="0.0518%" height="15" fill="rgb(248,123,6)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="559.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="533" width="0.0518%" height="15" fill="rgb(206,91,31)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="543.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="517" width="0.0518%" height="15" fill="rgb(211,154,13)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="527.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="501" width="0.0518%" height="15" fill="rgb(225,148,7)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="511.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="485" width="0.0518%" height="15" fill="rgb(220,160,43)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="495.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="469" width="0.0518%" height="15" fill="rgb(213,52,39)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="479.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="453" width="0.0518%" height="15" fill="rgb(243,137,7)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="463.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="437" width="0.0518%" height="15" fill="rgb(230,79,13)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="447.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="421" width="0.0518%" height="15" fill="rgb(247,105,23)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="431.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="405" width="0.0518%" height="15" fill="rgb(223,179,41)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="415.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="389" width="0.0518%" height="15" fill="rgb(218,9,34)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="399.50"></text></g><g><title>[unknown] (68,256 samples, 0.05%)</title><rect x="91.8930%" y="373" width="0.0518%" height="15" fill="rgb(222,106,8)" fg:x="121015013" fg:w="68256"/><text x="92.1430%" y="383.50"></text></g><g><title>core::hint::spin_loop (3,074,795 samples, 2.33%)</title><rect x="91.9448%" y="613" width="2.3349%" height="15" fill="rgb(211,220,0)" fg:x="121083269" fg:w="3074795"/><text x="92.1948%" y="623.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3,074,795 samples, 2.33%)</title><rect x="91.9448%" y="597" width="2.3349%" height="15" fill="rgb(229,52,16)" fg:x="121083269" fg:w="3074795"/><text x="92.1948%" y="607.50">c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="885" width="86.4489%" height="15" fill="rgb(212,155,18)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="869" width="86.4489%" height="15" fill="rgb(242,21,14)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="853" width="86.4489%" height="15" fill="rgb(222,19,48)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="863.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="837" width="86.4489%" height="15" fill="rgb(232,45,27)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="847.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="821" width="86.4489%" height="15" fill="rgb(249,103,42)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="805" width="86.4489%" height="15" fill="rgb(246,81,33)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="789" width="86.4489%" height="15" fill="rgb(252,33,42)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="773" width="86.4489%" height="15" fill="rgb(209,212,41)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="783.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (113,845,554 samples, 86.45%)</title><rect x="8.0175%" y="757" width="86.4489%" height="15" fill="rgb(207,154,6)" fg:x="10558322" fg:w="113845554"/><text x="8.2675%" y="767.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (113,160,318 samples, 85.93%)</title><rect x="8.5378%" y="741" width="85.9285%" height="15" fill="rgb(223,64,47)" fg:x="11243558" fg:w="113160318"/><text x="8.7878%" y="751.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (113,160,318 samples, 85.93%)</title><rect x="8.5378%" y="725" width="85.9285%" height="15" fill="rgb(211,161,38)" fg:x="11243558" fg:w="113160318"/><text x="8.7878%" y="735.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (60,057,445 samples, 45.60%)</title><rect x="48.8616%" y="709" width="45.6048%" height="15" fill="rgb(219,138,40)" fg:x="64346431" fg:w="60057445"/><text x="49.1116%" y="719.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (22,120,624 samples, 16.80%)</title><rect x="77.6690%" y="693" width="16.7973%" height="15" fill="rgb(241,228,46)" fg:x="102283252" fg:w="22120624"/><text x="77.9190%" y="703.50">lab4::student::Student::bu..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (3,562,807 samples, 2.71%)</title><rect x="91.7609%" y="677" width="2.7054%" height="15" fill="rgb(223,209,38)" fg:x="120841069" fg:w="3562807"/><text x="92.0109%" y="687.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (3,562,807 samples, 2.71%)</title><rect x="91.7609%" y="661" width="2.7054%" height="15" fill="rgb(236,164,45)" fg:x="120841069" fg:w="3562807"/><text x="92.0109%" y="671.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (3,562,807 samples, 2.71%)</title><rect x="91.7609%" y="645" width="2.7054%" height="15" fill="rgb(231,15,5)" fg:x="120841069" fg:w="3562807"/><text x="92.0109%" y="655.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (3,320,607 samples, 2.52%)</title><rect x="91.9448%" y="629" width="2.5215%" height="15" fill="rgb(252,35,15)" fg:x="121083269" fg:w="3320607"/><text x="92.1948%" y="639.50">st..</text></g><g><title>core::sync::atomic::AtomicU32::load (245,812 samples, 0.19%)</title><rect x="94.2797%" y="613" width="0.1867%" height="15" fill="rgb(248,181,18)" fg:x="124158064" fg:w="245812"/><text x="94.5297%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (245,812 samples, 0.19%)</title><rect x="94.2797%" y="597" width="0.1867%" height="15" fill="rgb(233,39,42)" fg:x="124158064" fg:w="245812"/><text x="94.5297%" y="607.50"></text></g><g><title>__GI___get_nprocs (474,767 samples, 0.36%)</title><rect x="94.4664%" y="773" width="0.3605%" height="15" fill="rgb(238,110,33)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="783.50"></text></g><g><title>__clock_gettime_2 (474,767 samples, 0.36%)</title><rect x="94.4664%" y="757" width="0.3605%" height="15" fill="rgb(233,195,10)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="767.50"></text></g><g><title>__vdso_clock_gettime (474,767 samples, 0.36%)</title><rect x="94.4664%" y="741" width="0.3605%" height="15" fill="rgb(254,105,3)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="751.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="725" width="0.3605%" height="15" fill="rgb(221,225,9)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="735.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="709" width="0.3605%" height="15" fill="rgb(224,227,45)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="719.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="693" width="0.3605%" height="15" fill="rgb(229,198,43)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="703.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="677" width="0.3605%" height="15" fill="rgb(206,209,35)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="687.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="661" width="0.3605%" height="15" fill="rgb(245,195,53)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="671.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="645" width="0.3605%" height="15" fill="rgb(240,92,26)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="655.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="629" width="0.3605%" height="15" fill="rgb(207,40,23)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="639.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="613" width="0.3605%" height="15" fill="rgb(223,111,35)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="623.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="597" width="0.3605%" height="15" fill="rgb(229,147,28)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="607.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="581" width="0.3605%" height="15" fill="rgb(211,29,28)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="591.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="565" width="0.3605%" height="15" fill="rgb(228,72,33)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="575.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="549" width="0.3605%" height="15" fill="rgb(205,214,31)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="559.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="533" width="0.3605%" height="15" fill="rgb(224,111,15)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="543.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="517" width="0.3605%" height="15" fill="rgb(253,21,26)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="527.50"></text></g><g><title>[unknown] (474,767 samples, 0.36%)</title><rect x="94.4664%" y="501" width="0.3605%" height="15" fill="rgb(245,139,43)" fg:x="124403876" fg:w="474767"/><text x="94.7164%" y="511.50"></text></g><g><title>__GI___mmap64 (1,567,647 samples, 1.19%)</title><rect x="94.8269%" y="757" width="1.1904%" height="15" fill="rgb(252,170,7)" fg:x="124878643" fg:w="1567647"/><text x="95.0769%" y="767.50"></text></g><g><title>[unknown] (1,567,647 samples, 1.19%)</title><rect x="94.8269%" y="741" width="1.1904%" height="15" fill="rgb(231,118,14)" fg:x="124878643" fg:w="1567647"/><text x="95.0769%" y="751.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="725" width="0.9098%" height="15" fill="rgb(238,83,0)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="735.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="709" width="0.9098%" height="15" fill="rgb(221,39,39)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="719.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="693" width="0.9098%" height="15" fill="rgb(222,119,46)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="703.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="677" width="0.9098%" height="15" fill="rgb(222,165,49)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="687.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="661" width="0.9098%" height="15" fill="rgb(219,113,52)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="671.50"></text></g><g><title>[unknown] (1,198,069 samples, 0.91%)</title><rect x="95.1075%" y="645" width="0.9098%" height="15" fill="rgb(214,7,15)" fg:x="125248221" fg:w="1198069"/><text x="95.3575%" y="655.50"></text></g><g><title>[unknown] (1,049,238 samples, 0.80%)</title><rect x="95.2205%" y="629" width="0.7967%" height="15" fill="rgb(235,32,4)" fg:x="125397052" fg:w="1049238"/><text x="95.4705%" y="639.50"></text></g><g><title>[unknown] (739,856 samples, 0.56%)</title><rect x="95.4555%" y="613" width="0.5618%" height="15" fill="rgb(238,90,54)" fg:x="125706434" fg:w="739856"/><text x="95.7055%" y="623.50"></text></g><g><title>[unknown] (739,856 samples, 0.56%)</title><rect x="95.4555%" y="597" width="0.5618%" height="15" fill="rgb(213,208,19)" fg:x="125706434" fg:w="739856"/><text x="95.7055%" y="607.50"></text></g><g><title>[unknown] (739,856 samples, 0.56%)</title><rect x="95.4555%" y="581" width="0.5618%" height="15" fill="rgb(233,156,4)" fg:x="125706434" fg:w="739856"/><text x="95.7055%" y="591.50"></text></g><g><title>[unknown] (242,154 samples, 0.18%)</title><rect x="95.8334%" y="565" width="0.1839%" height="15" fill="rgb(207,194,5)" fg:x="126204136" fg:w="242154"/><text x="96.0834%" y="575.50"></text></g><g><title>[unknown] (242,154 samples, 0.18%)</title><rect x="95.8334%" y="549" width="0.1839%" height="15" fill="rgb(206,111,30)" fg:x="126204136" fg:w="242154"/><text x="96.0834%" y="559.50"></text></g><g><title>[unknown] (242,154 samples, 0.18%)</title><rect x="95.8334%" y="533" width="0.1839%" height="15" fill="rgb(243,70,54)" fg:x="126204136" fg:w="242154"/><text x="96.0834%" y="543.50"></text></g><g><title>__GI___libc_malloc (2,426,267 samples, 1.84%)</title><rect x="94.4664%" y="821" width="1.8424%" height="15" fill="rgb(242,28,8)" fg:x="124403876" fg:w="2426267"/><text x="94.7164%" y="831.50">_..</text></g><g><title>tcache_init.part.0 (2,426,267 samples, 1.84%)</title><rect x="94.4664%" y="805" width="1.8424%" height="15" fill="rgb(219,106,18)" fg:x="124403876" fg:w="2426267"/><text x="94.7164%" y="815.50">t..</text></g><g><title>arena_get2.part.0 (2,426,267 samples, 1.84%)</title><rect x="94.4664%" y="789" width="1.8424%" height="15" fill="rgb(244,222,10)" fg:x="124403876" fg:w="2426267"/><text x="94.7164%" y="799.50">a..</text></g><g><title>new_heap (1,951,500 samples, 1.48%)</title><rect x="94.8269%" y="773" width="1.4819%" height="15" fill="rgb(236,179,52)" fg:x="124878643" fg:w="1951500"/><text x="95.0769%" y="783.50"></text></g><g><title>__GI_munmap (383,853 samples, 0.29%)</title><rect x="96.0173%" y="757" width="0.2915%" height="15" fill="rgb(213,23,39)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="767.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="741" width="0.2915%" height="15" fill="rgb(238,48,10)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="751.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="725" width="0.2915%" height="15" fill="rgb(251,196,23)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="735.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="709" width="0.2915%" height="15" fill="rgb(250,152,24)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="719.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="693" width="0.2915%" height="15" fill="rgb(209,150,17)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="703.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="677" width="0.2915%" height="15" fill="rgb(234,202,34)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="687.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="661" width="0.2915%" height="15" fill="rgb(253,148,53)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="671.50"></text></g><g><title>[unknown] (383,853 samples, 0.29%)</title><rect x="96.0173%" y="645" width="0.2915%" height="15" fill="rgb(218,129,16)" fg:x="126446290" fg:w="383853"/><text x="96.2673%" y="655.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (2,999,331 samples, 2.28%)</title><rect x="94.4664%" y="853" width="2.2775%" height="15" fill="rgb(216,85,19)" fg:x="124403876" fg:w="2999331"/><text x="94.7164%" y="863.50">s..</text></g><g><title>pthread_getattr_np (2,999,331 samples, 2.28%)</title><rect x="94.4664%" y="837" width="2.2775%" height="15" fill="rgb(235,228,7)" fg:x="124403876" fg:w="2999331"/><text x="94.7164%" y="847.50">p..</text></g><g><title>__pthread_getaffinity_new (573,064 samples, 0.44%)</title><rect x="96.3087%" y="821" width="0.4352%" height="15" fill="rgb(245,175,0)" fg:x="126830143" fg:w="573064"/><text x="96.5587%" y="831.50"></text></g><g><title>[unknown] (573,064 samples, 0.44%)</title><rect x="96.3087%" y="805" width="0.4352%" height="15" fill="rgb(208,168,36)" fg:x="126830143" fg:w="573064"/><text x="96.5587%" y="815.50"></text></g><g><title>__GI___clone (120,148,352 samples, 91.23%)</title><rect x="6.0379%" y="933" width="91.2349%" height="15" fill="rgb(246,171,24)" fg:x="7951383" fg:w="120148352"/><text x="6.2879%" y="943.50">__GI___clone</text></g><g><title>start_thread (119,677,386 samples, 90.88%)</title><rect x="6.3955%" y="917" width="90.8773%" height="15" fill="rgb(215,142,24)" fg:x="8422349" fg:w="119677386"/><text x="6.6455%" y="927.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (117,541,413 samples, 89.26%)</title><rect x="8.0175%" y="901" width="89.2553%" height="15" fill="rgb(250,187,7)" fg:x="10558322" fg:w="117541413"/><text x="8.2675%" y="911.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (3,695,859 samples, 2.81%)</title><rect x="94.4664%" y="885" width="2.8065%" height="15" fill="rgb(228,66,33)" fg:x="124403876" fg:w="3695859"/><text x="94.7164%" y="895.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (3,695,859 samples, 2.81%)</title><rect x="94.4664%" y="869" width="2.8065%" height="15" fill="rgb(234,215,21)" fg:x="124403876" fg:w="3695859"/><text x="94.7164%" y="879.50">st..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (696,528 samples, 0.53%)</title><rect x="96.7439%" y="853" width="0.5289%" height="15" fill="rgb(222,191,20)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="863.50"></text></g><g><title>__GI___mprotect (696,528 samples, 0.53%)</title><rect x="96.7439%" y="837" width="0.5289%" height="15" fill="rgb(245,79,54)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="847.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="821" width="0.5289%" height="15" fill="rgb(240,10,37)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="831.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="805" width="0.5289%" height="15" fill="rgb(214,192,32)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="815.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="789" width="0.5289%" height="15" fill="rgb(209,36,54)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="799.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="773" width="0.5289%" height="15" fill="rgb(220,10,11)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="783.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="757" width="0.5289%" height="15" fill="rgb(221,106,17)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="767.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="741" width="0.5289%" height="15" fill="rgb(251,142,44)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="751.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="725" width="0.5289%" height="15" fill="rgb(238,13,15)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="735.50"></text></g><g><title>[unknown] (696,528 samples, 0.53%)</title><rect x="96.7439%" y="709" width="0.5289%" height="15" fill="rgb(208,107,27)" fg:x="127403207" fg:w="696528"/><text x="96.9939%" y="719.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (316,844 samples, 0.24%)</title><rect x="97.2728%" y="661" width="0.2406%" height="15" fill="rgb(205,136,37)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="671.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (316,844 samples, 0.24%)</title><rect x="97.2728%" y="645" width="0.2406%" height="15" fill="rgb(250,205,27)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="655.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (316,844 samples, 0.24%)</title><rect x="97.2728%" y="629" width="0.2406%" height="15" fill="rgb(210,80,43)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="639.50"></text></g><g><title>__pthread_clockjoin_ex (316,844 samples, 0.24%)</title><rect x="97.2728%" y="613" width="0.2406%" height="15" fill="rgb(247,160,36)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="623.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="597" width="0.2406%" height="15" fill="rgb(234,13,49)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="607.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="581" width="0.2406%" height="15" fill="rgb(234,122,0)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="591.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="565" width="0.2406%" height="15" fill="rgb(207,146,38)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="575.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="549" width="0.2406%" height="15" fill="rgb(207,177,25)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="559.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="533" width="0.2406%" height="15" fill="rgb(211,178,42)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="543.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="517" width="0.2406%" height="15" fill="rgb(230,69,54)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="527.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="501" width="0.2406%" height="15" fill="rgb(214,135,41)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="511.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="485" width="0.2406%" height="15" fill="rgb(237,67,25)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="495.50"></text></g><g><title>[unknown] (316,844 samples, 0.24%)</title><rect x="97.2728%" y="469" width="0.2406%" height="15" fill="rgb(222,189,50)" fg:x="128099735" fg:w="316844"/><text x="97.5228%" y="479.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="453" width="0.0278%" height="15" fill="rgb(245,148,34)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="463.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="437" width="0.0278%" height="15" fill="rgb(222,29,6)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="447.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="421" width="0.0278%" height="15" fill="rgb(221,189,43)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="431.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="405" width="0.0278%" height="15" fill="rgb(207,36,27)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="415.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="389" width="0.0278%" height="15" fill="rgb(217,90,24)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="399.50"></text></g><g><title>[unknown] (36,625 samples, 0.03%)</title><rect x="97.4856%" y="373" width="0.0278%" height="15" fill="rgb(224,66,35)" fg:x="128379954" fg:w="36625"/><text x="97.7356%" y="383.50"></text></g><g><title>__GI___mmap64 (142,703 samples, 0.11%)</title><rect x="97.5134%" y="549" width="0.1084%" height="15" fill="rgb(221,13,50)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="559.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="533" width="0.1084%" height="15" fill="rgb(236,68,49)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="543.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="517" width="0.1084%" height="15" fill="rgb(229,146,28)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="527.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="501" width="0.1084%" height="15" fill="rgb(225,31,38)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="511.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="485" width="0.1084%" height="15" fill="rgb(250,208,3)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="495.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="469" width="0.1084%" height="15" fill="rgb(246,54,23)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="479.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="453" width="0.1084%" height="15" fill="rgb(243,76,11)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="463.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="437" width="0.1084%" height="15" fill="rgb(245,21,50)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="447.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="421" width="0.1084%" height="15" fill="rgb(228,9,43)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="431.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="405" width="0.1084%" height="15" fill="rgb(208,100,47)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="415.50"></text></g><g><title>[unknown] (142,703 samples, 0.11%)</title><rect x="97.5134%" y="389" width="0.1084%" height="15" fill="rgb(232,26,8)" fg:x="128416579" fg:w="142703"/><text x="97.7634%" y="399.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="373" width="0.0113%" height="15" fill="rgb(216,166,38)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="383.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="357" width="0.0113%" height="15" fill="rgb(251,202,51)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="367.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="341" width="0.0113%" height="15" fill="rgb(254,216,34)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="351.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="325" width="0.0113%" height="15" fill="rgb(251,32,27)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="335.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="309" width="0.0113%" height="15" fill="rgb(208,127,28)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="319.50"></text></g><g><title>[unknown] (14,874 samples, 0.01%)</title><rect x="97.6105%" y="293" width="0.0113%" height="15" fill="rgb(224,137,22)" fg:x="128544408" fg:w="14874"/><text x="97.8605%" y="303.50"></text></g><g><title>std::panic::catch_unwind (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="805" width="1.2220%" height="15" fill="rgb(254,70,32)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="815.50"></text></g><g><title>std::panicking::try (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="789" width="1.2220%" height="15" fill="rgb(229,75,37)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="773" width="1.2220%" height="15" fill="rgb(252,64,23)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="757" width="1.2220%" height="15" fill="rgb(232,162,48)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="767.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="741" width="1.2220%" height="15" fill="rgb(246,160,12)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="751.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="725" width="1.2220%" height="15" fill="rgb(247,166,0)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="709" width="1.2220%" height="15" fill="rgb(249,219,21)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="719.50"></text></g><g><title>lab4::main (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="693" width="1.2220%" height="15" fill="rgb(205,209,3)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="703.50"></text></g><g><title>lab4::hackathon (1,609,240 samples, 1.22%)</title><rect x="97.2728%" y="677" width="1.2220%" height="15" fill="rgb(243,44,1)" fg:x="128099735" fg:w="1609240"/><text x="97.5228%" y="687.50"></text></g><g><title>std::thread::spawn (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="661" width="0.9814%" height="15" fill="rgb(206,159,16)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="671.50"></text></g><g><title>std::thread::Builder::spawn (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="645" width="0.9814%" height="15" fill="rgb(244,77,30)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="655.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="629" width="0.9814%" height="15" fill="rgb(218,69,12)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="639.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="613" width="0.9814%" height="15" fill="rgb(212,87,7)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="623.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="597" width="0.9814%" height="15" fill="rgb(245,114,25)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="607.50"></text></g><g><title>__pthread_create_2_1 (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="581" width="0.9814%" height="15" fill="rgb(210,61,42)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="591.50"></text></g><g><title>allocate_stack (1,292,396 samples, 0.98%)</title><rect x="97.5134%" y="565" width="0.9814%" height="15" fill="rgb(211,52,33)" fg:x="128416579" fg:w="1292396"/><text x="97.7634%" y="575.50"></text></g><g><title>setup_stack_prot (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="549" width="0.8730%" height="15" fill="rgb(234,58,33)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="559.50"></text></g><g><title>__GI___mprotect (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="533" width="0.8730%" height="15" fill="rgb(220,115,36)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="543.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="517" width="0.8730%" height="15" fill="rgb(243,153,54)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="527.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="501" width="0.8730%" height="15" fill="rgb(251,47,18)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="511.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="485" width="0.8730%" height="15" fill="rgb(242,102,42)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="495.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="469" width="0.8730%" height="15" fill="rgb(234,31,38)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="479.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="453" width="0.8730%" height="15" fill="rgb(221,117,51)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="463.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="437" width="0.8730%" height="15" fill="rgb(212,20,18)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="447.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="421" width="0.8730%" height="15" fill="rgb(245,133,36)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="431.50"></text></g><g><title>[unknown] (1,149,693 samples, 0.87%)</title><rect x="97.6218%" y="405" width="0.8730%" height="15" fill="rgb(212,6,19)" fg:x="128559282" fg:w="1149693"/><text x="97.8718%" y="415.50"></text></g><g><title>__libc_start_main (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="917" width="1.9409%" height="15" fill="rgb(218,1,36)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="927.50">_..</text></g><g><title>main (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="901" width="1.9409%" height="15" fill="rgb(246,84,54)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="911.50">m..</text></g><g><title>std::rt::lang_start_internal (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="885" width="1.9409%" height="15" fill="rgb(242,110,6)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="895.50">s..</text></g><g><title>std::panic::catch_unwind (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="869" width="1.9409%" height="15" fill="rgb(214,47,5)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="879.50">s..</text></g><g><title>std::panicking::try (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="853" width="1.9409%" height="15" fill="rgb(218,159,25)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="863.50">s..</text></g><g><title>std::panicking::try::do_call (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="837" width="1.9409%" height="15" fill="rgb(215,211,28)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="847.50">s..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (2,556,055 samples, 1.94%)</title><rect x="97.2728%" y="821" width="1.9409%" height="15" fill="rgb(238,59,32)" fg:x="128099735" fg:w="2556055"/><text x="97.5228%" y="831.50">s..</text></g><g><title>std::rt::init (946,815 samples, 0.72%)</title><rect x="98.4948%" y="805" width="0.7190%" height="15" fill="rgb(226,82,3)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="815.50"></text></g><g><title>std::sys::pal::unix::init (946,815 samples, 0.72%)</title><rect x="98.4948%" y="789" width="0.7190%" height="15" fill="rgb(240,164,32)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="799.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (946,815 samples, 0.72%)</title><rect x="98.4948%" y="773" width="0.7190%" height="15" fill="rgb(232,46,7)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="783.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (946,815 samples, 0.72%)</title><rect x="98.4948%" y="757" width="0.7190%" height="15" fill="rgb(229,129,53)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="767.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (946,815 samples, 0.72%)</title><rect x="98.4948%" y="741" width="0.7190%" height="15" fill="rgb(234,188,29)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="751.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (946,815 samples, 0.72%)</title><rect x="98.4948%" y="725" width="0.7190%" height="15" fill="rgb(246,141,4)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="735.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (946,815 samples, 0.72%)</title><rect x="98.4948%" y="709" width="0.7190%" height="15" fill="rgb(229,23,39)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="719.50"></text></g><g><title>pthread_getattr_np (946,815 samples, 0.72%)</title><rect x="98.4948%" y="693" width="0.7190%" height="15" fill="rgb(206,12,3)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="703.50"></text></g><g><title>_IO_new_fopen (946,815 samples, 0.72%)</title><rect x="98.4948%" y="677" width="0.7190%" height="15" fill="rgb(252,226,20)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="687.50"></text></g><g><title>malloc_hook_ini (946,815 samples, 0.72%)</title><rect x="98.4948%" y="661" width="0.7190%" height="15" fill="rgb(216,123,35)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="671.50"></text></g><g><title>ptmalloc_init.part.0 (946,815 samples, 0.72%)</title><rect x="98.4948%" y="645" width="0.7190%" height="15" fill="rgb(212,68,40)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="655.50"></text></g><g><title>__GI__dl_addr (946,815 samples, 0.72%)</title><rect x="98.4948%" y="629" width="0.7190%" height="15" fill="rgb(254,125,32)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="639.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="613" width="0.7190%" height="15" fill="rgb(253,97,22)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="623.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="597" width="0.7190%" height="15" fill="rgb(241,101,14)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="607.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="581" width="0.7190%" height="15" fill="rgb(238,103,29)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="591.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="565" width="0.7190%" height="15" fill="rgb(233,195,47)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="575.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="549" width="0.7190%" height="15" fill="rgb(246,218,30)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="559.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="533" width="0.7190%" height="15" fill="rgb(219,145,47)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="543.50"></text></g><g><title>[unknown] (946,815 samples, 0.72%)</title><rect x="98.4948%" y="517" width="0.7190%" height="15" fill="rgb(243,12,26)" fg:x="129708975" fg:w="946815"/><text x="98.7448%" y="527.50"></text></g><g><title>lab4 (131,662,379 samples, 99.98%)</title><rect x="0.0000%" y="949" width="99.9781%" height="15" fill="rgb(214,87,16)" fg:x="0" fg:w="131662379"/><text x="0.2500%" y="959.50">lab4</text></g><g><title>_start (3,562,644 samples, 2.71%)</title><rect x="97.2728%" y="933" width="2.7053%" height="15" fill="rgb(208,99,42)" fg:x="128099735" fg:w="3562644"/><text x="97.5228%" y="943.50">_s..</text></g><g><title>_dl_start (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="917" width="0.7644%" height="15" fill="rgb(253,99,2)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="927.50"></text></g><g><title>_dl_sysdep_start (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="901" width="0.7644%" height="15" fill="rgb(220,168,23)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="911.50"></text></g><g><title>dl_main (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="885" width="0.7644%" height="15" fill="rgb(242,38,24)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="895.50"></text></g><g><title>_dl_receive_error (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="869" width="0.7644%" height="15" fill="rgb(225,182,9)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="879.50"></text></g><g><title>version_check_doit (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="853" width="0.7644%" height="15" fill="rgb(243,178,37)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="863.50"></text></g><g><title>_dl_check_all_versions (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="837" width="0.7644%" height="15" fill="rgb(232,139,19)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="847.50"></text></g><g><title>_dl_check_map_versions (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="821" width="0.7644%" height="15" fill="rgb(225,201,24)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="831.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="805" width="0.7644%" height="15" fill="rgb(221,47,46)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="815.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="789" width="0.7644%" height="15" fill="rgb(249,23,13)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="799.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="773" width="0.7644%" height="15" fill="rgb(219,9,5)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="783.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="757" width="0.7644%" height="15" fill="rgb(254,171,16)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="767.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="741" width="0.7644%" height="15" fill="rgb(230,171,20)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="751.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="725" width="0.7644%" height="15" fill="rgb(210,71,41)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="735.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="709" width="0.7644%" height="15" fill="rgb(206,173,20)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="719.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="693" width="0.7644%" height="15" fill="rgb(233,88,34)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="703.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="677" width="0.7644%" height="15" fill="rgb(223,209,46)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="687.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="661" width="0.7644%" height="15" fill="rgb(250,43,18)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="671.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="645" width="0.7644%" height="15" fill="rgb(208,13,10)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="655.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="629" width="0.7644%" height="15" fill="rgb(212,200,36)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="639.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="613" width="0.7644%" height="15" fill="rgb(225,90,30)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="623.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="597" width="0.7644%" height="15" fill="rgb(236,182,39)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="607.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="581" width="0.7644%" height="15" fill="rgb(212,144,35)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="591.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="565" width="0.7644%" height="15" fill="rgb(228,63,44)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="575.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="549" width="0.7644%" height="15" fill="rgb(228,109,6)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="559.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="533" width="0.7644%" height="15" fill="rgb(238,117,24)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="543.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="517" width="0.7644%" height="15" fill="rgb(242,26,26)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="527.50"></text></g><g><title>[unknown] (1,006,589 samples, 0.76%)</title><rect x="99.2138%" y="501" width="0.7644%" height="15" fill="rgb(221,92,48)" fg:x="130655790" fg:w="1006589"/><text x="99.4638%" y="511.50"></text></g><g><title>all (131,691,199 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(209,209,32)" fg:x="0" fg:w="131691199"/><text x="0.2500%" y="975.50"></text></g><g><title>perf-exec (28,820 samples, 0.02%)</title><rect x="99.9781%" y="949" width="0.0219%" height="15" fill="rgb(221,70,22)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="959.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="933" width="0.0219%" height="15" fill="rgb(248,145,5)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="943.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="917" width="0.0219%" height="15" fill="rgb(226,116,26)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="927.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="901" width="0.0219%" height="15" fill="rgb(244,5,17)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="911.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="885" width="0.0219%" height="15" fill="rgb(252,159,33)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="895.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="869" width="0.0219%" height="15" fill="rgb(206,71,0)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="879.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="853" width="0.0219%" height="15" fill="rgb(233,118,54)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="863.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="837" width="0.0219%" height="15" fill="rgb(234,83,48)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="847.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="821" width="0.0219%" height="15" fill="rgb(228,3,54)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="831.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="805" width="0.0219%" height="15" fill="rgb(226,155,13)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="815.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="789" width="0.0219%" height="15" fill="rgb(241,28,37)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="799.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="773" width="0.0219%" height="15" fill="rgb(233,93,10)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="783.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="757" width="0.0219%" height="15" fill="rgb(225,113,19)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="767.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="741" width="0.0219%" height="15" fill="rgb(241,2,18)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="751.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="725" width="0.0219%" height="15" fill="rgb(228,207,21)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="735.50"></text></g><g><title>[unknown] (28,820 samples, 0.02%)</title><rect x="99.9781%" y="709" width="0.0219%" height="15" fill="rgb(213,211,35)" fg:x="131662379" fg:w="28820"/><text x="100.2281%" y="719.50"></text></g></svg></svg>